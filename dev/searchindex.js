Search.setIndex({"docnames": ["about", "auto_examples/applications/plot_IL2", "auto_examples/applications/plot_covid", "auto_examples/applications/plot_image_compression", "auto_examples/applications/sg_execution_times", "auto_examples/decomposition/plot_cp_line_search", "auto_examples/decomposition/plot_guide_for_constrained_cp", "auto_examples/decomposition/plot_nn_cp_hals", "auto_examples/decomposition/plot_nn_tucker", "auto_examples/decomposition/plot_parafac2", "auto_examples/decomposition/plot_permute_factors", "auto_examples/decomposition/sg_execution_times", "auto_examples/index", "auto_examples/plot_tensor", "auto_examples/regression/plot_cp_regression", "auto_examples/regression/plot_tucker_regression", "auto_examples/regression/sg_execution_times", "auto_examples/sg_execution_times", "development_guide/backend_system", "development_guide/contributing", "development_guide/documentation", "development_guide/index", "home", "index", "installation", "modules/api", "modules/generated/parafac2-function", "modules/generated/tensorly.abs", "modules/generated/tensorly.all", "modules/generated/tensorly.arange", "modules/generated/tensorly.argmax", "modules/generated/tensorly.argmin", "modules/generated/tensorly.backend_context", "modules/generated/tensorly.base.fold", "modules/generated/tensorly.base.partial_fold", "modules/generated/tensorly.base.partial_tensor_to_vec", "modules/generated/tensorly.base.partial_unfold", "modules/generated/tensorly.base.partial_vec_to_tensor", "modules/generated/tensorly.base.tensor_to_vec", "modules/generated/tensorly.base.unfold", "modules/generated/tensorly.base.vec_to_tensor", "modules/generated/tensorly.check_random_state", "modules/generated/tensorly.clip", "modules/generated/tensorly.concatenate", "modules/generated/tensorly.conj", "modules/generated/tensorly.context", "modules/generated/tensorly.contrib.decomposition.tensor_train_cross", "modules/generated/tensorly.contrib.sparse.decomposition.non_negative_parafac", "modules/generated/tensorly.contrib.sparse.decomposition.non_negative_tucker", "modules/generated/tensorly.contrib.sparse.decomposition.parafac", "modules/generated/tensorly.contrib.sparse.decomposition.partial_tucker", "modules/generated/tensorly.contrib.sparse.decomposition.robust_pca", "modules/generated/tensorly.contrib.sparse.decomposition.symmetric_parafac_power_iteration", "modules/generated/tensorly.contrib.sparse.decomposition.tucker", "modules/generated/tensorly.copy", "modules/generated/tensorly.cp_tensor.cp_mode_dot", "modules/generated/tensorly.cp_tensor.cp_norm", "modules/generated/tensorly.cp_tensor.cp_normalize", "modules/generated/tensorly.cp_tensor.cp_permute_factors", "modules/generated/tensorly.cp_tensor.cp_to_tensor", "modules/generated/tensorly.cp_tensor.cp_to_unfolded", "modules/generated/tensorly.cp_tensor.cp_to_vec", "modules/generated/tensorly.cp_tensor.unfolding_dot_khatri_rao", "modules/generated/tensorly.datasets.synthetic.gen_image", "modules/generated/tensorly.decomposition.CP", "modules/generated/tensorly.decomposition.CPPower", "modules/generated/tensorly.decomposition.CP_NN_HALS", "modules/generated/tensorly.decomposition.ConstrainedCP", "modules/generated/tensorly.decomposition.Parafac2", "modules/generated/tensorly.decomposition.RandomizedCP", "modules/generated/tensorly.decomposition.SymmetricCP", "modules/generated/tensorly.decomposition.TensorTrain", "modules/generated/tensorly.decomposition.Tucker", "modules/generated/tensorly.decomposition.constrained_parafac", "modules/generated/tensorly.decomposition.non_negative_parafac", "modules/generated/tensorly.decomposition.non_negative_parafac_hals", "modules/generated/tensorly.decomposition.non_negative_tucker", "modules/generated/tensorly.decomposition.non_negative_tucker_hals", "modules/generated/tensorly.decomposition.parafac", "modules/generated/tensorly.decomposition.parafac_power_iteration", "modules/generated/tensorly.decomposition.partial_tucker", "modules/generated/tensorly.decomposition.power_iteration", "modules/generated/tensorly.decomposition.randomised_parafac", "modules/generated/tensorly.decomposition.robust_pca", "modules/generated/tensorly.decomposition.sample_khatri_rao", "modules/generated/tensorly.decomposition.symmetric_parafac_power_iteration", "modules/generated/tensorly.decomposition.symmetric_power_iteration", "modules/generated/tensorly.decomposition.tensor_train", "modules/generated/tensorly.decomposition.tensor_train_matrix", "modules/generated/tensorly.diag", "modules/generated/tensorly.dot", "modules/generated/tensorly.eps", "modules/generated/tensorly.eye", "modules/generated/tensorly.finfo", "modules/generated/tensorly.get_backend", "modules/generated/tensorly.index", "modules/generated/tensorly.index_update", "modules/generated/tensorly.is_tensor", "modules/generated/tensorly.kr", "modules/generated/tensorly.kron", "modules/generated/tensorly.matmul", "modules/generated/tensorly.max", "modules/generated/tensorly.mean", "modules/generated/tensorly.metrics.factors.congruence_coefficient", "modules/generated/tensorly.metrics.regression.MSE", "modules/generated/tensorly.metrics.regression.RMSE", "modules/generated/tensorly.min", "modules/generated/tensorly.moveaxis", "modules/generated/tensorly.ndim", "modules/generated/tensorly.norm", "modules/generated/tensorly.ones", "modules/generated/tensorly.parafac2_tensor.parafac2_to_slice", "modules/generated/tensorly.parafac2_tensor.parafac2_to_slices", "modules/generated/tensorly.parafac2_tensor.parafac2_to_tensor", "modules/generated/tensorly.parafac2_tensor.parafac2_to_unfolded", "modules/generated/tensorly.parafac2_tensor.parafac2_to_vec", "modules/generated/tensorly.prod", "modules/generated/tensorly.qr", "modules/generated/tensorly.random.random_cp", "modules/generated/tensorly.random.random_parafac2", "modules/generated/tensorly.random.random_tt", "modules/generated/tensorly.random.random_tt_matrix", "modules/generated/tensorly.random.random_tucker", "modules/generated/tensorly.regression.cp_regression.CPRegressor", "modules/generated/tensorly.regression.tucker_regression.TuckerRegressor", "modules/generated/tensorly.reshape", "modules/generated/tensorly.set_backend", "modules/generated/tensorly.shape", "modules/generated/tensorly.sign", "modules/generated/tensorly.solve", "modules/generated/tensorly.sort", "modules/generated/tensorly.sqrt", "modules/generated/tensorly.stack", "modules/generated/tensorly.sum", "modules/generated/tensorly.tenalg.backend_context", "modules/generated/tensorly.tenalg.batched_outer", "modules/generated/tensorly.tenalg.get_backend", "modules/generated/tensorly.tenalg.higher_order_moment", "modules/generated/tensorly.tenalg.inner", "modules/generated/tensorly.tenalg.khatri_rao", "modules/generated/tensorly.tenalg.kronecker", "modules/generated/tensorly.tenalg.mode_dot", "modules/generated/tensorly.tenalg.multi_mode_dot", "modules/generated/tensorly.tenalg.outer", "modules/generated/tensorly.tenalg.proximal.procrustes", "modules/generated/tensorly.tenalg.proximal.soft_thresholding", "modules/generated/tensorly.tenalg.proximal.svd_thresholding", "modules/generated/tensorly.tenalg.set_backend", "modules/generated/tensorly.tenalg.tensordot", "modules/generated/tensorly.tensor", "modules/generated/tensorly.tensordot", "modules/generated/tensorly.to_numpy", "modules/generated/tensorly.transpose", "modules/generated/tensorly.tt_matrix.tt_matrix_to_tensor", "modules/generated/tensorly.tt_matrix.tt_matrix_to_unfolded", "modules/generated/tensorly.tt_matrix.tt_matrix_to_vec", "modules/generated/tensorly.tt_tensor.pad_tt_rank", "modules/generated/tensorly.tt_tensor.tt_to_tensor", "modules/generated/tensorly.tt_tensor.tt_to_unfolded", "modules/generated/tensorly.tt_tensor.tt_to_vec", "modules/generated/tensorly.tucker_tensor.tucker_mode_dot", "modules/generated/tensorly.tucker_tensor.tucker_to_tensor", "modules/generated/tensorly.tucker_tensor.tucker_to_unfolded", "modules/generated/tensorly.tucker_tensor.tucker_to_vec", "modules/generated/tensorly.where", "modules/generated/tensorly.zeros", "modules/generated/tensorly.zeros_like", "modules/generated/tucker-function", "user_guide/backend", "user_guide/index", "user_guide/quickstart", "user_guide/sparse_backend", "user_guide/tensor_basics", "user_guide/tensor_decomposition", "user_guide/tensor_regression"], "filenames": ["about.rst", "auto_examples/applications/plot_IL2.rst", "auto_examples/applications/plot_covid.rst", "auto_examples/applications/plot_image_compression.rst", "auto_examples/applications/sg_execution_times.rst", "auto_examples/decomposition/plot_cp_line_search.rst", "auto_examples/decomposition/plot_guide_for_constrained_cp.rst", "auto_examples/decomposition/plot_nn_cp_hals.rst", "auto_examples/decomposition/plot_nn_tucker.rst", "auto_examples/decomposition/plot_parafac2.rst", "auto_examples/decomposition/plot_permute_factors.rst", "auto_examples/decomposition/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/plot_tensor.rst", "auto_examples/regression/plot_cp_regression.rst", "auto_examples/regression/plot_tucker_regression.rst", "auto_examples/regression/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "development_guide/backend_system.rst", "development_guide/contributing.rst", "development_guide/documentation.rst", "development_guide/index.rst", "home.rst", "index.rst", "installation.rst", "modules/api.rst", "modules/generated/parafac2-function.rst", "modules/generated/tensorly.abs.rst", "modules/generated/tensorly.all.rst", "modules/generated/tensorly.arange.rst", "modules/generated/tensorly.argmax.rst", "modules/generated/tensorly.argmin.rst", "modules/generated/tensorly.backend_context.rst", "modules/generated/tensorly.base.fold.rst", "modules/generated/tensorly.base.partial_fold.rst", "modules/generated/tensorly.base.partial_tensor_to_vec.rst", "modules/generated/tensorly.base.partial_unfold.rst", "modules/generated/tensorly.base.partial_vec_to_tensor.rst", "modules/generated/tensorly.base.tensor_to_vec.rst", "modules/generated/tensorly.base.unfold.rst", "modules/generated/tensorly.base.vec_to_tensor.rst", "modules/generated/tensorly.check_random_state.rst", "modules/generated/tensorly.clip.rst", "modules/generated/tensorly.concatenate.rst", "modules/generated/tensorly.conj.rst", "modules/generated/tensorly.context.rst", "modules/generated/tensorly.contrib.decomposition.tensor_train_cross.rst", "modules/generated/tensorly.contrib.sparse.decomposition.non_negative_parafac.rst", "modules/generated/tensorly.contrib.sparse.decomposition.non_negative_tucker.rst", "modules/generated/tensorly.contrib.sparse.decomposition.parafac.rst", "modules/generated/tensorly.contrib.sparse.decomposition.partial_tucker.rst", "modules/generated/tensorly.contrib.sparse.decomposition.robust_pca.rst", "modules/generated/tensorly.contrib.sparse.decomposition.symmetric_parafac_power_iteration.rst", "modules/generated/tensorly.contrib.sparse.decomposition.tucker.rst", "modules/generated/tensorly.copy.rst", "modules/generated/tensorly.cp_tensor.cp_mode_dot.rst", "modules/generated/tensorly.cp_tensor.cp_norm.rst", "modules/generated/tensorly.cp_tensor.cp_normalize.rst", "modules/generated/tensorly.cp_tensor.cp_permute_factors.rst", "modules/generated/tensorly.cp_tensor.cp_to_tensor.rst", "modules/generated/tensorly.cp_tensor.cp_to_unfolded.rst", "modules/generated/tensorly.cp_tensor.cp_to_vec.rst", "modules/generated/tensorly.cp_tensor.unfolding_dot_khatri_rao.rst", "modules/generated/tensorly.datasets.synthetic.gen_image.rst", "modules/generated/tensorly.decomposition.CP.rst", "modules/generated/tensorly.decomposition.CPPower.rst", "modules/generated/tensorly.decomposition.CP_NN_HALS.rst", "modules/generated/tensorly.decomposition.ConstrainedCP.rst", "modules/generated/tensorly.decomposition.Parafac2.rst", "modules/generated/tensorly.decomposition.RandomizedCP.rst", "modules/generated/tensorly.decomposition.SymmetricCP.rst", "modules/generated/tensorly.decomposition.TensorTrain.rst", "modules/generated/tensorly.decomposition.Tucker.rst", "modules/generated/tensorly.decomposition.constrained_parafac.rst", "modules/generated/tensorly.decomposition.non_negative_parafac.rst", "modules/generated/tensorly.decomposition.non_negative_parafac_hals.rst", "modules/generated/tensorly.decomposition.non_negative_tucker.rst", "modules/generated/tensorly.decomposition.non_negative_tucker_hals.rst", "modules/generated/tensorly.decomposition.parafac.rst", "modules/generated/tensorly.decomposition.parafac_power_iteration.rst", "modules/generated/tensorly.decomposition.partial_tucker.rst", "modules/generated/tensorly.decomposition.power_iteration.rst", "modules/generated/tensorly.decomposition.randomised_parafac.rst", "modules/generated/tensorly.decomposition.robust_pca.rst", "modules/generated/tensorly.decomposition.sample_khatri_rao.rst", "modules/generated/tensorly.decomposition.symmetric_parafac_power_iteration.rst", "modules/generated/tensorly.decomposition.symmetric_power_iteration.rst", "modules/generated/tensorly.decomposition.tensor_train.rst", "modules/generated/tensorly.decomposition.tensor_train_matrix.rst", "modules/generated/tensorly.diag.rst", "modules/generated/tensorly.dot.rst", "modules/generated/tensorly.eps.rst", "modules/generated/tensorly.eye.rst", "modules/generated/tensorly.finfo.rst", "modules/generated/tensorly.get_backend.rst", "modules/generated/tensorly.index.rst", "modules/generated/tensorly.index_update.rst", "modules/generated/tensorly.is_tensor.rst", "modules/generated/tensorly.kr.rst", "modules/generated/tensorly.kron.rst", "modules/generated/tensorly.matmul.rst", "modules/generated/tensorly.max.rst", "modules/generated/tensorly.mean.rst", "modules/generated/tensorly.metrics.factors.congruence_coefficient.rst", "modules/generated/tensorly.metrics.regression.MSE.rst", "modules/generated/tensorly.metrics.regression.RMSE.rst", "modules/generated/tensorly.min.rst", "modules/generated/tensorly.moveaxis.rst", "modules/generated/tensorly.ndim.rst", "modules/generated/tensorly.norm.rst", "modules/generated/tensorly.ones.rst", "modules/generated/tensorly.parafac2_tensor.parafac2_to_slice.rst", "modules/generated/tensorly.parafac2_tensor.parafac2_to_slices.rst", "modules/generated/tensorly.parafac2_tensor.parafac2_to_tensor.rst", "modules/generated/tensorly.parafac2_tensor.parafac2_to_unfolded.rst", "modules/generated/tensorly.parafac2_tensor.parafac2_to_vec.rst", "modules/generated/tensorly.prod.rst", "modules/generated/tensorly.qr.rst", "modules/generated/tensorly.random.random_cp.rst", "modules/generated/tensorly.random.random_parafac2.rst", "modules/generated/tensorly.random.random_tt.rst", "modules/generated/tensorly.random.random_tt_matrix.rst", "modules/generated/tensorly.random.random_tucker.rst", "modules/generated/tensorly.regression.cp_regression.CPRegressor.rst", "modules/generated/tensorly.regression.tucker_regression.TuckerRegressor.rst", "modules/generated/tensorly.reshape.rst", "modules/generated/tensorly.set_backend.rst", "modules/generated/tensorly.shape.rst", "modules/generated/tensorly.sign.rst", "modules/generated/tensorly.solve.rst", "modules/generated/tensorly.sort.rst", "modules/generated/tensorly.sqrt.rst", "modules/generated/tensorly.stack.rst", "modules/generated/tensorly.sum.rst", "modules/generated/tensorly.tenalg.backend_context.rst", "modules/generated/tensorly.tenalg.batched_outer.rst", "modules/generated/tensorly.tenalg.get_backend.rst", "modules/generated/tensorly.tenalg.higher_order_moment.rst", "modules/generated/tensorly.tenalg.inner.rst", "modules/generated/tensorly.tenalg.khatri_rao.rst", "modules/generated/tensorly.tenalg.kronecker.rst", "modules/generated/tensorly.tenalg.mode_dot.rst", "modules/generated/tensorly.tenalg.multi_mode_dot.rst", "modules/generated/tensorly.tenalg.outer.rst", "modules/generated/tensorly.tenalg.proximal.procrustes.rst", "modules/generated/tensorly.tenalg.proximal.soft_thresholding.rst", "modules/generated/tensorly.tenalg.proximal.svd_thresholding.rst", "modules/generated/tensorly.tenalg.set_backend.rst", "modules/generated/tensorly.tenalg.tensordot.rst", "modules/generated/tensorly.tensor.rst", "modules/generated/tensorly.tensordot.rst", "modules/generated/tensorly.to_numpy.rst", "modules/generated/tensorly.transpose.rst", "modules/generated/tensorly.tt_matrix.tt_matrix_to_tensor.rst", "modules/generated/tensorly.tt_matrix.tt_matrix_to_unfolded.rst", "modules/generated/tensorly.tt_matrix.tt_matrix_to_vec.rst", "modules/generated/tensorly.tt_tensor.pad_tt_rank.rst", "modules/generated/tensorly.tt_tensor.tt_to_tensor.rst", "modules/generated/tensorly.tt_tensor.tt_to_unfolded.rst", "modules/generated/tensorly.tt_tensor.tt_to_vec.rst", "modules/generated/tensorly.tucker_tensor.tucker_mode_dot.rst", "modules/generated/tensorly.tucker_tensor.tucker_to_tensor.rst", "modules/generated/tensorly.tucker_tensor.tucker_to_unfolded.rst", "modules/generated/tensorly.tucker_tensor.tucker_to_vec.rst", "modules/generated/tensorly.where.rst", "modules/generated/tensorly.zeros.rst", "modules/generated/tensorly.zeros_like.rst", "modules/generated/tucker-function.rst", "user_guide/backend.rst", "user_guide/index.rst", "user_guide/quickstart.rst", "user_guide/sparse_backend.rst", "user_guide/tensor_basics.rst", "user_guide/tensor_decomposition.rst", "user_guide/tensor_regression.rst"], "titles": ["About us", "Non-negative PARAFAC Decomposition of IL-2 Response Data", "COVID-19 Serology Dataset Analysis with CP", "Image compression via tensor decomposition", "Computation times", "Using line search with PARAFAC", "Constrained CP decomposition in Tensorly &gt;=0.7", "Non-negative CP decomposition in Tensorly &gt;=0.6", "Non-negative Tucker decomposition in Tensorly &gt;=0.6", "Demonstration of PARAFAC2", "Permuting CP factors", "Computation times", "Gallery of examples", "Basic tensor operations", "CP tensor regression", "Tucker tensor regression", "Computation times", "Computation times", "Backend System", "Contributing", "Writing documentation", "Development guide", "&lt;no title&gt;", "TensorLy: Tensor Learning in Python", "Installing tensorly", "API reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.parafac2", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.abs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.all", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.arange", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.argmax", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.argmin", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.backend_context", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.fold", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.partial_fold", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.partial_tensor_to_vec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.partial_unfold", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.partial_vec_to_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.tensor_to_vec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.unfold", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.vec_to_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.check_random_state", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.clip", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.concatenate", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.conj", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.context", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.contrib.decomposition</span></code>.tensor_train_cross", "tensorly.contrib.sparse.decomposition.non_negative_parafac", "tensorly.contrib.sparse.decomposition.non_negative_tucker", "tensorly.contrib.sparse.decomposition.parafac", "tensorly.contrib.sparse.decomposition.partial_tucker", "tensorly.contrib.sparse.decomposition.robust_pca", "tensorly.contrib.sparse.decomposition.symmetric_parafac_power_iteration", "tensorly.contrib.sparse.decomposition.tucker", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.copy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.cp_mode_dot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.cp_norm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.cp_normalize", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.cp_permute_factors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.cp_to_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.cp_to_unfolded", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.cp_to_vec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.unfolding_dot_khatri_rao", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.datasets.synthetic</span></code>.gen_image", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.CP", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.CPPower", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.CP_NN_HALS", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.ConstrainedCP", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.Parafac2", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.RandomizedCP", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.SymmetricCP", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.TensorTrain", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.Tucker", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.constrained_parafac", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.non_negative_parafac", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.non_negative_parafac_hals", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.non_negative_tucker", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.non_negative_tucker_hals", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.parafac", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.parafac_power_iteration", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.partial_tucker", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.power_iteration", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.randomised_parafac", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.robust_pca", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.sample_khatri_rao", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.symmetric_parafac_power_iteration", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.symmetric_power_iteration", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.tensor_train", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.tensor_train_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.diag", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.dot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.eps", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.eye", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.finfo", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.get_backend", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.index", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.index_update", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.is_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.kr", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.kron", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.matmul", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.max", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.mean", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.metrics.factors</span></code>.congruence_coefficient", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.metrics.regression</span></code>.MSE", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.metrics.regression</span></code>.RMSE", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.min", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.moveaxis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.ndim", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.norm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.ones", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.parafac2_tensor</span></code>.parafac2_to_slice", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.parafac2_tensor</span></code>.parafac2_to_slices", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.parafac2_tensor</span></code>.parafac2_to_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.parafac2_tensor</span></code>.parafac2_to_unfolded", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.parafac2_tensor</span></code>.parafac2_to_vec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.prod", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.qr", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.random</span></code>.random_cp", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.random</span></code>.random_parafac2", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.random</span></code>.random_tt", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.random</span></code>.random_tt_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.random</span></code>.random_tucker", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.regression.cp_regression</span></code>.CPRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.regression.tucker_regression</span></code>.TuckerRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.reshape", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.set_backend", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.shape", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.sign", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.solve", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.sort", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.sqrt", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.stack", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.sum", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.backend_context", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.batched_outer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.get_backend", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.higher_order_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.inner", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.khatri_rao", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.kronecker", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.mode_dot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.multi_mode_dot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.outer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg.proximal</span></code>.procrustes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg.proximal</span></code>.soft_thresholding", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg.proximal</span></code>.svd_thresholding", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.set_backend", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.tensordot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.tensordot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.to_numpy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.transpose", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tt_matrix</span></code>.tt_matrix_to_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tt_matrix</span></code>.tt_matrix_to_unfolded", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tt_matrix</span></code>.tt_matrix_to_vec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tt_tensor</span></code>.pad_tt_rank", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tt_tensor</span></code>.tt_to_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tt_tensor</span></code>.tt_to_unfolded", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tt_tensor</span></code>.tt_to_vec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tucker_tensor</span></code>.tucker_mode_dot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tucker_tensor</span></code>.tucker_to_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tucker_tensor</span></code>.tucker_to_unfolded", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tucker_tensor</span></code>.tucker_to_vec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.where", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.zeros", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.zeros_like", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.tucker", "<span class=\"section-number\">2. </span>TensorLy\u2019s backend system", "User guide", "<span class=\"section-number\">1. </span>Quick-Start", "<span class=\"section-number\">6. </span>Sparse Backend", "<span class=\"section-number\">3. </span>Tensor basics", "<span class=\"section-number\">4. </span>Tensor decomposition", "<span class=\"section-number\">5. </span>Tensor regression"], "terms": {"tensorli": [0, 1, 3, 5, 9, 10, 11, 13, 14, 15, 18, 19, 20, 23, 169, 171, 172, 173, 174], "wa": [0, 24, 26, 68, 90, 117, 125, 130, 131, 153, 157, 171], "creat": [0, 14, 15, 19, 20, 25, 26, 27, 44, 54, 68, 84, 88, 89, 111, 112, 113, 114, 115, 118, 120, 121, 122, 128, 130, 131, 166, 168, 169, 170, 171, 173], "2015": 0, "jean": [0, 23], "kossaifi": [0, 23], "make": [0, 1, 7, 9, 19, 23, 24, 25, 46, 125, 130, 168, 171, 173], "tensor": [0, 1, 2, 4, 5, 6, 16, 17, 18, 20, 21, 23, 26, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 97, 103, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 169, 171], "method": [0, 2, 6, 7, 8, 10, 18, 19, 23, 25, 28, 54, 58, 67, 73, 90, 101, 102, 106, 116, 125, 127, 130, 133, 152, 168, 170, 173, 174], "access": [0, 168, 170], "easi": [0, 13, 23, 168], "It": [0, 2, 6, 9, 10, 18, 19, 24, 28, 30, 31, 59, 116, 125, 130, 133, 168, 171], "first": [0, 1, 2, 6, 7, 8, 9, 19, 24, 25, 26, 28, 30, 31, 35, 36, 43, 46, 59, 68, 88, 90, 99, 100, 101, 106, 111, 112, 116, 117, 125, 130, 132, 133, 138, 150, 168, 172, 173, 174], "present": [0, 1, 24, 101, 106, 173], "neurip": 0, "workshop": 0, "learn": [0, 14, 15, 23, 41, 47, 74, 123, 124, 168, 170, 174], "why": [0, 169, 170], "now": [0, 1, 2, 7, 9, 10, 24, 100, 130, 168, 170, 171, 173], "how": [0, 1, 2, 3, 5, 6, 9, 10, 12, 13, 14, 15, 21, 156, 169, 171, 173], "later": [0, 19], "publish": 0, "jmlr": [0, 23], "paper": [0, 23], "titl": [0, 6, 7, 8, 9, 21, 23], "python": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 20, 23, 29, 54, 100, 101, 106, 133, 172], "yanni": [0, 23], "panagaki": [0, 23], "anima": [0, 23], "anandkumar": [0, 23], "maja": [0, 23], "pantic": [0, 23], "built": [0, 20, 29], "top": [0, 9], "numpi": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 18, 20, 21, 23, 28, 29, 32, 41, 84, 89, 90, 92, 101, 102, 106, 110, 116, 117, 129, 130, 133, 134, 152, 165, 168, 170, 171, 172, 173], "scipi": [0, 3, 9, 10, 58, 117, 129, 171], "onli": [0, 1, 6, 7, 8, 9, 10, 18, 19, 20, 24, 25, 27, 30, 31, 32, 44, 46, 49, 53, 64, 66, 72, 78, 84, 100, 101, 106, 117, 125, 128, 131, 133, 134, 139, 156, 164, 167, 170, 171], "In": [0, 1, 2, 6, 7, 8, 20, 21, 23, 24, 25, 29, 30, 31, 33, 43, 47, 57, 62, 67, 73, 74, 77, 90, 92, 99, 102, 110, 116, 117, 125, 130, 133, 165, 168, 170, 171, 172, 173], "order": [0, 1, 6, 7, 10, 26, 27, 44, 46, 50, 52, 53, 54, 58, 67, 68, 71, 72, 73, 77, 80, 85, 86, 87, 92, 100, 107, 109, 110, 125, 128, 130, 131, 137, 138, 139, 140, 150, 152, 165, 166, 167, 173], "combin": [0, 19, 25, 168, 170, 173], "deep": [0, 23, 168, 170], "run": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 19, 168, 170], "them": [0, 2, 18, 20, 168, 171], "multipl": [0, 1, 7, 8, 18, 28, 30, 31, 43, 47, 48, 49, 64, 66, 72, 74, 76, 78, 90, 100, 101, 102, 106, 130, 132, 170], "devic": [0, 25, 168], "cpu": [0, 25, 169], "gpu": [0, 23, 25, 169, 170], "flexibl": [0, 6, 23, 67, 73, 90], "backend": [0, 21, 23, 32, 94, 126, 134, 136, 145, 147, 169], "system": [0, 1, 2, 6, 19, 21, 23, 49, 64, 66, 67, 73, 78, 129, 169, 170], "ad": [0, 19, 117, 130, 133], "thi": [0, 1, 6, 7, 8, 9, 10, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 43, 44, 46, 49, 50, 54, 56, 59, 62, 64, 66, 67, 68, 71, 73, 77, 78, 80, 87, 89, 90, 92, 100, 101, 102, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 125, 128, 130, 131, 133, 134, 139, 154, 158, 164, 165, 168, 170, 171, 172, 173, 174], "allow": [0, 1, 2, 18, 25, 26, 29, 46, 49, 64, 66, 69, 71, 78, 82, 87, 92, 100, 101, 106, 110, 165, 168, 170, 174], "algorithm": [0, 6, 7, 8, 9, 19, 25, 26, 46, 47, 48, 49, 50, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 130, 167, 169], "written": [0, 171], "ran": 0, "ani": [0, 6, 19, 23, 25, 26, 28, 29, 68, 101, 102, 106, 116, 130, 131, 133, 139, 142, 161, 162, 163, 168], "major": [0, 92, 110, 165], "framework": [0, 6, 23, 67, 73, 170], "pytorch": [0, 18, 19, 23, 25, 32, 134, 169, 170, 171], "mxnet": [0, 19, 23, 25, 32, 134, 168, 170], "tensorflow": [0, 18, 19, 23, 25, 32, 134, 168, 170, 171], "cupi": [0, 19, 23, 25, 32, 134, 168, 170], "jax": [0, 19, 23, 25, 168, 170], "i": [0, 1, 2, 6, 7, 8, 9, 10, 13, 14, 15, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 139, 140, 141, 142, 145, 147, 150, 152, 153, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174], "formost": 0, "commun": [0, 173], "aim": [0, 2], "With": [0, 23, 28, 30, 31, 101, 102, 106, 116, 133, 171], "robust": [0, 51, 52, 65, 70, 79, 81, 83, 85, 86, 171], "activ": [0, 1, 2, 23, 26, 49, 64, 66, 67, 68, 73, 77, 78], "group": 0, "contributor": 0, "we": [0, 1, 2, 7, 8, 9, 10, 18, 19, 20, 25, 26, 46, 49, 51, 54, 60, 64, 66, 68, 77, 78, 83, 103, 111, 112, 113, 114, 115, 116, 117, 168, 170, 171, 172, 173, 174], "would": [0, 36, 43, 90, 132, 171], "like": [0, 2, 6, 7, 8, 18, 19, 20, 29, 51, 83, 92, 100, 110, 117, 125, 165, 168, 170, 174], "thank": 0, "all": [0, 8, 12, 19, 20, 23, 24, 25, 26, 32, 46, 48, 49, 50, 53, 54, 57, 59, 60, 61, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 80, 82, 87, 92, 101, 102, 103, 106, 107, 111, 112, 113, 114, 115, 116, 117, 126, 129, 130, 131, 133, 134, 139, 147, 164, 167, 168, 170, 171], "those": [0, 1], "who": 0, "have": [0, 1, 6, 7, 8, 9, 18, 19, 24, 25, 26, 27, 28, 29, 30, 31, 43, 44, 49, 54, 63, 64, 66, 67, 68, 73, 78, 90, 100, 102, 112, 116, 125, 128, 130, 131, 132, 133, 142, 161, 162, 163, 168, 170, 171, 173], "contribut": [0, 21, 23], "includ": [0, 1, 2, 6, 8, 10, 19, 20, 25, 28, 29, 34, 37, 102, 116, 133, 170], "alphabet": 0, "jeremi": 0, "cohen": 0, "julia": 0, "gusak": 0, "meraj": 0, "hashemizadeh": 0, "aaron": 0, "meurer": 0, "yngve": 0, "mardal": 0, "moe": 0, "meyer": [0, 2], "taylor": [0, 2], "lee": 0, "patti": 0, "mari": 0, "roald": 0, "caglayan": 0, "tuna": 0, "For": [0, 1, 2, 9, 18, 19, 20, 25, 27, 29, 36, 44, 46, 90, 100, 102, 117, 125, 128, 130, 131, 132, 133, 140, 141, 142, 152, 168, 170, 171, 172, 173, 174], "full": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 34, 37, 59, 62, 84, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 129, 152, 153, 154, 157, 158, 161, 165, 168, 170, 172, 173], "list": [0, 6, 9, 10, 24, 26, 43, 46, 47, 48, 49, 50, 53, 54, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 103, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 130, 132, 139, 140, 142, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 167, 171, 173], "check": [0, 9, 19, 25, 28, 129], "github": [0, 19, 23], "page": [0, 6, 10, 19, 23], "The": [0, 6, 7, 8, 9, 10, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 44, 46, 47, 49, 51, 54, 58, 62, 64, 66, 67, 68, 73, 74, 75, 77, 78, 83, 84, 89, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 119, 125, 127, 128, 129, 130, 131, 132, 133, 134, 138, 150, 152, 156, 164, 165, 166, 168, 170, 171, 172, 173], "project": [0, 9, 19, 20, 26, 62, 67, 68, 73, 111, 112, 113, 114, 115, 171, 173], "ha": [0, 1, 6, 7, 8, 9, 18, 30, 31, 48, 59, 60, 75, 76, 77, 99, 102, 116, 130, 131, 132, 133, 144, 145, 146, 171, 173], "been": [0, 1, 18, 32, 130, 134, 144, 145, 146, 171], "variou": [0, 1, 8, 18, 130, 170], "organ": [0, 99, 169], "univers": [0, 23, 49, 64, 66, 78], "inria": 0, "fund": 0, "time": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 18, 24, 26, 48, 49, 53, 62, 64, 66, 68, 72, 75, 76, 77, 78, 111, 112, 113, 114, 115, 139, 140, 142, 167, 171, 172, 173], "engin": [0, 1], "work": [0, 1, 2, 21, 49, 59, 64, 66, 75, 78, 117, 130, 168, 171], "click": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15], "here": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 19, 20, 24, 26, 29, 68, 128, 168, 171, 173], "download": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15], "exampl": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 18, 19, 21, 23, 27, 28, 29, 30, 31, 32, 43, 44, 46, 54, 89, 90, 92, 95, 99, 100, 101, 102, 106, 107, 110, 116, 117, 125, 127, 128, 129, 130, 131, 132, 133, 134, 145, 150, 152, 164, 165, 166, 169, 172], "code": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 25, 46, 62, 168, 170], "provid": [1, 2, 6, 7, 18, 23, 25, 27, 30, 31, 43, 44, 50, 53, 72, 80, 100, 102, 109, 117, 123, 124, 128, 131, 132, 133, 142, 161, 162, 163, 164, 167, 168, 170], "an": [1, 2, 6, 7, 8, 9, 10, 19, 23, 24, 26, 27, 28, 29, 30, 31, 43, 44, 51, 54, 59, 60, 63, 64, 65, 66, 67, 68, 73, 75, 77, 83, 89, 90, 92, 95, 100, 101, 102, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 125, 127, 128, 130, 131, 132, 133, 150, 152, 162, 164, 165, 166, 168, 171, 172], "us": [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 24, 25, 26, 27, 29, 32, 41, 43, 47, 48, 49, 50, 53, 54, 56, 62, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 84, 88, 89, 90, 94, 95, 96, 100, 101, 102, 106, 111, 112, 113, 114, 115, 116, 117, 122, 125, 128, 129, 130, 133, 134, 136, 141, 142, 150, 152, 156, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174], "reduc": [1, 28, 30, 31, 101, 102, 106, 116, 117, 133], "dimension": [1, 2, 25, 30, 31, 110, 116, 117, 165, 168, 172, 173], "experiment": [1, 169], "insight": 1, "about": [1, 8, 19, 23, 93, 171], "underli": [1, 2, 20, 125, 156], "structur": [1, 2, 6, 9, 20, 99, 130, 170, 171], "To": [1, 2, 6, 8, 9, 19, 24, 25, 26, 54, 68, 101, 106, 111, 112, 113, 114, 115, 168, 170], "do": [1, 2, 19, 20, 169], "measur": [1, 2, 168, 170], "cell": [1, 2], "signal": [1, 2, 6, 67, 73], "import": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 18, 19, 27, 32, 54, 100, 134, 145, 168, 170, 171, 172, 173], "np": [1, 2, 3, 5, 6, 7, 8, 9, 13, 18, 19, 26, 27, 28, 29, 30, 31, 41, 43, 44, 46, 47, 48, 49, 50, 53, 54, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 78, 80, 82, 89, 90, 92, 99, 100, 101, 102, 106, 107, 110, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 131, 132, 133, 139, 150, 152, 164, 165, 166, 167, 168, 171, 172, 173], "matplotlib": [1, 2, 3, 5, 6, 7, 8, 9, 10, 14, 15, 27], "pyplot": [1, 2, 3, 5, 6, 7, 8, 9, 10, 14, 15, 27], "plt": [1, 2, 3, 5, 6, 7, 8, 9, 10, 14, 15, 27], "from": [1, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 43, 46, 57, 68, 84, 92, 99, 100, 111, 112, 113, 114, 115, 116, 125, 128, 131, 132, 133, 145, 154, 158, 164, 168, 170, 171, 172, 173, 174], "dataset": [1, 4, 9, 12, 14, 15, 169], "load_il2data": 1, "non_negative_parafac": [1, 7, 171], "cp_tensor": [1, 7, 10, 168, 170, 171], "cp_normal": 1, "load": [1, 21, 25, 126, 147, 170], "cellular": 1, "stimul": 1, "natur": 1, "occur": [1, 10, 29, 43, 58, 133], "immun": [1, 2], "molecul": 1, "which": [1, 6, 7, 9, 10, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 43, 44, 46, 47, 49, 50, 53, 54, 55, 62, 63, 64, 66, 67, 68, 72, 73, 74, 75, 78, 80, 91, 92, 93, 96, 100, 101, 102, 106, 110, 116, 117, 118, 120, 121, 128, 130, 131, 132, 133, 141, 144, 145, 146, 148, 152, 153, 157, 160, 164, 165, 167, 168, 170, 171, 173, 174], "pharmaceut": 1, "compani": [1, 23], "drug": 1, "design": 1, "attempt": [1, 90, 102, 171], "act": [1, 6], "effect": [1, 49, 64, 66, 78], "immunotherapi": 1, "therapi": 1, "alter": [1, 2], "": [1, 2, 19, 20, 21, 23, 24, 28, 41, 48, 76, 101, 106, 110, 125, 133, 138, 150, 165, 169, 170, 171, 172, 173], "increas": [1, 6, 51, 83, 156], "decreas": [1, 6, 26, 67, 68, 69, 73, 82], "its": [1, 6, 10, 19, 25, 27, 28, 44, 46, 89, 90, 100, 125, 128, 131, 152, 154, 155, 156, 158, 159, 170, 172, 173], "interact": [1, 2, 18], "particular": [1, 7, 9, 18, 19, 20, 24, 90], "type": [1, 2, 18, 20, 26, 28, 29, 49, 64, 66, 67, 68, 73, 78, 90, 92, 93, 101, 102, 106, 110, 116, 117, 130, 133, 165, 166, 170, 174], "through": [1, 25, 28, 54, 101, 102, 106, 116, 133, 168, 170, 174], "jak": 1, "stat": 1, "pathwai": 1, "transmit": 1, "phosphoryl": 1, "stat5": 1, "pstat5": 1, "when": [1, 7, 8, 18, 19, 26, 29, 43, 47, 49, 50, 53, 54, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 82, 100, 101, 103, 106, 116, 117, 125, 130, 131, 133, 150, 152, 164, 167, 168, 171], "caus": [1, 2, 102, 133, 171], "prolifer": 1, "depend": [1, 6, 23, 89, 100, 102, 117, 129, 130, 133, 164, 168, 170, 171], "whether": [1, 23, 28, 48, 49, 53, 64, 72, 75, 76, 77, 78, 89, 92, 103, 110, 117, 130, 165, 167, 168, 170, 171], "regulatori": 1, "t": [1, 2, 8, 9, 10, 19, 26, 32, 43, 46, 49, 56, 62, 64, 66, 67, 68, 72, 73, 77, 78, 99, 101, 103, 106, 111, 112, 113, 114, 115, 117, 125, 134, 139, 140, 145, 168, 170, 171, 172, 173], "treg": 1, "effector": 1, "helper": 1, "killer": 1, "cytotox": 1, "thelper": 1, "nk": 1, "cd8": 1, "respond": 1, "can": [1, 2, 6, 7, 8, 9, 10, 12, 18, 19, 20, 24, 25, 27, 28, 29, 54, 56, 57, 61, 62, 99, 100, 101, 102, 116, 117, 125, 130, 133, 139, 150, 163, 164, 168, 170, 171, 172, 173, 174], "result": [1, 2, 7, 8, 10, 19, 20, 24, 27, 28, 29, 30, 31, 43, 44, 62, 63, 75, 77, 89, 92, 100, 101, 102, 106, 107, 110, 116, 117, 125, 128, 131, 132, 133, 138, 150, 163, 165, 166, 171], "immunosuppress": 1, "immunostimul": 1, "respect": [1, 75, 77, 100, 138, 168], "thu": [1, 6, 171], "meant": 1, "repress": 1, "potenti": 1, "treatment": 1, "autoimmun": 1, "diseas": 1, "primarili": 1, "enact": 1, "desir": [1, 49, 60, 64, 66, 78, 102, 110, 125, 165, 168], "convers": [1, 102], "cancer": 1, "achiev": [1, 107], "either": [1, 6, 19, 26, 67, 73, 90, 100, 117, 129, 168, 170], "bia": 1, "variant": [1, 62, 171], "affin": 1, "receptor": [1, 2], "il2r\u03b1": 1, "il2r\u03b2": 1, "furthermor": 1, "bind": [1, 2], "domain": 1, "multival": 1, "mai": [1, 6, 8, 9, 18, 25, 26, 28, 29, 43, 46, 54, 68, 102, 116, 117, 133, 171], "more": [1, 2, 19, 26, 28, 29, 43, 62, 68, 89, 101, 102, 106, 117, 128, 132, 133, 139, 140, 150, 168, 170, 171, 172, 173], "therapeut": 1, "understand": 1, "mutat": 1, "affect": [1, 29, 32, 134], "mutant": 1, "perform": [1, 3, 7, 13, 14, 15, 19, 26, 28, 46, 49, 50, 64, 68, 78, 80, 90, 102, 116, 130, 133, 168, 170, 171, 172, 173, 174], "our": [1, 7, 8, 19, 25, 168, 170, 171, 173], "contain": [1, 25, 26, 27, 47, 49, 52, 54, 64, 65, 66, 68, 70, 74, 75, 78, 79, 84, 85, 102, 111, 112, 113, 114, 115, 117, 130, 131, 150, 152, 170, 171], "8": [1, 6, 9, 13, 26, 29, 48, 67, 68, 73, 75, 76, 77, 89, 117, 129, 130, 150, 164, 171, 172], "differ": [1, 2, 7, 8, 9, 25, 26, 54, 68, 100, 101, 128, 130, 131, 168, 172], "13": [1, 9, 13, 26, 30, 31, 68, 90, 100, 102, 171, 172], "4": [1, 6, 7, 8, 9, 10, 13, 14, 15, 28, 29, 30, 31, 43, 46, 54, 88, 89, 90, 95, 99, 100, 101, 102, 106, 107, 116, 125, 127, 128, 130, 131, 132, 145, 150, 152, 164, 166, 170, 171, 172], "timepoint": 1, "12": [1, 6, 7, 8, 13, 30, 31, 90, 102, 116, 130, 164, 171, 172, 173], "standard": 1, "concentr": 1, "therefor": [1, 6, 7, 8, 19, 25, 34, 36, 39, 90, 172, 173], "shape": [1, 9, 10, 13, 14, 15, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 92, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 135, 139, 140, 141, 143, 144, 145, 150, 152, 153, 160, 161, 164, 165, 166, 167, 168, 170, 171, 172, 173], "x": [1, 9, 14, 15, 24, 26, 27, 30, 31, 36, 44, 51, 54, 56, 68, 83, 88, 89, 107, 111, 112, 113, 114, 115, 116, 117, 123, 124, 127, 128, 129, 131, 152, 164, 165, 166, 171, 172, 174], "dimens": [1, 28, 29, 30, 31, 34, 35, 36, 37, 43, 46, 63, 90, 99, 100, 101, 102, 106, 107, 116, 117, 122, 124, 125, 127, 132, 133, 150, 156, 166, 172, 173, 174], "repres": [1, 2, 8, 18, 119, 153, 156, 157, 168, 171, 173], "dose": 1, "each": [1, 2, 7, 8, 9, 10, 19, 25, 26, 27, 36, 46, 47, 48, 49, 51, 52, 53, 57, 58, 62, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 107, 119, 122, 123, 124, 131, 132, 133, 139, 142, 167, 173, 174], "quantiti": 1, "amount": [1, 2, 6], "phosphorly": 1, "given": [1, 6, 9, 18, 19, 26, 28, 29, 30, 31, 46, 54, 67, 68, 73, 84, 90, 91, 101, 103, 106, 110, 111, 112, 113, 114, 115, 116, 125, 131, 133, 139, 150, 153, 154, 157, 158, 165, 166, 168, 172, 174], "popul": [1, 29], "follow": [1, 6, 7, 8, 9, 20, 25, 26, 68, 77, 100, 117, 130, 150, 171], "specifi": [1, 6, 19, 26, 28, 29, 30, 31, 33, 35, 36, 43, 55, 63, 68, 75, 89, 92, 95, 96, 102, 116, 126, 130, 132, 133, 141, 142, 147, 148, 150, 152, 160, 168], "response_data": 1, "il2mut": 1, "tick": [1, 2], "0": [1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 28, 29, 30, 31, 34, 35, 36, 37, 39, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 59, 61, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 89, 90, 92, 99, 100, 101, 102, 106, 107, 110, 116, 117, 120, 121, 125, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 145, 150, 152, 156, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173], "3": [1, 2, 3, 5, 6, 7, 9, 10, 13, 14, 15, 18, 19, 29, 30, 31, 43, 46, 49, 53, 54, 64, 66, 67, 69, 71, 72, 73, 77, 78, 82, 87, 88, 89, 90, 92, 95, 96, 99, 100, 101, 102, 106, 107, 110, 116, 117, 125, 127, 129, 130, 131, 132, 139, 140, 145, 150, 152, 164, 165, 166, 167, 170, 171, 172, 173], "print": [1, 6, 7, 8, 9, 10, 13, 15, 20, 29, 46, 75, 77, 171, 173], "dim": [1, 2], "out": [1, 2, 6, 7, 8, 9, 10, 13, 15, 18, 19, 27, 28, 29, 30, 31, 43, 44, 89, 90, 99, 100, 101, 102, 106, 110, 116, 117, 128, 131, 132, 133, 164, 165, 166], "ligand": 1, "compon": [1, 10, 26, 47, 49, 51, 52, 58, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 81, 82, 83, 85, 86, 118, 122, 150], "normal": [1, 2, 6, 14, 15, 19, 26, 49, 57, 64, 66, 67, 68, 73, 78, 117, 170], "aid": 1, "futur": [1, 19, 24, 25], "comparison": [1, 5, 101, 106], "correl": 1, "across": [1, 131], "must": [1, 7, 8, 19, 20, 27, 28, 29, 43, 44, 52, 58, 85, 86, 90, 100, 101, 102, 106, 107, 116, 117, 119, 120, 121, 128, 129, 131, 132, 133, 150, 152], "preprocess": 1, "readi": [1, 24], "factor": [1, 2, 3, 6, 7, 8, 9, 11, 12, 26, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 87, 111, 112, 113, 114, 115, 117, 118, 120, 121, 122, 139, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 170, 171, 173], "few": [1, 6, 7], "miss": [1, 49, 50, 51, 53, 64, 66, 78, 80, 83, 145, 167, 169], "valu": [1, 6, 7, 8, 18, 19, 25, 26, 27, 28, 29, 30, 31, 44, 47, 49, 50, 51, 53, 54, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 82, 83, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 110, 116, 117, 123, 124, 125, 128, 129, 130, 131, 133, 145, 146, 164, 165, 166, 167, 168, 169, 173], "so": [1, 8, 9, 19, 25, 26, 58, 68, 117, 131, 150, 156, 171, 173], "gener": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 19, 20, 24, 29, 46, 63, 84, 111, 112, 117, 118, 119, 120, 121, 122, 130, 133, 135, 143, 170, 171], "mask": [1, 43, 47, 49, 50, 51, 53, 59, 64, 66, 72, 74, 78, 80, 83, 98, 139, 145, 167, 171], "mark": 1, "where": [1, 8, 9, 25, 26, 27, 28, 29, 32, 43, 44, 49, 50, 51, 53, 57, 59, 60, 61, 64, 66, 67, 68, 73, 78, 80, 83, 90, 92, 99, 101, 102, 106, 111, 112, 113, 114, 115, 116, 117, 119, 128, 130, 131, 133, 134, 139, 140, 152, 167, 171], "tensor_mask": 1, "isfinit": [1, 2], "ve": 1, "finit": [1, 6], "regener": 1, "without": [1, 5, 26, 68, 75, 77, 81, 86, 90, 125, 156, 170, 171], "response_data_fin": 1, "nan_to_num": [1, 2], "decompos": [1, 7, 8, 9, 46, 50, 51, 52, 53, 64, 65, 66, 67, 68, 71, 72, 77, 79, 80, 81, 83, 85, 86, 87, 88, 118, 119, 120, 121, 122, 167, 168, 170, 171, 173], "three": [1, 9, 14, 15, 20, 150, 164], "also": [1, 2, 7, 8, 10, 18, 19, 24, 25, 29, 36, 49, 50, 53, 64, 66, 71, 78, 80, 84, 87, 107, 116, 133, 156, 167, 168, 170, 171, 172, 173, 174], "easier": 1, "made": [1, 23, 26, 68, 99, 117], "between": [1, 2, 7, 8, 18, 29, 75, 77, 103, 104, 105, 138, 148], "mean": [1, 7, 8, 9, 19, 26, 54, 68, 103, 104, 105, 116, 125, 133, 166, 168, 170, 173], "magnitud": 1, "sig_tensor_fact": 1, "init": [1, 3, 7, 26, 47, 48, 49, 50, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 167, 168, 171], "random": [1, 3, 5, 6, 7, 8, 9, 10, 14, 15, 19, 26, 41, 46, 47, 48, 49, 50, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 84, 117, 130, 132, 167, 168, 169, 171], "rank": [1, 2, 3, 5, 6, 7, 8, 10, 14, 15, 19, 26, 46, 47, 48, 49, 50, 51, 52, 53, 58, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 87, 88, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 129, 139, 156, 167, 168, 170, 171, 173, 174], "n_iter_max": [1, 2, 5, 8, 9, 14, 15, 26, 46, 47, 48, 49, 50, 51, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 123, 124, 167], "5000": 1, "tol": [1, 2, 3, 5, 8, 9, 14, 15, 26, 46, 47, 48, 49, 50, 51, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 123, 124, 167], "1e": [1, 2, 8, 9, 26, 47, 49, 51, 64, 66, 67, 68, 69, 73, 74, 75, 77, 78, 82, 83, 123, 124], "9": [1, 2, 5, 6, 9, 13, 88, 89, 100, 102, 117, 130, 131, 145, 150, 164, 171, 172], "random_st": [1, 3, 5, 9, 26, 46, 47, 48, 49, 50, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 84, 118, 119, 120, 121, 122, 123, 124, 167], "1": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 85, 87, 88, 89, 90, 92, 95, 99, 100, 101, 102, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 139, 140, 141, 145, 150, 152, 153, 155, 156, 159, 160, 161, 164, 165, 166, 167, 170, 171, 172, 173, 174], "name": [1, 18, 20, 32, 94, 103, 126, 130, 134, 136, 147, 170], "thei": [1, 7, 25, 100, 130, 150, 168, 173], "ar": [1, 2, 6, 7, 8, 9, 10, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 36, 43, 49, 50, 51, 53, 54, 57, 58, 59, 63, 64, 66, 67, 68, 73, 77, 78, 80, 83, 89, 90, 92, 99, 100, 101, 102, 106, 110, 111, 112, 113, 114, 115, 116, 117, 129, 130, 131, 132, 133, 142, 145, 150, 161, 162, 163, 164, 165, 167, 168, 170, 171, 173], "origin": [1, 3, 7, 8, 9, 13, 14, 15, 27, 33, 34, 37, 44, 107, 125, 128, 131, 144, 152, 171, 173], "refer": [1, 10, 21, 26, 28, 29, 46, 47, 48, 49, 53, 54, 58, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 82, 87, 92, 102, 110, 116, 125, 129, 130, 131, 133, 139, 140, 152, 165, 167, 168, 169, 170], "specif": [1, 2, 7, 8, 18, 19, 25, 90, 116, 170], "amino": 1, "acid": 1, "sequenc": [1, 7, 8, 43, 46, 71, 87, 107, 110, 132, 150, 166], "well": [1, 2, 9, 18, 19, 101, 106, 116, 129, 170], "valenc": 1, "format": [1, 7, 8, 13, 14, 15, 19, 20, 25, 88, 121, 153, 154, 155, 157, 158, 159, 170], "monoval": 1, "bival": 1, "final": [1, 9, 19, 59, 172], "label": [1, 2, 5, 9, 14, 15, 123, 124, 174], "plot": [1, 2, 3, 6, 7, 8, 9, 10, 14, 15, 27], "analyz": 1, "f": [1, 2, 7, 8, 9, 10, 26, 54, 62, 68, 92, 110, 125, 165, 166, 173], "ax": [1, 2, 3, 5, 9, 10, 14, 15, 28, 30, 31, 90, 100, 101, 102, 106, 107, 116, 117, 129, 133, 150, 152], "subplot": [1, 2, 9, 10], "figsiz": [1, 2, 9], "5": [1, 2, 3, 6, 8, 9, 10, 13, 14, 15, 26, 28, 29, 30, 43, 46, 49, 50, 51, 64, 68, 71, 78, 80, 83, 87, 89, 90, 95, 96, 99, 100, 101, 102, 106, 107, 110, 116, 125, 127, 128, 129, 132, 133, 145, 150, 152, 164, 165, 166, 168, 170, 171, 172], "width": 1, "25": [1, 3, 6, 14, 15, 46], "lig_fac": 1, "x_lig": 1, "arang": [1, 2, 7, 13, 30, 31, 43, 46, 89, 90, 99, 100, 101, 106, 125, 150, 152, 164, 166, 171, 172], "len": [1, 2, 9, 14, 15, 48, 50, 53, 72, 76, 77, 80, 84, 120, 121, 127, 139, 167, 173], "lig_rects_comp1": 1, "bar": 1, "lig_rects_comp2": 1, "lig_rects_comp3": 1, "set": [1, 7, 9, 18, 27, 28, 30, 31, 32, 36, 44, 54, 75, 77, 84, 101, 102, 106, 110, 116, 123, 124, 126, 128, 131, 133, 134, 147, 165, 166, 168, 169, 170, 171], "xlabel": [1, 2], "ylabel": [1, 2], "weight": [1, 2, 3, 7, 9, 10, 14, 15, 26, 47, 49, 52, 57, 59, 60, 61, 64, 65, 66, 67, 68, 70, 73, 74, 75, 78, 79, 85, 98, 102, 111, 112, 113, 114, 115, 123, 124, 139, 174], "ylim": 1, "set_xtick": [1, 2, 9], "set_xticklabel": [1, 2], "get_xticklabel": 1, "rotat": 1, "60": [1, 150, 164], "right": [1, 8, 9, 26, 46, 68, 90, 139, 140, 172], "fontsiz": [1, 9], "legend": [1, 5, 6, 7, 8, 9], "cell_fac": 1, "x_cell": 1, "cell_rects_comp1": 1, "cell_rects_comp2": 1, "cell_rects_comp3": 1, "45": [1, 6], "tight_layout": [1, 3, 9], "show": [1, 3, 5, 6, 7, 9, 10, 14, 15, 19, 23, 27], "observ": [1, 10, 174], "both": [1, 2, 5, 6, 7, 8, 19, 23, 26, 68, 90, 100, 117, 125, 130, 150, 164, 171, 173, 174], "interepret": 1, "look": [1, 2, 7, 8, 9, 20, 24], "pattern": [1, 2, 14, 15, 48, 76], "among": [1, 10, 26, 68], "see": [1, 2, 7, 12, 23, 26, 27, 28, 29, 44, 47, 48, 49, 56, 64, 66, 67, 68, 73, 74, 75, 76, 77, 78, 89, 100, 101, 102, 106, 112, 116, 117, 128, 129, 131, 133, 139, 140, 173], "higher": [1, 8, 50, 53, 72, 77, 80, 102, 133, 137, 167], "two": [1, 2, 8, 9, 10, 18, 29, 77, 90, 99, 100, 101, 103, 104, 105, 106, 107, 116, 135, 143, 148, 150, 152, 171, 173], "infer": [1, 29, 125], "than": [1, 7, 8, 26, 29, 46, 47, 49, 50, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 82, 101, 106, 116, 117, 128, 130, 132, 133, 150, 167, 171, 172, 173], "relationship": 1, "strengthen": 1, "avail": [1, 7, 8, 19, 117, 130, 173, 174], "one": [1, 2, 9, 10, 19, 20, 25, 26, 28, 30, 31, 37, 43, 52, 55, 65, 68, 70, 75, 79, 84, 85, 92, 101, 102, 106, 116, 126, 128, 132, 133, 139, 141, 142, 145, 147, 150, 160, 165, 168, 170, 171, 172, 173], "subunit": 1, "just": [1, 9, 23, 117, 142], "By": [1, 30, 31, 101, 102, 106, 116, 170], "could": [1, 6, 7, 8, 25, 62], "addition": [1, 7, 18, 174], "dynam": [1, 18], "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17], "script": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15], "minut": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15], "303": [1, 4], "second": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 25, 26, 68, 90, 99, 100, 101, 106, 112, 119, 130, 150, 173], "sourc": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 23, 26, 33, 34, 35, 36, 37, 38, 39, 40, 46, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 103, 104, 105, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167], "plot_il2": [1, 4], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20], "jupyt": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15], "notebook": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15], "ipynb": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15], "galleri": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 20], "sphinx": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 20], "sphinx_gallery_thumbnail_numb": 2, "2": [2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 19, 20, 24, 26, 27, 29, 30, 31, 43, 44, 46, 47, 48, 49, 51, 52, 54, 56, 59, 64, 65, 66, 67, 68, 70, 73, 74, 76, 77, 78, 79, 83, 85, 88, 89, 90, 92, 99, 100, 101, 102, 106, 107, 109, 110, 116, 117, 125, 127, 129, 130, 131, 132, 133, 145, 150, 152, 154, 158, 164, 165, 166, 168, 170, 171, 172, 173, 174], "parafac": [2, 3, 4, 6, 11, 12, 19, 25, 26, 64, 66, 67, 68, 73, 169, 170, 171], "extrem": 2, "reduct": [2, 28], "u": [2, 7, 19, 23, 24, 57, 59, 60, 61, 75, 77, 168], "develop": [2, 19, 23, 24], "model": [2, 7, 9, 19, 26, 49, 64, 66, 68, 78, 119, 123, 124, 174], "compact": 2, "while": [2, 6, 7, 8, 20, 24, 25, 29, 35, 36, 46, 57, 61, 75, 116, 130, 133, 168, 173], "retain": [2, 27, 44, 128, 130, 131], "crucial": 2, "subject": [2, 51, 83], "biomed": 2, "research": [2, 23], "new": [2, 7, 18, 19, 24, 25, 28, 29, 30, 31, 43, 54, 92, 100, 101, 102, 106, 107, 110, 116, 117, 123, 124, 125, 129, 130, 132, 133, 165, 166, 168, 170, 171], "technologi": 2, "examin": 2, "antibodi": 2, "patient": 2, "serum": 2, "comprehens": 2, "profil": 2, "fc": 2, "alongsid": 2, "other": [2, 6, 10, 18, 19, 26, 27, 29, 33, 44, 58, 59, 75, 100, 107, 116, 117, 128, 130, 131, 133, 168, 170, 171, 173], "immunolog": 2, "demograph": 2, "data": [2, 4, 7, 8, 9, 12, 14, 15, 25, 26, 29, 43, 51, 54, 68, 83, 92, 93, 101, 102, 106, 110, 116, 117, 123, 124, 125, 130, 149, 165, 166, 170, 171, 174], "438": 2, "sampl": [2, 14, 15, 36, 46, 69, 82, 84, 123, 124, 169, 174], "collect": 2, "were": [2, 43, 100, 117, 132, 171], "systemat": 2, "behavior": [2, 100, 101, 106], "sar": 2, "cov": 2, "viru": 2, "antigen": 2, "statu": 2, "detail": [2, 20, 28, 89, 101, 102, 106, 116, 129, 130, 133, 139, 140, 173, 174], "depth": [2, 43], "implic": 2, "found": [2, 9, 49, 64, 66, 67, 73, 78], "hiv": 2, "predict": [2, 104, 105, 123, 124, 170, 174], "panel": 2, "tl": [2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 18, 19, 32, 46, 52, 53, 55, 56, 62, 65, 70, 79, 81, 85, 86, 88, 109, 134, 145, 148, 160, 161, 162, 163, 167, 168, 170, 172, 173], "data_import": 2, "load_covid19_serologi": 2, "cm": [2, 14, 15], "scalarmapp": 2, "comp": 2, "7": [2, 5, 9, 11, 12, 13, 14, 15, 18, 28, 29, 89, 99, 100, 101, 102, 106, 116, 130, 133, 150, 164, 171, 172, 173], "cmtffac": 2, "cc": 2, "10": [2, 4, 5, 6, 7, 8, 9, 13, 19, 24, 27, 30, 31, 48, 52, 54, 65, 67, 70, 73, 76, 79, 81, 85, 86, 99, 100, 101, 102, 106, 116, 125, 132, 133, 164, 168, 170, 171, 172, 173], "1000": [2, 8, 14, 15, 26, 68, 171], "linesearch": [2, 5, 49, 64, 78], "true": [2, 5, 6, 7, 8, 9, 10, 26, 27, 28, 30, 31, 32, 36, 43, 44, 47, 48, 49, 50, 53, 54, 62, 64, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 80, 82, 84, 99, 100, 101, 102, 103, 106, 111, 112, 116, 117, 118, 119, 120, 121, 122, 128, 129, 131, 133, 134, 139, 140, 141, 142, 150, 156, 161, 162, 163, 164, 166, 167, 170, 171], "orthogonalis": [2, 49, 64, 78], "evalu": [2, 9, 28, 46, 150], "explain": [2, 9], "varianc": 2, "percent": 2, "reconstruct": [2, 3, 7, 9, 26, 47, 48, 49, 50, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 156, 167, 168, 173], "r2x": 2, "rang": [2, 6, 9, 10, 13, 29, 34, 36, 39, 62, 132, 139, 150, 152], "def": [2, 3, 7, 8, 19, 20, 163, 168], "reconstructed_vari": 2, "tfac": 2, "tin": 2, "none": [2, 9, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 59, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 90, 92, 95, 98, 100, 101, 102, 104, 105, 106, 109, 110, 116, 118, 119, 120, 121, 122, 123, 124, 128, 130, 131, 132, 133, 138, 139, 140, 142, 149, 152, 161, 162, 163, 165, 166, 167], "function": [2, 3, 6, 7, 8, 9, 10, 19, 21, 23, 26, 27, 29, 41, 43, 47, 49, 50, 53, 54, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 82, 89, 92, 99, 100, 101, 106, 112, 117, 128, 129, 131, 133, 164, 167, 169, 170, 171, 172, 173], "calcul": [2, 5, 7, 8, 9, 27, 77, 116, 131], "captur": 2, "tmask": 2, "vtop": 2, "sum": [2, 6, 9, 10, 26, 49, 51, 58, 59, 64, 66, 68, 78, 83, 89, 90, 100, 102, 150, 173], "squar": [2, 6, 7, 8, 26, 46, 49, 64, 66, 67, 68, 73, 75, 77, 78, 104, 105, 117, 129, 131], "cp_to_tensor": [2, 3, 5, 7, 49, 56, 64, 66, 78, 171, 173], "vbottom": 2, "return": [2, 3, 8, 10, 20, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173], "fig1": 2, "figur": [2, 3, 5, 6, 7, 8, 9, 14, 15], "cmtfr2x": 2, "arrai": [2, 8, 9, 10, 13, 26, 27, 28, 29, 30, 31, 38, 40, 43, 44, 46, 49, 50, 51, 53, 54, 55, 63, 64, 66, 67, 68, 73, 75, 77, 78, 80, 83, 89, 90, 92, 95, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 139, 141, 145, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172], "bo": 2, "number": [2, 8, 9, 10, 23, 26, 27, 28, 29, 34, 35, 36, 37, 44, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 92, 99, 102, 117, 123, 124, 128, 130, 131, 133, 139, 152, 166, 167, 168, 171, 173, 174], "gca": 2, "set_xlim": [2, 9], "amax": [2, 30, 31, 101, 106], "set_ylim": 2, "eventu": 2, "wish": [2, 9, 18, 89], "bring": 2, "case": [2, 7, 8, 25, 28, 29, 30, 31, 43, 57, 92, 99, 110, 116, 117, 125, 130, 133, 142, 150, 161, 162, 163, 164, 165, 169, 170, 171, 173], "reveal": 2, "trend": 2, "level": [2, 18, 26, 47, 48, 49, 50, 51, 52, 53, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 123, 124, 167], "ensur": [2, 18, 19, 29, 54, 92, 110, 165], "neg": [2, 4, 6, 11, 12, 26, 28, 47, 48, 66, 67, 68, 72, 73, 74, 75, 76, 77, 92, 116, 131, 133, 150, 173], "most": [2, 6, 7, 8, 19, 100, 125], "direct": [2, 6, 7, 8, 9, 26, 67, 68, 73], "fig2": 2, "16": [2, 6, 9, 13, 100, 116, 171, 172, 173], "6": [2, 3, 6, 9, 11, 12, 13, 23, 26, 29, 30, 31, 43, 49, 64, 66, 67, 68, 73, 78, 89, 90, 99, 101, 106, 117, 125, 127, 132, 133, 150, 164, 166, 171, 172], "ii": [2, 5], "fac": [2, 5], "scale": [2, 14, 15, 99, 117, 130], "linalg": [2, 9, 90, 117, 129, 171], "norm": [2, 5, 6, 9, 18, 26, 47, 48, 49, 56, 64, 66, 67, 68, 73, 74, 75, 76, 77, 78, 168], "ord": [2, 62], "inf": [2, 9, 131], "axi": [2, 9, 28, 30, 31, 43, 62, 90, 100, 101, 102, 104, 105, 106, 109, 116, 125, 130, 132, 133, 150, 152, 172], "imshow": [2, 3, 14, 15, 27], "cmap": [2, 14, 15, 27], "piyg": 2, "vmin": 2, "vmax": 2, "set_ytick": 2, "set_yticklabel": 2, "els": [2, 49, 50, 51, 53, 62, 64, 66, 78, 80, 83, 128, 164, 167], "set_titl": [2, 3, 9, 10, 14, 15], "set_aspect": 2, "auto": 2, "colorbar": 2, "object": [2, 9, 18, 19, 28, 29, 43, 54, 92, 110, 117, 125, 150, 165, 170, 171, 174], "0x7f8473fc1cd0": 2, "separ": [2, 9, 169], "distinct": [2, 171], "clear": [2, 54], "acut": 2, "respons": [2, 4, 12], "igg3": 2, "igm": 2, "iga": 2, "long": [2, 150], "term": [2, 6], "igg1": 2, "symptom": 2, "distinguish": 2, "indic": [2, 19, 25, 30, 31, 46, 48, 53, 58, 72, 75, 76, 77, 84, 95, 96, 101, 106, 128, 167], "great": 2, "tool": 2, "find": [2, 6, 9, 10, 46, 103, 130, 174], "signific": [2, 133], "tan": 2, "z": [2, 28, 54], "c": [2, 7, 8, 9, 24, 26, 54, 68, 90, 92, 99, 100, 110, 111, 112, 113, 114, 115, 125, 150, 164, 165, 166], "murphi": 2, "m": [2, 26, 54, 68, 77, 84, 90, 92, 100, 102, 117, 129, 139, 140, 172], "alpai": 2, "h": [2, 26, 68, 117], "d": [2, 6, 43, 51, 52, 65, 67, 70, 73, 79, 83, 85, 89, 90, 92, 99, 100, 125, 127, 133, 150, 152, 154, 155, 158, 159, 164, 173], "A": [2, 3, 6, 8, 9, 13, 18, 23, 26, 27, 28, 44, 46, 47, 49, 51, 54, 56, 64, 66, 67, 68, 69, 73, 74, 75, 77, 78, 81, 82, 83, 86, 100, 111, 112, 113, 114, 115, 117, 119, 125, 128, 130, 131, 139, 150, 152, 166, 168, 170, 171, 172, 173], "2021": 2, "improv": [2, 24, 133], "molecular": 2, "biologi": 2, "17": [2, 6, 13, 101, 106, 116, 130, 133, 166, 171, 172, 173], "e10243": 2, "http": [2, 7, 8, 23, 24, 117], "www": 2, "embopress": 2, "org": [2, 23, 117], "doi": 2, "15252": 2, "msb": 2, "202110243": 2, "_": [2, 6, 9, 26, 51, 68, 83, 132, 172], "zohar": 2, "loo": 2, "fisching": 2, "atyeo": 2, "wang": 2, "slein": 2, "g": [2, 8, 18, 19, 25, 28, 49, 53, 59, 64, 66, 67, 69, 72, 73, 77, 78, 82, 88, 95, 110, 129, 139, 140, 165, 167, 168, 170, 172, 173], "2020": 2, "compromis": 2, "humor": 2, "evolut": [2, 10], "track": 2, "mortal": 2, "183": 2, "1508": 2, "1519": 2, "sciencedirect": 2, "com": [2, 24], "scienc": 2, "articl": [2, 7, 8, 23], "pii": 2, "s0092867420314598": 2, "209": [2, 4], "plot_covid": [2, 4], "tucker": [3, 9, 11, 12, 16, 48, 50, 76, 77, 80, 103, 122, 124, 160, 161, 162, 163, 168, 169, 170, 174], "misc": 3, "face": 3, "ndimag": 3, "zoom": 3, "math": [3, 133], "ceil": [3, 29], "12345": 3, "dtype": [3, 7, 8, 25, 27, 28, 29, 30, 31, 43, 44, 54, 90, 91, 92, 93, 100, 101, 102, 106, 110, 116, 127, 128, 130, 131, 133, 149, 150, 165, 166, 168, 171], "float64": [3, 18, 25, 102, 110, 133, 165, 171], "to_imag": 3, "conveni": [3, 18, 19, 25, 95], "convert": [3, 20, 25, 28, 30, 31, 61, 161, 162, 163], "float": [3, 8, 26, 28, 29, 46, 47, 49, 50, 51, 53, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 86, 88, 91, 92, 93, 101, 102, 103, 104, 105, 106, 109, 117, 123, 124, 130, 133, 138, 145, 146, 165, 166, 167, 171], "back": [3, 18, 40, 125, 172], "uint8": [3, 116], "im": 3, "to_numpi": [3, 14, 15], "min": [3, 19, 31, 117, 168], "max": [3, 30, 106, 145, 168, 170], "255": 3, "astyp": 3, "cp": [3, 4, 5, 9, 11, 12, 16, 19, 26, 47, 48, 49, 52, 55, 56, 58, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 82, 85, 118, 123, 169, 170, 174], "cp_rank": 3, "tucker_rank": 3, "100": [3, 8, 14, 15, 26, 46, 47, 49, 50, 51, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 82, 83, 99, 123, 124, 167, 171], "10e": [3, 14, 15, 51, 83, 173], "cp_reconstruct": 3, "core": [3, 8, 18, 23, 46, 48, 50, 53, 55, 56, 72, 76, 77, 80, 122, 124, 153, 157, 160, 161, 162, 163, 167, 170, 173], "tucker_factor": 3, "tucker_reconstruct": 3, "tucker_to_tensor": [3, 8, 173], "fig": [3, 5, 6, 7, 8, 9, 10, 14, 15], "add_subplot": [3, 5, 14, 15], "set_axis_off": [3, 14, 15], "698": [3, 4], "plot_image_compress": [3, 4], "00": [4, 11, 16, 17, 173], "211": 4, "execut": [4, 11, 16, 17, 18, 20, 23, 168, 170], "auto_examples_appl": 4, "file": [4, 11, 16, 17, 20], "covid": [4, 12], "19": [4, 6, 12, 13, 54, 67, 73, 102, 171, 172], "serologi": [4, 12], "analysi": [4, 12, 49, 64, 66, 78], "05": [4, 6, 16], "mb": [4, 11, 16, 17], "imag": [4, 12, 14, 15, 63, 128, 168, 174], "compress": [4, 12], "via": [4, 12, 18, 26, 27, 29, 44, 46, 49, 50, 51, 52, 53, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 82, 83, 85, 87, 92, 110, 117, 128, 131, 165, 167, 171], "decomposit": [4, 5, 9, 11, 19, 23, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 139, 140, 153, 157, 162, 163, 168, 169, 171, 172, 174], "02": [4, 6, 7, 11], "non": [4, 6, 11, 12, 24, 26, 28, 29, 47, 48, 49, 64, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 101, 102, 106, 116, 125, 130, 131, 133, 150, 171, 173], "il": [4, 12], "acceler": [5, 7, 8], "converg": [5, 7, 8, 26, 46, 51, 68, 83, 123, 124], "random_cp": [5, 10, 170], "logspac": 5, "err": [5, 9], "empty_lik": [5, 166], "err_l": 5, "tt": [5, 46, 71, 87, 88, 120, 121, 153, 154, 155, 157, 158, 159, 170, 173], "tt_l": 5, "1234": 5, "get": [5, 9, 19, 23, 91, 93, 168, 170], "high": [5, 8, 46, 75, 77, 173], "accuraci": [5, 46], "2000000": 5, "0e": 5, "15": [5, 6, 9, 10, 13, 30, 31, 101, 102, 106, 116, 130, 133, 171, 172], "err_min": 5, "toll": 5, "enumer": [5, 14, 15, 62], "start": [5, 9, 23, 24, 27, 29, 34, 36, 39, 116, 133, 169, 172], "fals": [5, 26, 27, 28, 32, 36, 43, 44, 47, 48, 49, 50, 52, 53, 54, 55, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 101, 102, 106, 116, 118, 119, 120, 121, 122, 126, 128, 131, 133, 134, 139, 140, 141, 142, 147, 156, 160, 161, 162, 163, 164, 167, 171], "fit_transform": [5, 64, 65, 66, 67, 68, 168], "fac_l": 5, "error": [5, 7, 8, 9, 25, 26, 46, 47, 48, 49, 50, 51, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 100, 104, 105, 116, 125, 133, 167, 168, 170], "loglog": 5, "No": [5, 117], "r": [5, 9, 26, 49, 57, 59, 60, 61, 62, 64, 66, 68, 78, 111, 112, 113, 114, 115, 117, 130, 139, 172, 173, 174], "set_ylabel": [5, 9], "set_xlabel": [5, 9], "816": [5, 11, 174], "plot_cp_line_search": [5, 11], "On": [6, 10, 46, 130, 169], "you": [6, 9, 10, 12, 18, 19, 20, 23, 24, 25, 56, 89, 101, 116, 117, 125, 133, 163, 168, 170, 171, 172, 173, 174], "sinc": [6, 7, 8, 9, 19, 26, 46, 68, 112], "version": [6, 7, 8, 9, 24, 26, 28, 29, 30, 31, 43, 54, 59, 68, 89, 92, 100, 101, 102, 106, 107, 110, 116, 117, 129, 130, 131, 132, 133, 165, 166, 170, 171, 173], "penal": [6, 67, 73], "chosen": [6, 130, 164], "user": [6, 7, 8, 19, 23, 25, 67, 73, 92, 130, 168], "propos": [6, 8, 49, 64, 78], "implement": [6, 8, 18, 25, 26, 28, 29, 59, 100, 101, 102, 106, 116, 130, 133, 139, 168, 169, 170, 171, 174], "altern": [6, 7, 8, 26, 28, 46, 49, 59, 64, 66, 67, 68, 73, 75, 78, 100, 101, 102, 106, 111, 112, 113, 114, 115, 116, 128, 133, 168], "optim": [6, 9, 23, 25, 67, 73, 103], "multipli": [6, 55, 62, 67, 73, 90, 100, 116, 117, 141, 160], "ao": [6, 67, 73], "admm": [6, 67, 73], "solv": [6, 8, 51, 67, 73, 77, 83, 117, 171], "convex": 6, "problem": [6, 8, 51, 77, 83, 117, 173], "primal": 6, "dual": 6, "auxilliari": [6, 67, 73], "introduc": [6, 25, 67, 73, 100], "regular": [6, 67, 73, 170], "oper": [6, 12, 17, 18, 23, 90, 100, 101, 106, 144, 145, 146, 170], "call": [6, 7, 8, 10, 18, 19, 20, 29, 30, 31, 55, 67, 73, 100, 117, 125, 141, 160, 164, 168, 170, 172, 173], "proxim": 6, "chang": [6, 19, 25, 26, 44, 54, 68, 125, 126, 130, 147, 156, 169, 170], "accord": [6, 7, 8, 67, 73, 130], "select": [6, 101, 106, 116, 130, 170, 171], "sever": [6, 7, 8, 20, 23, 25, 55, 141, 142, 160, 168, 170], "correspond": [6, 18, 30, 31, 43, 52, 65, 70, 79, 85, 101, 106, 127, 139, 150, 152, 153, 157, 170, 174], "appli": [6, 19, 30, 31, 59, 67, 73, 105, 129, 144, 145, 146, 150, 171, 173], "non_neg": [6, 7, 67, 72, 73], "signatur": [6, 18, 27, 44, 100, 128, 131], "prevent": 6, "l1": [6, 67, 73], "l1_reg": [6, 67, 73], "add": [6, 9, 19, 25, 133], "cost": [6, 75, 77], "promot": [6, 100], "sparsiti": [6, 49, 64, 66, 75, 77, 78], "choos": [6, 7, 9, 46, 130, 164, 171], "l2": [6, 56, 67, 73], "l2_reg": [6, 49, 64, 67, 73, 78], "l2_square_reg": [6, 67, 73], "unimod": [6, 67, 73], "columnwis": [6, 77], "impos": [6, 26, 67, 68, 73, 75, 77, 174], "column": [6, 10, 43, 46, 52, 57, 58, 59, 60, 61, 65, 67, 70, 73, 75, 79, 84, 85, 92, 103, 110, 117, 129, 139, 165], "local": [6, 9, 18, 67, 73], "maximum": [6, 26, 30, 46, 47, 48, 49, 50, 51, 53, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 87, 101, 106, 123, 124, 167], "gaussian": 6, "simplex": [6, 67, 73], "live": 6, "defin": [6, 18, 26, 29, 67, 68, 73, 77, 92, 110, 130, 155, 159, 165, 166, 172], "radiu": 6, "entri": [6, 7, 8, 26, 46, 68, 111, 112, 113, 114, 115, 173], "nonneg": [6, 7, 8], "posit": [6, 28, 29, 47, 48, 69, 74, 75, 76, 77, 82, 92, 107, 131], "paramet": [6, 9, 14, 15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 174], "largest": 6, "absolut": [6, 26, 27, 67, 68, 73, 103], "elementwis": 6, "normalized_spars": [6, 67, 73], "k": [6, 9, 26, 27, 44, 46, 54, 55, 60, 62, 68, 71, 87, 89, 90, 92, 99, 100, 111, 112, 113, 114, 115, 117, 128, 129, 131, 139, 140, 141, 150, 153, 160, 166, 172], "spars": [6, 64, 66, 78, 80, 83, 167, 169, 170], "nonzero": [6, 26, 68, 111, 112, 113, 114, 115, 164], "per": [6, 7, 8, 69, 82, 142, 145], "soft": [6, 145], "soft_spars": [6, 67, 73], "bound": [6, 67, 73], "threshold": [6, 8, 46, 67, 73, 144, 145, 146], "smooth": [6, 67, 73], "favor": 6, "fact": [6, 7, 19, 56, 60], "band": [6, 67, 73], "monoton": [6, 67, 73], "alwai": [6, 19, 117, 125, 133, 170, 172], "base": [6, 7, 14, 15, 18, 19, 20, 46, 54, 166, 172, 173], "isoton": 6, "regress": [6, 7, 8, 16, 23, 63, 169], "hard": [6, 67, 73], "hard_spars": [6, 67, 73], "requir": [6, 7, 18, 19, 131, 168, 171], "boolean": [6, 28, 48, 49, 50, 51, 53, 64, 66, 71, 72, 75, 76, 77, 78, 80, 83, 87, 167, 171], "enough": [6, 100, 130], "11": [6, 13, 30, 31, 102, 107, 164, 171, 172], "support": [6, 9, 18, 19, 23, 25, 29, 51, 83, 92, 110, 165, 168, 170, 171], "constrained_parafac": 6, "set_printopt": 6, "precis": [6, 26, 29, 68, 75, 77, 102, 116, 133], "rand": 6, "itself": [6, 171], "tenalg": [6, 20, 50, 62, 80, 170], "validate_constraint": 6, "process": [6, 7, 8, 67, 73, 174], "If": [6, 9, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 44, 49, 54, 64, 66, 67, 68, 73, 75, 77, 78, 84, 89, 90, 92, 99, 100, 101, 102, 106, 109, 110, 116, 117, 125, 126, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 145, 147, 150, 152, 164, 165, 166, 168], "want": [6, 19, 20, 24, 25, 125, 168, 170, 174], "same": [6, 7, 8, 9, 26, 28, 30, 31, 43, 44, 46, 48, 49, 50, 51, 53, 54, 57, 59, 60, 61, 62, 64, 66, 68, 71, 72, 76, 77, 78, 80, 81, 83, 84, 86, 87, 88, 90, 99, 100, 101, 102, 106, 107, 111, 112, 113, 114, 115, 116, 117, 122, 125, 130, 131, 132, 133, 139, 144, 150, 163, 166, 167, 168, 170, 171, 173], "bool": [6, 26, 28, 30, 31, 32, 36, 49, 52, 54, 64, 65, 66, 67, 68, 70, 72, 73, 78, 79, 81, 82, 84, 85, 86, 101, 102, 103, 106, 116, 118, 119, 120, 121, 122, 126, 133, 134, 139, 140, 141, 142, 147, 156, 161, 162, 163, 164, 166], "should": [6, 8, 10, 18, 19, 20, 25, 29, 30, 31, 48, 49, 50, 51, 53, 59, 64, 66, 72, 75, 76, 77, 78, 80, 83, 88, 92, 96, 107, 117, 125, 142, 150, 156, 161, 162, 163, 164, 167, 168, 170, 171], "assum": [6, 99, 142, 168], "doe": [6, 9, 28, 29, 100, 101, 102, 106, 116, 117, 130, 133, 171], "write": [6, 21, 23, 24, 25, 60, 89, 125, 168, 170], "loc": [6, 7, 8, 9, 14, 15], "upper": [6, 7, 8, 9, 89, 92, 117], "left": [6, 7, 9, 26, 28, 30, 31, 46, 68, 101, 102, 106, 116, 133, 139, 140, 172], "similarli": [6, 20, 168], "coeffici": [6, 7, 9, 75, 77, 103, 129, 173], "induc": 6, "larg": [6, 29, 133, 171], "histogram": 6, "hist": 6, "flatten": [6, 30, 31, 36, 43, 89, 101, 102, 106, 130], "As": [6, 7, 8, 10, 19, 173], "option": [6, 7, 8, 20, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 43, 44, 47, 48, 49, 50, 51, 53, 54, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 87, 89, 90, 92, 100, 101, 102, 106, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 139, 140, 142, 147, 152, 161, 162, 163, 165, 166, 167], "dictionari": [6, 18, 67, 73, 123, 124, 168], "n": [6, 7, 8, 9, 13, 15, 25, 26, 29, 30, 31, 33, 49, 51, 53, 55, 62, 64, 66, 67, 68, 72, 73, 77, 78, 83, 90, 92, 99, 100, 117, 123, 124, 127, 130, 139, 140, 141, 142, 150, 152, 160, 167, 170, 172, 173, 174], "46": 6, "04": [6, 16], "41": [6, 130], "65": 6, "37": 6, "67": [6, 7], "71": 6, "48": [6, 7], "33": [6, 7, 9, 11, 71, 87], "38": [6, 130], "24": [6, 7, 8, 13, 30, 31, 46, 99, 116, 150, 171, 172], "18": [6, 13, 23, 130, 171, 172], "53": [6, 7, 11], "54": [6, 8, 11, 46], "39": 6, "63": [6, 7], "52": 6, "29": [6, 46], "49": [6, 46], "42": 6, "last": [6, 8, 28, 29, 35, 47, 49, 64, 66, 67, 73, 74, 78, 88, 90, 100, 111, 112, 116, 125, 130, 132, 133, 138, 150, 168, 172], "One": [6, 7, 8, 20, 125, 173], "prefer": [6, 29, 54, 90, 164], "possibl": [6, 19, 27, 44, 54, 59, 117, 125, 128, 131, 133, 152, 166, 168], "01": [6, 16], "03": [6, 11], "kei": [6, 18, 130], "20": [6, 7, 9, 11, 13, 20, 23, 28, 29, 43, 63, 69, 82, 92, 99, 102, 110, 125, 165, 171, 172], "57": 6, "27": [6, 7], "95": 6, "21": [6, 13, 171, 172, 174], "47": [6, 8], "92": 6, "23": [6, 7, 13, 171, 172], "22": [6, 13, 30, 31, 129, 171, 172], "32": [6, 116], "93": 6, "66": 6, "99": [6, 46], "43": 6, "61": 6, "07": [6, 11, 66, 75], "06": [6, 47, 51, 67, 73, 74, 83, 123, 124], "08": [6, 8, 26, 49, 64, 67, 68, 69, 73, 77, 78, 82], "l_1": 6, "l_2": 6, "huang": [6, 67, 73], "kejun": [6, 67, 73], "nichola": [6, 67, 73], "sidiropoulo": [6, 67, 73], "athanasio": [6, 67, 73], "p": [6, 67, 73, 111, 112, 117, 152], "liava": [6, 67, 73], "effici": [6, 67, 73], "matrix": [6, 7, 8, 9, 25, 26, 37, 46, 49, 55, 59, 64, 66, 67, 68, 73, 78, 84, 88, 90, 100, 111, 112, 113, 114, 115, 117, 119, 121, 129, 137, 139, 140, 141, 142, 144, 146, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 169, 170, 172], "ieee": [6, 48, 67, 73, 76, 174], "transact": [6, 67, 73, 174], "64": [6, 67, 73], "2016": [6, 67, 73], "5052": [6, 67, 73], "5065": [6, 67, 73], "onlin": [6, 9], "758": [6, 11], "plot_guide_for_constrained_cp": [6, 11], "comput": [7, 8, 19, 25, 26, 47, 48, 49, 50, 53, 59, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 87, 99, 101, 102, 103, 106, 109, 111, 112, 113, 114, 115, 117, 129, 137, 150, 154, 158, 167, 168, 173], "ncp": 7, "updat": [7, 8, 19, 24, 46, 47, 48, 59, 67, 72, 73, 74, 75, 76, 77, 95, 96], "mu": [7, 8, 51, 83], "alreadi": [7, 8, 18, 19, 23, 32, 130, 134, 168], "least": [7, 8, 26, 46, 49, 64, 66, 68, 75, 77, 78, 101, 106, 117, 129, 168], "al": [7, 8, 9, 26, 49, 64, 66, 68, 69, 75, 78, 82], "hierarch": [7, 8, 75], "constraint": [7, 8, 9, 26, 67, 68, 73, 75, 111, 112, 113, 114, 115], "handl": [7, 8, 9, 29, 100, 131, 168, 170, 171], "expect": [7, 8, 9, 10, 19, 20, 28, 43, 101, 102, 106, 116, 133], "after": [7, 8, 9, 10, 20, 67, 73, 100, 173], "obtain": [7, 8, 18, 44, 81, 86, 163, 172, 173, 174], "non_negative_parafac_h": 7, "_cp": 7, "initialize_cp": 7, "cptensor": [7, 26, 49, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 68, 73, 78], "copi": [7, 55, 89, 125, 130, 160], "deepcopi": [7, 54], "There": [7, 8, 10, 25, 59, 128, 168, 170], "wai": [7, 8, 18, 19, 25, 49, 64, 66, 78, 100, 150, 168, 170, 172, 173], "chose": [7, 8], "integ": [7, 8, 26, 29, 68, 75, 77, 102, 116, 125, 130, 133], "24000": 7, "reshap": [7, 9, 13, 30, 31, 46, 88, 89, 90, 99, 100, 101, 106, 150, 152, 166, 168, 171, 172], "30": [7, 8, 9, 10], "40": [7, 8, 9, 10, 29], "float32": [7, 25, 102, 133, 168], "goal": [7, 168], "produc": [7, 29], "approxim": [7, 8, 46, 49, 64, 66, 75, 77, 78, 170, 173], "abov": [7, 10, 20, 26, 68, 89, 102, 111, 112, 113, 114, 115, 116, 117, 131, 171], "low": [7, 8, 51, 83, 123, 124, 170], "befor": [7, 10, 19, 20, 28, 33, 43, 101, 102, 103, 106, 116, 130, 133, 171, 173], "good": 7, "initi": [7, 9, 26, 46, 47, 49, 50, 51, 52, 64, 65, 66, 67, 68, 70, 73, 74, 78, 79, 80, 81, 83, 85, 86, 101, 106, 116, 125, 133, 168], "guess": 7, "compar": [7, 8, 10, 58, 101, 106, 130], "fair": 7, "idea": [7, 62, 173], "transform": 7, "instanc": [7, 9, 19, 20, 25, 29, 36, 41, 93, 168, 170, 171, 172, 174], "class": [7, 20, 21, 23, 28, 54, 64, 65, 66, 67, 68, 69, 70, 71, 72, 92, 95, 101, 102, 106, 116, 123, 124, 126, 133, 147, 166], "weights_init": 7, "factors_init": 7, "cp_init": 7, "let": [7, 19, 23, 117, 125, 168, 170, 172, 173], "tic": [7, 8], "tensor_mu": [7, 8], "errors_mu": 7, "return_error": [7, 8, 9, 19, 26, 47, 48, 49, 53, 64, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 82, 167], "cp_reconstruction_mu": 7, "time_mu": [7, 8], "output": [7, 8, 9, 10, 27, 28, 29, 44, 90, 92, 101, 102, 106, 116, 125, 128, 131, 133, 150], "input": [7, 8, 10, 19, 26, 27, 28, 29, 30, 31, 43, 44, 51, 52, 54, 64, 65, 66, 67, 68, 73, 79, 81, 83, 85, 86, 88, 89, 100, 101, 102, 106, 107, 110, 116, 117, 127, 128, 131, 132, 133, 150, 152, 165, 166, 168, 171], "inde": 7, "quit": 7, "coars": 7, "8234": 7, "83": 7, "8296": 7, "8291": 7, "91": [7, 9], "8379": 7, "9134": 7, "9206": 7, "8975": 7, "59": 7, "9078": 7, "87": 7, "8210": 7, "8211": 7, "8230": 7, "8231": 7, "9010": 7, "9011": 7, "9030": 7, "9031": 7, "tensor_h": 7, "errors_h": 7, "cp_reconstruction_h": 7, "time_h": 7, "again": 7, "8212": 7, "8208": 7, "98": [7, 100], "79": [7, 20, 46], "9009": 7, "9033": 7, "huge": 7, "gap": 7, "solut": [7, 8, 75, 77, 129], "subproblem": 7, "rather": [7, 29, 46], "faster": [7, 8, 46, 62, 101, 106, 130], "note": [7, 10, 18, 19, 20, 25, 26, 27, 28, 30, 31, 32, 41, 43, 44, 46, 49, 50, 51, 53, 54, 56, 59, 60, 62, 64, 66, 68, 77, 78, 80, 83, 88, 99, 100, 101, 102, 106, 116, 117, 125, 128, 129, 130, 131, 133, 134, 139, 140, 142, 150, 152, 161, 162, 163, 164, 167, 170, 171, 173], "overal": 7, "still": [7, 24, 130, 170], "need": [7, 8, 18, 19, 24, 25, 46, 75, 130, 164, 168, 170, 171], "longer": [7, 8, 20, 171], "reach": 7, "subroutin": [7, 77], "simpli": [7, 13, 24, 117, 168, 170], "tensorhals_exact": 7, "errors_exact": 7, "cp_reconstruction_exact_h": 7, "time_exact_h": 7, "str": [7, 8, 26, 43, 47, 49, 50, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 82, 94, 126, 130, 136, 147, 167], "2f": [7, 8], "3212": 7, "35": 7, "take": [7, 19, 62, 103, 125, 138, 150, 168, 170, 171, 172, 174], "much": [7, 8, 29, 77, 156, 163, 171], "gain": 7, "often": [7, 9, 29, 133], "void": 7, "recommend": [7, 8, 20], "avoid": [7, 9, 171], "unless": [7, 28, 116, 133], "applic": [7, 25, 46, 47, 49, 53, 64, 66, 67, 72, 73, 74, 77, 78, 129, 139, 140, 167, 172, 173], "appear": [7, 8, 20], "similar": [7, 8, 9, 54, 103, 117, 129], "runtim": [7, 46], "howev": [7, 8, 9, 25, 28, 101, 102, 106, 116, 117, 133, 168, 171, 172], "closer": 7, "suggest": 7, "behav": [7, 164], "tell": 7, "stori": 7, "better": [7, 8, 19, 25, 29, 130, 133, 171, 172], "root": [7, 8, 105, 131], "rmse": [7, 8], "metric": [7, 8, 169], "245": 7, "42122": 7, "9134269": 7, "3066492": 7, "lower": [7, 8, 89, 92, 133], "appreci": [7, 8], "speed": [7, 8, 130, 133], "iter": [7, 8, 9, 26, 46, 47, 48, 49, 50, 51, 52, 53, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 101, 106, 123, 124, 167], "each_iter": [7, 8], "b": [7, 8, 9, 26, 27, 30, 31, 43, 49, 53, 54, 56, 64, 66, 67, 68, 72, 73, 77, 78, 90, 99, 100, 101, 106, 111, 112, 113, 114, 115, 117, 125, 129, 132, 139, 140, 150, 167, 172, 173], "set_size_inch": [7, 8, 10], "get_figheight": [7, 8, 10], "forward": [7, 8, 10, 19, 130], "conclus": [7, 8], "quick": [7, 8, 169], "test": [7, 8, 13, 14, 15, 21, 23, 25, 28, 63, 170, 171, 174], "give": [7, 8, 19, 75, 77, 125, 127, 152, 171], "default": [7, 8, 18, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 39, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 92, 101, 102, 106, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 133, 134, 138, 139, 140, 141, 142, 147, 150, 152, 156, 161, 162, 163, 165, 166, 167, 168, 170], "resort": [7, 8], "encount": [7, 8], "expert": [7, 8], "gilli": [7, 8], "glineur": [7, 8], "2012": [7, 8, 174], "neural": [7, 8], "1085": [7, 8], "1105": [7, 8], "link": [7, 8], "mit": [7, 8], "edu": [7, 8], "neco": [7, 8], "7755": [7, 8], "271": [7, 11], "plot_nn_cp_hal": [7, 11], "e": [8, 18, 19, 24, 25, 28, 51, 57, 59, 61, 67, 73, 81, 83, 84, 86, 88, 95, 110, 129, 138, 139, 162, 165, 168, 170, 171], "min_": [8, 51, 77, 83], "geq": 8, "t_": 8, "g_": 8, "_f": [8, 9], "ith": 8, "mode": [8, 9, 13, 24, 25, 26, 33, 34, 36, 39, 47, 48, 49, 50, 53, 55, 59, 60, 61, 62, 64, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 80, 81, 84, 111, 112, 114, 117, 122, 124, 138, 141, 142, 148, 154, 158, 160, 161, 162, 163, 167, 168, 170, 171, 172, 173], "unfold": [8, 13, 20, 33, 34, 36, 59, 60, 61, 62, 114, 154, 158, 162, 168, 169, 170, 171], "vector": [8, 9, 55, 59, 61, 90, 100, 103, 115, 141, 142, 155, 159, 160, 161, 162, 163, 170, 171, 173, 174], "AS": 8, "fast": [8, 23, 46, 133], "shrinkag": [8, 145], "gradient": [8, 77], "unconstrain": 8, "wide": 8, "lawson": 8, "hanson": 8, "1974": 8, "non_negative_tuck": [8, 170, 173], "non_negative_tucker_h": 8, "randint": 8, "size": [8, 9, 14, 15, 28, 29, 30, 31, 43, 48, 50, 52, 53, 65, 70, 72, 76, 77, 79, 80, 85, 86, 88, 90, 100, 101, 102, 106, 112, 116, 117, 130, 132, 133, 137, 139, 140, 150, 167, 170, 172, 173], "error_mu": 8, "tucker_reconstruction_mu": 8, "ticnew": 8, "tensor_hals_fista": 8, "error_fista": 8, "tucker_reconstruction_fista": 8, "time_fista": 8, "tensor_hals_a": 8, "error_a": 8, "active_set": [8, 77], "tucker_reconstruction_a": 8, "time_a": 8, "nntucker": 8, "glanc": 8, "complex": [8, 27, 44, 90, 100, 117, 128, 130, 131, 141, 142], "283": 8, "2598656942763": 8, "279": 8, "8613024291675": 8, "277": [8, 23], "1349463619454": 8, "besid": [8, 46], "experi": [8, 14, 15, 24], "veri": [8, 25, 54, 168], "172": [8, 11], "plot_nn_tuck": [8, 11], "la": 9, "linear_sum_assign": 9, "inx": 9, "kier": [9, 26, 68], "et": 9, "1999": [9, 26, 68], "mathcal": 9, "mathbb": [9, 172], "j": [9, 14, 15, 26, 44, 55, 68, 71, 77, 87, 90, 99, 131, 139, 141, 150, 160, 172], "shift": 9, "form": [9, 26, 68, 111, 112, 113, 114, 115, 169, 170], "ijk": [9, 26, 68, 111, 112, 113, 114, 115], "sum_": [9, 26, 51, 68, 83, 111, 112, 113, 114, 115, 172, 173], "a_": [9, 26, 51, 68, 83, 111, 112, 113, 114, 115], "ir": [9, 26, 68, 111, 112, 113, 114, 115], "b_": [9, 26, 68, 111, 112, 113, 114, 115], "sigma_i": 9, "c_": [9, 26, 68, 111, 112, 113, 114, 115], "kr": [9, 18, 26, 68, 111, 112, 113, 114, 115], "cyclic": 9, "permut": [9, 11, 12, 58, 103, 107, 152], "element": [9, 20, 26, 27, 28, 29, 30, 31, 44, 47, 48, 49, 53, 54, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 82, 92, 99, 100, 101, 102, 106, 111, 112, 113, 114, 115, 116, 119, 125, 127, 128, 130, 131, 133, 145, 150, 164, 167, 172], "true_rank": 9, "noise_r": 9, "seed": [9, 41, 84], "matric": [9, 26, 57, 59, 60, 61, 62, 68, 84, 98, 100, 103, 111, 112, 113, 114, 115, 117, 139, 140, 142, 161, 162, 163, 171, 173], "a_factor_matrix": 9, "uniform": [9, 25, 168], "b_factor_matrix": 9, "c_factor_matrix": 9, "normalis": [9, 57], "a_normalis": 9, "b_normalis": 9, "c_normalis": 9, "b_factor_matric": 9, "roll": 9, "bs_normalis": 9, "construct": [9, 89, 113, 114, 115, 171], "einsum": [9, 25, 62, 90, 100, 139, 150, 170], "ijr": [9, 26, 68, 111, 112, 113, 114, 115], "nois": [9, 26, 68], "standard_norm": 9, "minima": [9, 106], "initialis": 9, "lowest": 9, "best_err": 9, "train": [9, 46, 71, 87, 156, 158, 169, 170], "trial_decomposit": 9, "trial_err": 9, "500": [9, 49, 53, 64, 66, 67, 72, 73, 77, 78, 99, 139, 140, 167, 172, 173], "best": [9, 81, 86, 117, 129, 130, 133], "09204720575424472": 9, "09204726856012718": 9, "09269711804187236": 9, "392": 9, "09204692795621945": 9, "415": 9, "09204692959223097": 9, "09291065541285953": 9, "364": 9, "09204692769766268": 9, "424": 9, "09204692883956123": 9, "481": 9, "09204693125447479": 9, "09205635789758464": 9, "wrapper": [9, 21, 25, 168], "variabl": [9, 10, 18, 19, 20, 77, 129, 171], "somewhat": 9, "b_i": [9, 26, 68, 111, 112, 113, 114, 115], "p_i": [9, 26, 68, 111, 112, 113, 114, 115], "cannot": [9, 19, 26, 43, 47, 49, 64, 66, 67, 68, 73, 74, 78], "store": [9, 10, 27, 44, 92, 100, 110, 128, 131, 165], "instead": [9, 19, 25, 28, 43, 90, 100, 101, 102, 106, 112, 116, 130, 133, 170, 171, 172], "along": [9, 28, 30, 31, 43, 50, 80, 89, 101, 102, 106, 111, 112, 116, 117, 130, 132, 133, 150, 154, 158, 172], "blueprint": 9, "third": [9, 18, 26, 43, 63, 68, 150, 173], "tupl": [9, 27, 28, 30, 31, 33, 34, 37, 40, 44, 62, 84, 88, 99, 101, 102, 106, 109, 116, 118, 119, 120, 121, 122, 125, 127, 128, 131, 133, 148, 152, 165], "extract": [9, 89], "inform": [9, 25, 29, 93, 117, 170, 173], "parafac2_tensor": [9, 170], "apply_projection_matric": 9, "anoth": [9, 10, 19, 25, 29, 58, 103, 171], "frontal": [9, 26, 68, 111, 112, 113, 114, 115, 172], "slice": [9, 26, 62, 68, 101, 106, 111, 112, 113, 114, 115, 172], "likewis": 9, "parafac2_to_tensor": [9, 112], "consist": [9, 20, 28, 130, 131, 150, 172], "uneven": [9, 113, 114, 115], "length": [9, 27, 29, 44, 52, 57, 65, 70, 75, 79, 84, 85, 101, 106, 125, 127, 128, 131, 139, 142, 150, 162, 163], "parafac2_to_slic": 9, "est_tensor": 9, "est_weight": 9, "est_a": 9, "est_b": 9, "est_c": 9, "apply_parafac2_project": 9, "reconstruction_error": 9, "recovery_r": 9, "recov": [9, 173], "congruenc": [9, 103], "est_projected_b": 9, "sign": [9, 44, 116, 133, 145], "ab": [9, 26, 68, 145], "newaxi": [9, 27], "est_a_normalis": 9, "est_bs_normalis": 9, "est_c_normalis": 9, "b_corr": 9, "a_corr": 9, "c_corr": 9, "corr": 9, "old": [9, 117], "maximis": 9, "v1": 9, "pass": [9, 18, 19, 20, 28, 29, 32, 49, 54, 78, 92, 100, 101, 102, 106, 110, 116, 117, 133, 134, 165, 171], "maxim": [9, 30, 51, 83], "congruence_coeffici": 9, "averag": [9, 102, 130, 133], "9947046512423614": 9, "estim": [9, 14, 15, 81, 86, 104, 105, 174], "argmax": [9, 31, 101], "what": [9, 18, 24, 43, 89, 117, 132], "flip": 9, "a_sign": 9, "correct": [9, 18, 19, 29, 43, 104, 105, 129, 132, 168], "entir": [9, 32, 134], "get_legend_handles_label": 9, "center": 9, "ncol": 9, "0x7f8480f9ccd0": 9, "interest": 9, "loss": [9, 29], "sure": [9, 19], "stationari": 9, "point": [9, 18, 29, 91, 93, 102, 117, 133], "skip": [9, 34, 37, 62, 84, 139, 140, 142, 161, 162, 163], "domin": 9, "rest": [9, 164, 168], "difficult": 9, "loss_fig": 9, "loss_ax": 9, "rel": [9, 26, 49, 64, 66, 67, 68, 73, 78, 130], "mathematical_expression_of_loss": 9, "frac": [9, 103], "hat": [9, 26, 68], "xtick": 9, "get_xtick": 9, "ten": [9, 26, 68], "berg": [9, 26, 68], "jm": 9, "bro": [9, 26, 49, 64, 66, 68, 78], "part": [9, 20, 24, 26, 44, 51, 68, 83, 130], "journal": [9, 23], "chemometr": [9, 26, 49, 64, 66, 68, 78], "societi": 9, "275": [9, 26, 68], "94": 9, "463": [9, 11], "plot_parafac2": [9, 11], "cp_permute_factor": 10, "match": [10, 43, 54, 58, 100, 132, 150, 166], "minim": [10, 23, 58, 168], "cosin": [10, 58, 103], "distanc": [10, 29, 58], "linear": [10, 46, 58, 129, 173], "assign": [10, 21, 58, 125], "simultan": 10, "manual": [10, 25], "50": [10, 46, 99, 101, 106, 164, 171], "cp_tensor_1": 10, "cp_tensor_2": 10, "cp_copi": 10, "cp_tensor_3": 10, "col_order_1": 10, "col_order_2": 10, "manipul": [10, 169], "limit": [10, 18, 93, 130, 133], "won": 10, "equal": [10, 26, 27, 28, 43, 44, 58, 68, 92, 111, 112, 113, 114, 115, 117, 128, 130, 131, 132], "predefin": 10, "subplots_adjust": 10, "hspace": 10, "text": [10, 20, 26, 51, 68, 83, 139, 140, 141, 142, 172], "166": [10, 11], "plot_permute_factor": [10, 11], "646": 11, "auto_examples_decomposit": 11, "demonstr": [11, 12, 173], "parafac2": [11, 12, 111, 112, 113, 114, 115, 119], "line": [11, 12, 20, 49, 64, 78], "search": [11, 12, 49, 64, 78], "constrain": [11, 12, 26, 67, 68, 73], "usag": [12, 18, 23, 95, 169], "basic": [12, 17, 145, 169, 170], "auto_examples_python": 12, "zip": [12, 164], "auto_examples_jupyt": 12, "assert_array_equ": 13, "14": [13, 30, 31, 92, 102, 171, 172], "ndim": [13, 34, 36, 39, 48, 50, 53, 62, 72, 76, 77, 80, 88, 99, 101, 106, 138, 142, 152, 161, 162, 163, 167], "re": [13, 30, 31, 34, 43, 62, 153, 157], "fold": [13, 18, 34, 40, 169, 170], "007": [13, 17], "plot_tensor": [13, 17], "cp_regress": 14, "cpregressor": 14, "tensor_to_vec": [14, 15, 163], "partial_tensor_to_vec": [14, 15], "synthet": [14, 15, 25], "gen_imag": [14, 15], "image_height": [14, 15, 63], "image_width": [14, 15, 63], "rectangl": [14, 15, 63], "swiss": [14, 15, 63, 173], "circl": [14, 15], "rng": [14, 15], "check_random_st": [14, 15], "deduc": [14, 15], "n_row": [14, 15, 139, 140], "n_column": [14, 15, 139, 140], "weight_img": [14, 15], "region": [14, 15, 63], "y": [14, 15, 44, 54, 100, 117, 123, 124, 127, 128, 131, 164, 165, 166, 174], "dot": [14, 15, 60, 62, 100, 117, 129, 150, 163, 170], "skip_begin": [14, 15, 34, 35, 36, 37], "orrd": [14, 15], "interpol": [14, 15], "nearest": [14, 15], "nweight": [14, 15], "regressor": [14, 15], "weight_rank": [14, 15, 123, 124], "reg_w": [14, 15, 123, 124], "verbos": [14, 15, 26, 47, 48, 49, 50, 51, 52, 53, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 123, 124, 167], "fit": [14, 15, 19, 26, 68, 69, 82, 123, 124, 168, 170, 174], "weight_tensor_": [14, 15], "nrank": [14, 15], "suptitl": [14, 15], "423": [14, 16], "plot_cp_regress": [14, 16], "tucker_regress": 15, "tuckerregressor": 15, "098": [15, 16], "plot_tucker_regress": [15, 16], "522": 16, "auto_examples_regress": 16, "auto_exampl": 17, "switch": [18, 25, 130, 170], "thread": [18, 32, 126, 134, 147], "current": [18, 25, 49, 64, 66, 67, 73, 75, 78, 94, 117, 130, 136, 168, 170, 171], "being": [18, 29, 130, 171], "get_backend": [18, 19], "global": [18, 32, 41, 49, 64, 66, 78, 134], "set_backend": [18, 32, 134, 168, 170], "enabl": [18, 23, 25], "parti": 18, "packag": [18, 24, 171], "dask": 18, "parallel": 18, "over": [18, 25, 26, 27, 28, 44, 59, 68, 90, 100, 101, 102, 106, 116, 117, 128, 131, 133, 142, 150, 173], "inherit": 18, "spawn": 18, "typic": [18, 20], "main": [18, 46, 89, 92, 168], "context": [18, 21, 32, 118, 119, 120, 121, 122, 134, 169], "manag": [18, 32, 134], "backend_context": 18, "whcih": 18, "safe": [18, 43, 171], "approach": [18, 133], "librari": [18, 20, 25, 168], "matter": 18, "transpos": [18, 62, 107, 117, 125, 141, 142, 161, 162, 163, 170], "clip": [18, 67, 73], "etc": [18, 19, 25, 130, 168, 170], "staticmethod": 18, "common": [18, 99, 117, 128, 131, 150, 170], "api": [18, 23, 130, 168, 170], "some": [18, 20, 25, 26, 29, 68, 117, 164, 171, 173], "kron": 18, "subclass": [18, 117, 164], "logic": [18, 28], "__init__": [18, 168], "cach": 18, "maintain": [18, 23, 117], "_loaded_backend": 18, "actual": [18, 29, 88, 130, 171], "modul": [18, 21, 25, 43, 168, 170, 174], "_backend": 18, "importlib": 18, "register_backend": 18, "onc": [18, 23, 168], "grab": 18, "intern": [18, 29, 47, 74], "_state": 18, "storag": [18, 173], "farm": 18, "mechan": 18, "wrap": [18, 19], "docstr": [18, 19, 21], "minutia": 18, "themselv": 18, "certain": 18, "properti": [18, 117, 130, 168], "descriptor": 18, "int32": [18, 29, 133], "tf": 18, "compat": [18, 21, 24, 29, 92, 110, 117, 125, 130, 165], "varaibl": 18, "override_module_dispatch": 18, "done": [18, 24, 62, 168, 172], "_getattr__": 18, "__dir__": 18, "pep": [18, 100], "562": 18, "overwrit": 18, "sy": 18, "module_nam": 18, "__class__": 18, "custom": [18, 165], "moduletyp": 18, "overrridden": 18, "__getitem__": 18, "welcom": 19, "cool": 19, "spot": 19, "bug": 19, "even": [19, 25, 116, 130, 171], "typo": 19, "mistak": 19, "document": [19, 21, 23, 89, 129, 152, 164], "pleas": [19, 23, 101, 106, 174], "report": 19, "open": [19, 23, 29], "pull": 19, "request": 19, "relev": 19, "issu": [19, 23, 29, 102], "talk": 19, "gitter": 19, "fix": [19, 25, 47, 49, 53, 57, 59, 60, 61, 64, 66, 67, 72, 73, 74, 75, 78, 167, 172], "repositori": 19, "help": 19, "unit": [19, 57], "especi": [19, 102, 133, 168], "refactor": 19, "exis": 19, "broken": 19, "submit": 19, "your": [19, 20, 23, 24, 25, 88, 168, 170], "adher": 19, "guid": [19, 23], "easiest": 19, "black": 19, "pip": 19, "instal": [19, 23, 168], "exist": [19, 43, 130, 132], "don": [19, 101, 106], "hesit": 19, "contact": 19, "unsur": 19, "transpar": [19, 25, 168, 170], "never": 19, "directli": [19, 24, 25, 46, 49, 78, 84, 133, 139, 164], "torch": [19, 23, 170], "tensordot": [19, 90, 100], "doesn": [19, 46], "try": [19, 166], "ones": [19, 26, 49, 64, 66, 68, 78, 92, 99, 100, 133, 152, 165, 166, 170, 171, 173], "otherwis": [19, 26, 30, 31, 49, 54, 64, 66, 68, 72, 78, 88, 90, 102, 118, 119, 120, 121, 122, 125, 138, 164, 166], "statement": 19, "min_valu": [19, 168], "NOT": 19, "reason": 19, "restrict": 19, "might": [19, 29, 112, 168, 170], "ndarrai": [19, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 53, 54, 55, 59, 60, 61, 63, 64, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 89, 90, 92, 99, 100, 101, 102, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 140, 141, 142, 144, 145, 146, 150, 152, 153, 157, 160, 164, 165, 166, 167, 168], "fail": [19, 117, 131], "aspect": 19, "new_tensor": [19, 168], "express": [19, 26, 62, 68, 111, 112, 113, 114, 115, 172, 173], "unfortun": 19, "index_upd": [19, 25, 95], "previou": [19, 49, 64, 66, 67, 73, 75, 78, 117, 130], "becom": [19, 32, 59, 77, 133, 134], "becaus": [19, 26, 28, 29, 117, 170, 171], "orient": 19, "automat": [19, 20, 130, 171], "util": [19, 23, 25, 170], "assert_class_wrapper_correctly_passes_argu": 19, "keyword": [19, 27, 44, 100, 102, 125, 128, 130, 131, 152], "argument": [19, 27, 29, 43, 44, 54, 90, 92, 100, 101, 102, 106, 110, 128, 130, 131, 132, 150, 152, 164, 165, 168], "test_cp": 19, "monkeypatch": 19, "ignore_arg": 19, "except": [19, 28, 29, 43, 63, 90, 92, 101, 102, 106, 116, 117, 130, 133, 173], "notic": [19, 20, 101, 106], "pytest": [19, 24], "know": 19, "plan": 19, "purpos": [19, 25], "essenti": 19, "behind": 19, "scene": 19, "inspect": 19, "down": 19, "Then": [19, 24, 77, 139, 140], "mock": 19, "word": [19, 29, 33, 168], "temporarili": 19, "replac": 19, "assert": 19, "everi": [19, 133, 139, 140], "placehold": 19, "send": [19, 168], "reset": 19, "behaviour": [19, 29, 130], "crutial": 20, "cover": [20, 130, 164], "syntax": 20, "restructuredtext": 20, "rst": 20, "come": [20, 24, 130], "style": [20, 21, 92, 110, 165], "arg": 20, "descript": [20, 170], "possibli": 20, "space": [20, 29, 130], "colon": 20, "explan": [20, 117, 174], "singl": [20, 26, 28, 68, 81, 86, 101, 102, 106, 111, 116, 130, 133, 150], "backtick": 20, "doubl": [20, 117, 150], "inlin": 20, "block": [20, 43, 99, 132], "leav": [20, 34, 35, 36, 37], "white": 20, "indent": 20, "said": [20, 172], "mod": 20, "algebra": [20, 23, 129, 169], "func": 20, "hierarchi": 20, "determin": [20, 101, 106, 117, 129, 130], "tabl": 20, "content": 20, "rubric": 20, "locat": [20, 27, 44, 100, 128, 131, 170], "everytim": 20, "short": [20, 24, 168, 170], "plot_xyz": 20, "remaind": 20, "comment": 20, "below": [20, 26, 29, 89, 102], "displai": 20, "myvari": 20, "my": 20, "section": [20, 29], "header": 20, "render": 20, "begin": [20, 34, 35, 36, 37, 51, 83, 172], "underlin": 20, "emb": 20, "symbol": 20, "splitter": 20, "guidelin": 21, "practic": [21, 46, 69, 82, 117, 168], "index": [21, 30, 31, 34, 36, 39, 62, 84, 92, 96, 100, 125, 132, 139, 140, 142, 161, 162, 163, 172], "interfac": [21, 117, 168, 171], "dispatch": [21, 25, 170], "simpl": 23, "bsd": 23, "licens": 23, "pure": 23, "apach": 23, "thorough": 23, "discov": 23, "easili": [23, 25, 168, 170, 173], "advanc": [23, 25, 170], "anywher": 23, "multi": [23, 25, 49, 64, 66, 78, 110, 165, 168, 172], "machin": [23, 26, 47, 68, 74, 91, 93, 170], "speedup": 23, "extens": 23, "Its": [23, 53, 72, 129, 167], "suitabl": 23, "industri": [23, 49, 64, 66, 78], "academia": 23, "lab": 23, "around": 23, "world": 23, "instruct": [23, 168], "friendli": 23, "meet": 23, "team": 23, "consid": [23, 26, 49, 64, 66, 67, 68, 73, 78], "cite": 23, "year": [23, 24], "2019": 23, "volum": [23, 46], "26": 23, "v20": 23, "html": [23, 24], "emsp": 23, "author": 23, "bibtex": 23, "python3": 24, "python2": 24, "probabl": 24, "upgrad": 24, "pain": 24, "free": [24, 26, 68], "anaconda": 24, "distribiut": 24, "ship": 24, "termin": [24, 49, 64, 66, 67, 73, 75, 78], "channel": 24, "And": 24, "cd": 24, "git": 24, "edit": 24, "equival": [24, 28, 29, 54, 59, 62, 90, 92, 96, 116, 125, 127, 128, 129, 133, 150, 152, 163, 164, 173], "uni": 24, "vital": 24, "slimit": 24, "minifi": 24, "rcssmin": 24, "build": 24, "doc": [24, 27, 44, 100, 128, 131], "_build": 24, "answer": [24, 117], "2018": 24, "releas": 24, "ago": 24, "break": [24, 130], "lot": 24, "thing": 24, "quot": 24, "wiki": [24, 117], "legaci": 24, "languag": 24, "strengh": 25, "weak": 25, "loos": 25, "popular": 25, "complet": [25, 117, 170], "thin": 25, "known": [25, 71, 87, 153, 171, 173], "product": [25, 26, 55, 59, 60, 61, 62, 68, 84, 90, 99, 100, 103, 111, 112, 113, 114, 115, 116, 135, 138, 139, 140, 141, 142, 143, 150, 157, 160, 169, 170], "state": [25, 157, 169], "whose": [25, 26, 68, 92, 102, 107, 111, 112, 113, 114, 115, 131, 153, 157], "evolv": [25, 26, 68, 111, 112, 113, 114, 115], "khatri": [25, 56, 59, 60, 61, 62, 84, 139], "rao": [25, 56, 62, 84, 139], "kroneck": [25, 62, 99, 139, 163, 170], "own": 25, "candecomp": [25, 49, 64, 66, 67, 73, 78, 169], "quickli": [25, 170], "necessarili": 25, "tensor_slic": [26, 68], "2000": [26, 68], "svd": [26, 46, 47, 48, 49, 50, 53, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 87, 144, 145, 167, 171, 173], "truncated_svd": [26, 47, 49, 50, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 82, 167, 168], "normalize_factor": [26, 47, 48, 49, 64, 66, 68, 74, 75, 76, 77, 78], "absolute_tol": [26, 68], "nn_mode": [26, 66, 68, 75], "n_iter_parafac": [26, 68], "th": [26, 53, 68, 72, 89, 92, 111, 112, 113, 114, 115, 139, 152, 167], "x_i": [26, 68, 111, 112, 113, 114, 115, 174], "diag": [26, 68, 92, 111, 112, 113, 114, 115], "a_i": [26, 68, 111, 112, 113, 114, 115], "diagon": [26, 68, 89, 92, 111, 112, 113, 114, 115, 173], "row": [26, 43, 68, 84, 92, 110, 111, 112, 113, 114, 115, 129, 139, 165], "j_i": [26, 51, 68, 83, 111, 112, 113, 114, 115], "cross": [26, 46, 68, 111, 112, 113, 114, 115, 170, 173], "i_1": [26, 38, 40, 55, 68, 111, 112, 113, 114, 115, 141, 160, 172, 173], "constant": [26, 57, 68, 111, 112, 113, 114, 115, 119], "reformul": [26, 68, 111, 112, 113, 114, 115], "orthogon": [26, 50, 53, 68, 72, 80, 111, 112, 113, 114, 115, 117, 118, 122, 167], "formul": [26, 68, 111, 112, 113, 114, 115], "x_": [26, 68, 111, 112, 113, 114, 115, 172], "hold": [26, 57, 68, 111, 112, 113, 114, 115], "int": [26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 41, 43, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 101, 102, 106, 107, 109, 110, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 130, 132, 133, 137, 138, 139, 140, 141, 142, 148, 150, 152, 154, 156, 158, 160, 161, 162, 163, 165, 166, 167], "previous": [26, 54, 68, 172, 173], "parafac2tensor": [26, 68, 111, 112, 113, 114, 115], "initialize_factor": [26, 49, 64, 66, 67, 68, 73, 78], "accept": [26, 47, 49, 50, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 82, 167], "svd_fun": [26, 47, 49, 50, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 82, 167], "aggreg": [26, 47, 48, 49, 64, 66, 68, 74, 75, 76, 77, 78], "1d": [26, 38, 40, 47, 49, 55, 64, 66, 67, 68, 73, 74, 75, 78, 111, 112, 113, 114, 115, 123, 139, 141, 160, 163], "inaccuraci": [26, 68], "toler": [26, 47, 49, 50, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 82, 167], "epsilon": [26, 68, 91], "That": [26, 68, 116, 173], "less": [26, 46, 47, 49, 50, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 82, 116, 130, 133, 167], "stop": [26, 27, 29, 47, 49, 50, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 82, 167], "condit": [26, 27, 44, 68, 88, 90, 120, 121, 128, 131, 164], "tolearnc": [26, 68], "epsilon_": [26, 68], "necessari": [26, 68, 99, 102, 116, 117, 133, 168, 171], "warn": [26, 29, 68], "shown": [26, 68], "info": [26, 68], "randomst": [26, 41, 46, 47, 48, 49, 50, 53, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 78, 80, 82, 84, 118, 119, 120, 121, 122, 123, 124, 167], "projection_matric": [26, 68, 111, 112, 113, 114, 115], "slightli": [26, 68], "li": [26, 68], "wherea": [26, 68], "nd": [26, 49, 64, 66, 68, 78, 118, 120, 121, 122, 132, 137], "reorder": [26, 68, 107], "consequ": [26, 130], "unlik": [26, 101, 106], "l": [26, 68, 109], "294": [26, 68], "cast": [27, 29, 43, 44, 100, 102, 116, 128, 131, 133], "same_kind": [27, 43, 44, 100, 128, 131], "subok": [27, 44, 54, 100, 128, 131, 166], "extobj": [27, 44, 100, 128, 131], "wise": [27, 43, 44, 75, 101, 106, 128, 131, 139], "shorthand": [27, 100, 164], "array_lik": [27, 28, 29, 30, 31, 43, 44, 54, 89, 90, 92, 99, 100, 101, 102, 106, 110, 116, 117, 125, 127, 128, 129, 130, 131, 132, 133, 150, 152, 164, 165, 166], "broadcast": [27, 28, 30, 31, 44, 59, 100, 101, 102, 106, 116, 128, 129, 131, 133, 164], "freshli": [27, 44, 100, 128, 131], "alloc": [27, 44, 100, 128, 131], "At": [27, 44, 128, 131], "ufunc": [27, 28, 44, 100, 101, 102, 106, 116, 128, 131, 133], "elsewher": [27, 44, 92, 128, 131, 164], "uniniti": [27, 44, 110, 128, 131, 165], "within": [27, 29, 44, 54, 128, 131], "remain": [27, 44, 107, 125, 128, 131], "kwarg": [27, 44, 100, 123, 124, 128, 131, 149], "ib": 27, "sqrt": [27, 128], "scalar": [27, 44, 90, 100, 101, 106, 116, 128, 129, 131, 133, 150], "1j": [27, 44], "5620499351813308": 27, "linspac": [27, 29], "num": 27, "101": 27, "plane": [27, 131], "xx": 27, "extent": 27, "grai": 27, "keepdim": [28, 30, 31, 101, 102, 106, 116, 133], "AND": 28, "count": [28, 116, 133], "place": [28, 43, 101, 102, 106, 116, 125, 130, 132, 133], "preserv": [28, 43, 117], "correctli": [28, 30, 31, 101, 102, 106, 116, 133, 164], "against": [28, 30, 31, 101, 102, 106, 116, 133, 171], "sub": [28, 43, 54, 101, 102, 106, 116, 132, 133, 166, 171, 173], "rais": [28, 90, 100, 101, 102, 106, 116, 117, 125, 129, 133, 171], "Not": 28, "nan": [28, 101, 106, 116, 128, 130, 131, 133], "infin": 28, "zero": [28, 49, 51, 63, 64, 66, 69, 78, 82, 83, 92, 102, 107, 110, 113, 114, 115, 125, 133, 139, 150, 166, 172, 173], "o": [28, 46, 130], "id": [28, 173], "28293632": 28, "vari": [28, 29, 57, 59, 61, 102, 112, 116, 130, 133], "step": [29, 69, 82, 133], "evenli": 29, "interv": [29, 131], "half": 29, "exclud": 29, "roughli": 29, "real": [29, 117, 128, 130, 131, 173], "end": [29, 34, 35, 36, 37, 46, 51, 83, 130, 168, 172], "round": [29, 133, 173], "off": 29, "adjac": 29, "creation": [29, 92, 110, 165, 168], "__array_function__": [29, 92, 110, 165], "protocol": [29, 92, 110, 165], "overflow": [29, 116, 133], "rule": [29, 100, 129, 133], "greater": [29, 117], "numer": [29, 133, 168, 173], "stabl": [29, 130], "stabil": 29, "due": [29, 47, 49, 64, 66, 67, 73, 74, 78, 173], "larger": 29, "lead": [29, 54, 133], "unexpect": 29, "arbitrari": [29, 90, 100], "int64": 29, "incorrect": 29, "power": [29, 52, 65, 70, 79, 81, 85, 86, 173], "modulo": 29, "10000": 29, "x1": [29, 100, 129], "x2": [29, 100], "7776": 29, "8801": 29, "6176": 29, "625": 29, "6576": 29, "4001": 29, "7185": 29, "5969": 29, "4816": 29, "3361": 29, "care": [29, 171], "endpoint": 29, "ogrid": [29, 164], "mgrid": 29, "grid": 29, "insert": [30, 31, 125], "appropri": [30, 31, 171], "index_arrai": [30, 31], "remov": [30, 31, 49, 64, 66, 78, 100, 116, 133], "argmin": [30, 106], "unravel_index": [30, 31], "flat": [30, 31], "take_along_axi": [30, 31], "expand_dim": [30, 31], "occurr": [30, 31], "ind": [30, 31], "squeez": [30, 31], "minimum": [31, 49, 64, 66, 67, 73, 78, 101, 106], "amin": [31, 101, 106], "local_threadsaf": [32, 126, 134, 147], "hasn": [32, 134], "explicitli": [32, 99, 134], "session": [32, 134], "unfolded_tensor": [33, 39], "refold": [33, 37, 59, 170], "folded_tensor": 33, "skip_end": [34, 35, 36, 37], "partial": [34, 35, 36, 37, 46, 50, 80, 130, 133], "untouch": [34, 35, 36, 37], "vectoris": [35, 37, 38, 40, 61, 163], "ignor": [35, 36, 72, 101, 106, 145], "ravel_tensor": 36, "n_sampl": [36, 51, 69, 82, 83, 84, 104, 105, 123, 124, 135, 137], "n_1": 36, "n_2": 36, "n_i": [36, 84, 139], "i_n": [38, 40, 55, 141, 160, 172], "i_2": [38, 40, 172, 173], "vec": [40, 142], "ful": 40, "valid": [41, 53, 72, 111, 112, 167], "inspir": 41, "scikit": [41, 170, 171, 174], "eponym": 41, "a_min": 42, "a_max": 42, "a1": 43, "a2": 43, "join": [43, 62, 132], "destin": [43, 107, 132], "togeth": [43, 100, 164], "equiv": 43, "unsaf": 43, "control": [43, 54], "kind": [43, 90, 93, 125, 130], "ma": 43, "array_split": 43, "split": [43, 132, 173], "hsplit": 43, "horizont": 43, "vsplit": 43, "vertic": 43, "dsplit": 43, "3rd": 43, "stack": [43, 62, 100, 117], "assembl": [43, 132, 153, 157], "hstack": 43, "vstack": 43, "dstack": 43, "column_stack": 43, "maskedarrai": 43, "masked_arrai": 43, "fill_valu": [43, 171], "999999": 43, "conjug": [44, 90, 100, 141, 142], "imaginari": [44, 130], "alia": [44, 117], "2j": [44, 90, 100, 128], "ey": [44, 99, 127], "input_tensor": [46, 71, 87], "0001": [46, 48, 50, 51, 53, 72, 76, 80, 83, 167], "ttcross": 46, "whole": [46, 145], "fiber": 46, "skeleton": 46, "sweep": 46, "submatrix": 46, "advantag": [46, 150, 171, 173], "tensor_shap": [46, 60], "tensor_ord": 46, "feasibl": 46, "disadvantag": 46, "accur": [46, 102], "underestim": 46, "contrast": [46, 133], "theoret": 46, "guarante": [46, 125, 173], "kth": [46, 71, 87], "outer": [46, 59, 67, 73, 99, 135, 173], "loop": [46, 67, 73], "pseudo": 46, "qr": 46, "maxvol": 46, "acknowledg": 46, "bodi": 46, "modifi": [46, 47, 49, 54, 64, 66, 67, 73, 74, 78, 125, 152], "tensortoolbox": 46, "daniel": 46, "bigoni": 46, "ivan": [46, 71, 87], "oseledet": [46, 71, 87], "eugen": 46, "tyrtyshnikov": 46, "multidimension": [46, 164], "linearalgebra": 46, "432": 46, "70": [46, 99, 164], "88": 46, "2010": 46, "sergei": 46, "dolgov": 46, "robert": 46, "scheichl": 46, "hybrid": 46, "parametricpd": 46, "arxiv": 46, "preprint": 46, "1707": 46, "04562": 46, "2017": 46, "74": 46, "75": [46, 49, 64, 66, 78], "124": 46, "104": 46, "cvg_criterion": [47, 49, 64, 66, 67, 73, 74, 75, 78], "abs_rec_error": [47, 49, 64, 66, 67, 73, 74, 75, 78], "fixed_mod": [47, 49, 64, 66, 67, 73, 74, 75, 77, 78], "variat": [47, 50, 53, 69, 72, 74, 75, 77, 80, 82, 167], "amnon": [47, 74], "shashua": [47, 74], "tamir": [47, 74], "hazan": [47, 74], "statist": [47, 74], "vision": [47, 48, 74, 76], "proceed": [47, 74], "confer": [47, 48, 74, 76], "icml": [47, 74], "pp": [47, 48, 49, 53, 64, 66, 67, 72, 73, 74, 76, 77, 78, 139, 140, 167, 172, 173, 174], "792": [47, 74], "799": [47, 74], "2005": [47, 49, 64, 66, 74, 78], "yong": [48, 76], "deok": [48, 76], "kim": [48, 76], "seungjin": [48, 76], "choi": [48, 76], "recognit": [48, 76], "cvpr": [48, 76], "2007": [48, 76], "svd_mask_repeat": [49, 50, 64, 66, 78, 80], "everywher": [49, 50, 51, 53, 64, 66, 78, 80, 83, 167, 173], "fill": [49, 50, 53, 64, 66, 78, 80, 96, 110, 165, 166, 167], "rec_error": [49, 64, 66, 67, 73, 75, 78], "criterion": [49, 64, 66, 67, 73, 75, 78], "low_rank_compon": [49, 64, 66, 78], "sparse_compon": [49, 64, 66, 78], "denot": [49, 64, 66, 78, 172], "fraction": [49, 64, 66, 78], "kolda": [49, 53, 64, 66, 67, 69, 72, 73, 77, 78, 82, 139, 140, 167, 172, 173], "w": [49, 53, 64, 66, 67, 72, 73, 77, 78, 139, 140, 167, 172, 173, 174], "bader": [49, 53, 64, 66, 67, 72, 73, 77, 78, 139, 140, 167, 172, 173], "siam": [49, 53, 64, 66, 67, 71, 72, 73, 77, 78, 87, 139, 140, 167, 172, 173], "review": [49, 53, 64, 66, 67, 72, 73, 77, 78, 139, 140, 167, 172, 173], "vol": [49, 53, 64, 66, 67, 72, 73, 77, 78, 139, 140, 167, 172, 173], "51": [49, 53, 64, 66, 67, 72, 73, 77, 78, 139, 140, 167, 172, 173], "455": [49, 53, 64, 66, 67, 72, 73, 77, 78, 139, 140, 167, 172, 173], "2009": [49, 53, 64, 66, 67, 72, 73, 77, 78, 139, 140, 167, 172, 173], "tomasi": [49, 64, 66, 78], "giorgio": [49, 64, 66, 78], "rasmu": [49, 64, 66, 78], "intellig": [49, 64, 66, 78], "laboratori": [49, 64, 66, 78], "163": [49, 64, 66, 78], "180": [49, 64, 66, 78], "food": [49, 64, 66, 78], "phd": [49, 64, 66, 78], "amsterdam": [49, 64, 66, 78], "1998": [49, 64, 66, 78], "hoi": [50, 53, 72, 80, 167], "exclus": [50, 80], "tuckertensor": [50, 80, 160, 161, 162, 163], "reg_": [51, 83], "reg_j": [51, 83], "mu_init": [51, 83], "mu_max": [51, 83], "10000000000": [51, 83], "learning_r": [51, 83], "pca": [51, 83], "alm": [51, 83], "n1": [51, 83, 123, 124], "regularis": [51, 83, 105, 123, 124], "10e9": [51, 83], "percentag": [51, 83], "tild": [51, 83, 172, 174], "equat": [51, 83, 117, 129], "align": [51, 83], "reg": [51, 83], "_j": [51, 83], "_e": [51, 83], "_1": [51, 83, 103], "cdot": [51, 83, 139, 140, 142, 150, 172, 173, 174], "n_repeat": [52, 65, 70, 79, 81, 85, 86], "n_iter": [52, 65, 70, 79, 81, 85, 86], "symmetr": [52, 57, 70, 85, 86], "tri": [52, 65, 70, 79, 81, 85, 86], "eigenvalu": [52, 57, 65, 70, 79, 81, 85, 86], "eigenvector": [52, 65, 70, 79, 81, 85, 86], "fixed_factor": [53, 72, 167], "keep": [53, 72, 75, 130, 156, 166, 167, 168], "memori": [54, 62, 92, 110, 125, 133, 165, 166, 171], "layout": [54, 125, 166], "fortran": [54, 92, 110, 117, 125, 165, 166], "contigu": [54, 90, 125, 166], "close": [54, 166], "forc": 54, "arr": 54, "interpret": 54, "writeabl": 54, "flag": 54, "shallow": 54, "mainli": 54, "surpris": 54, "mutabl": 54, "matrix_or_vector": [55, 141, 160], "keep_dim": [55, 160], "2d": [55, 118, 122, 137, 139, 141, 160, 161, 162], "i_k": [55, 139, 140, 141, 160, 172], "i_": [55, 141, 160, 172], "kruskal_multi_mode_dot": 55, "chain": [55, 90, 141, 160], "mode_dot": [55, 142, 160], "khatria": 56, "turn": [57, 59, 60, 61], "u_1": [57, 59, 60, 61, 139, 140], "u_n": [57, 59, 60, 61, 139, 140], "v_1": 57, "v_n": 57, "v_k": 57, "euclidean": 57, "u_k": [57, 60, 139, 140], "absorb": 57, "special": 57, "s_i": [57, 59, 61], "normalisation_weight": 57, "normalised_factor": 57, "ref_cp_tensor": 58, "tensors_to_permut": 58, "serv": 58, "permuted_tensor": 58, "lenght": 58, "factor_matric": [59, 60], "ie": 60, "s_u_i": 60, "exploit": 60, "khatri_rao": [60, 62], "ravel": [61, 125, 139], "mttkrp": 62, "kr_factor": 62, "skip_matrix": [62, 84, 139, 140], "mttkrp2": 62, "mttkrp_part": 62, "multi_mode_dot": [62, 141], "append": [62, 100], "consum": 62, "tensor_idx": 62, "chr": 62, "op": 62, "tl_einsum": 62, "n_channel": 63, "weight_valu": 63, "sparsity_coeffici": [66, 75, 77], "exact": [66, 75, 77, 90, 129, 133], "n_iter_max_inn": [67, 73], "tol_out": [67, 73], "tol_inn": [67, 73], "factor_aux": [67, 73], "inner": [67, 73, 90, 100], "dure": [67, 73, 168], "seper": [67, 73], "divid": [67, 73, 102], "distrbut": [67, 73], "self": [68, 123, 124], "max_stagn": [69, 82], "randomis": [69, 82], "casei": [69, 82], "battaglino": [69, 82], "grei": [69, 82], "ballard": [69, 82], "tamara": [69, 82], "recurs": [71, 87], "v": [71, 75, 77, 87, 89, 103, 168, 171], "scientif": [71, 87], "2295": [71, 87], "2317": [71, 87], "2011": [71, 87], "hal": [75, 77], "r2e3307d426a": 75, "success": [75, 77], "core_sparsity_coeffici": 77, "fista": 77, "nnl": 77, "tensor_i": 77, "core_i": 77, "prod_": [77, 139, 140, 172], "neq": [77, 172], "delta": 77, "tm": 77, "tu": 77, "utu": 77, "utm": 77, "corecross": 77, "tensorcross": 77, "corecross_j": 77, "core_j": 77, "tensorcross_j": 77, "eigenv": [81, 86], "best_factor": [81, 86], "deflat": [81, 86], "indices_list": 84, "return_sampled_row": 84, "subsampl": 84, "taken": [84, 102], "random_sampl": 84, "returned_sampled_row": 84, "sampled_khatri_rao": 84, "matricis": 84, "indices_kr": 84, "tensorized_shap": 88, "rank_2": 88, "boundari": [88, 120, 121, 156], "dictat": 88, "tt_matrix": [88, 170], "view": [89, 107, 125, 152, 172], "question": 89, "diagflat": 89, "trace": 89, "triu": 89, "triangl": 89, "tril": 89, "matmul": [90, 117], "featur": [90, 169, 173], "met": 90, "valueerror": [90, 100], "vdot": [90, 100], "einstein": [90, 100], "summat": [90, 100, 133], "convent": [90, 100, 131], "multi_dot": 90, "neither": [90, 100, 168], "3j": [90, 100], "0j": [90, 100, 128], "499128": 90, "ident": [92, 129, 130], "almost": [92, 130, 173], "intput": 96, "composit": [99, 133], "prepend": [99, 100], "smallest": 99, "r0": 99, "r1": 99, "rn": 99, "s0": 99, "s1": 99, "sn": 99, "k0": 99, "k1": [99, 135, 143], "kn": 99, "i0": 99, "i1": [99, 173], "iN": 99, "j0": 99, "j1": [99, 135, 143], "jn": [99, 135, 143], "kt": 99, "st": 99, "jt": 99, "visual": 99, "600": 99, "700": 99, "extend": [99, 130, 150], "treat": 100, "resid": 100, "accordingli": 100, "semant": 100, "465": 100, "mix": 100, "usual": [100, 171], "traceback": [100, 125], "recent": [100, 125], "operand": 100, "buffer": [101, 106], "empti": [101, 106, 110, 116, 133, 165, 166], "propag": [101, 106], "nanmax": [101, 106], "fmax": [101, 106], "nanmin": [101, 106], "fmin": [101, 106], "item": [101, 106, 130], "matlab": [101, 106], "maxima": 101, "isnan": [101, 106], "arithmet": [102, 116, 133], "intermedi": [102, 171], "std": 102, "var": 102, "nanmean": 102, "nanstd": 102, "nanvar": 102, "inaccur": 102, "accumul": [102, 116, 133, 139], "allevi": 102, "float16": 102, "extra": 102, "512": 102, "54999924": 102, "55000000074505806": 102, "matrix1": [103, 170], "matrix2": [103, 170], "absolute_valu": 103, "mathbf": [103, 172], "_2": 103, "y_true": [104, 105], "y_pred": [104, 105], "ground": [104, 105], "truth": [104, 105], "target": [104, 105], "mean_squared_error": 105, "isn": 106, "move": 107, "These": [107, 170], "uniqu": 107, "swapax": 107, "interchang": 107, "int8": [110, 116, 133, 165], "ones_lik": [110, 166], "slice_idx": 111, "describ": [111, 112, 113, 114, 115], "pad": [113, 114, 115, 156], "platform": [116, 133], "unsign": [116, 133], "product_along_axi": 116, "modular": [116, 133], "bit": 116, "536870910": 116, "neutral": [116, 133], "But": 116, "Or": [116, 150], "uint": 116, "q": 117, "orthonorm": 117, "triangular": 117, "raw": 117, "tau": 117, "backward": [117, 130], "earlier": [117, 170], "omit": [117, 164], "econom": 117, "deprec": 117, "letter": 117, "spell": 117, "unitari": 117, "cdoubl": 117, "household": 117, "reflector": 117, "linalgerror": [117, 129], "rq": 117, "lapack": [117, 129], "routin": [117, 129], "dgeqrf": 117, "zgeqrf": 117, "dorgqr": 117, "zungqr": 117, "en": 117, "wikipedia": 117, "qr_factor": 117, "too": [117, 133, 150, 164, 171], "addit": [117, 171], "expos": 117, "lapack_lit": 117, "await": 117, "randn": [117, 132], "allclos": [117, 129], "r2": 117, "illustr": 117, "y0": 117, "mx": 117, "graph": 117, "ll": 117, "gram": 117, "schmidt": 117, "inv": 117, "lstsq": [117, 129], "normalise_factor": [118, 119], "dict": [118, 120, 121, 168], "mp": [120, 157], "verifi": [120, 121], "tt_tensor": [120, 121, 170], "3d": [120, 121, 154, 155, 157, 158, 159], "tucker_tensor": [122, 170], "associ": [123, 124, 168], "get_param": [123, 124], "set_param": [123, 124], "newshap": 125, "read": [125, 172], "fastest": 125, "slowest": 125, "account": 125, "reshaped_arrai": 125, "attribut": [125, 166], "attributeerror": 125, "incompat": 125, "modif": 125, "fetch": 125, "sai": 125, "think": 125, "unspecifi": [125, 130], "i4": [127, 130, 165], "definit": 128, "ordin": 129, "singular": [129, 146, 171, 173], "_gesv": 129, "linearli": 129, "independ": 129, "strang": 129, "2nd": 129, "ed": 129, "orlando": 129, "fl": 129, "academ": 129, "press": 129, "inc": 129, "1980": 129, "pg": 129, "x0": 129, "quicksort": 130, "mergesort": 130, "heapsort": 130, "timsort": 130, "radix": 130, "under": [130, 168], "field": 130, "string": 130, "up": [130, 171], "ti": 130, "sorted_arrai": 130, "argsort": [130, 152], "indirect": 130, "lexsort": 130, "searchsort": 130, "partit": 130, "character": 130, "worst": 130, "four": 130, "log": 130, "ye": 130, "datatyp": 130, "finer": 130, "temporari": 130, "lexicograph": 130, "led": 130, "undefin": 130, "rj": 130, "nanj": 130, "placement": 130, "introsort": 130, "progress": 130, "map": [130, 172], "abil": 130, "hardwir": 130, "nearli": [130, 171], "cpython": 130, "listsort": 130, "txt": 130, "nat": 130, "s10": 130, "height": 130, "ag": 130, "arthur": 130, "lancelot": 130, "galahad": 130, "8999999999999999": 130, "f8": 130, "emath": 131, "branch": 131, "cut": 131, "continu": 131, "curv": 131, "4j": 131, "concaten": 132, "nest": 132, "sum_along_axi": 133, "cumsum": 133, "cumul": 133, "trapz": 133, "integr": [133, 170], "trapezoid": 133, "individu": 133, "pairwis": 133, "mani": [133, 171], "technic": 133, "fsum": 133, "slower": [133, 139, 150, 163, 171], "advis": 133, "small": [133, 173], "128": 133, "tensor1": [135, 138, 143, 148], "tensor2": [135, 138, 143, 148], "km": [135, 143], "momemt": 137, "n_featur": 137, "d1": 137, "dn": 137, "moment": 137, "n_mode": 138, "generalis": [138, 173], "tradit": [138, 150], "inner_product": 138, "revers": [139, 140, 152], "seen": [139, 173], "khatri_rao_product": 139, "prod": [139, 140, 171], "mathemat": [139, 140, 141, 163], "bigodot": 139, "intuit": 139, "kr_product": 139, "cum_prod": 139, "ij": 139, "kronecker_product": 140, "j_k": 140, "otim": [140, 150], "times_": 141, "matrix_or_vec_list": 142, "times_0": 142, "times_1": 142, "times_n": 142, "svd_threshold": [144, 145], "procrust": 146, "batched_mod": 148, "batch": 148, "contract": [148, 150], "a_ax": 150, "b_ax": 150, "integer_lik": 150, "nth": 150, "0th": 150, "1th": 150, "forth": 150, "4400": 150, "4730": 150, "4532": 150, "4874": 150, "4664": 150, "5018": 150, "4796": 150, "5162": 150, "4928": 150, "5306": 150, "overload": 150, "abbcccdddd": 150, "aaaaabbbbbbcccccccdddddddd": 150, "acc": 150, "bdd": 150, "aaacccc": 150, "bbbdddd": 150, "aaaaacccccc": 150, "bbbbbdddddd": 150, "aaaaaaacccccccc": 150, "bbbbbbbdddddddd": 150, "incl": 150, "abbbbb": 150, "cddddd": 150, "aabbbbbb": 150, "ccdddddd": 150, "aaabbbbbbb": 150, "cccddddddd": 150, "aaaabbbbbbbb": 150, "ccccdddddddd": 150, "abb": 150, "cdd": 150, "aaabbbb": 150, "cccdddd": 150, "aaaaabbbbbb": 150, "cccccdddddd": 150, "aaaaaaabbbbbbbb": 150, "cccccccdddddddd": 150, "abbbcccccddddddd": 150, "aabbbbccccccdddddddd": 150, "acccbbdddd": 150, "aaaaacccccccbbbbbbdddddddd": 150, "whenev": [152, 171], "moveaxi": 152, "invert": 152, "transposit": 152, "unchang": [152, 166], "4d": 153, "rank_k": 153, "left_dim_k": 153, "right_dim_k": 153, "rank_": 153, "output_tensor": [153, 157], "reassembl": [154, 158], "factor_list": 156, "n_pad": 156, "pad_boundari": 156, "ring": 156, "bond": 156, "padded_factor_list": 156, "tucker_multi_mode_dot": 160, "skip_factor": [161, 162, 163], "transpose_factor": [161, 162, 163], "lengh": 161, "asarrai": 164, "yield": 164, "xv": 164, "yv": 164, "80": 164, "90": 164, "zeros_lik": 165, "overrid": 166, "newli": 166, "impli": 166, "full_lik": 166, "ubiquit": 168, "exactli": [168, 173], "hood": 168, "decid": 168, "introduct": 168, "abl": 168, "default_backend": 168, "haven": 168, "complexifi": 168, "nor": 168, "tradition": [168, 172], "ctx": 168, "floattensor": 168, "cuda": 168, "characteris": 168, "trivial_fun": 168, "trivial": 168, "isol": 168, "n_eigenvec": 168, "go": [168, 173], "random_tensor": [168, 170], "reat": 168, "decomp": 168, "rec": 168, "to_tensor": 168, "everyth": 168, "post": 168, "posthoc": 168, "noth": [168, 172, 173], "studi": 169, "overview": 170, "familiar": 170, "submodul": 170, "contrib": [170, 171, 173], "mention": 170, "anyth": 170, "adapt": [170, 171], "subtlti": 170, "regardless": 170, "10x10x10": 170, "explicit": [170, 171], "zeroth": 170, "random_tuck": 170, "3x4x5": 170, "tucker_to_vec": 170, "aptli": 170, "hand": 170, "crafter": 170, "craft": 170, "tg": 170, "set_tenalg_backend": 170, "liner": 170, "optimis": 170, "applyt": 170, "unseen": 170, "assess": 170, "fulli": [170, 173], "pydata": [170, 171], "nativ": 171, "dens": 171, "represent": [171, 173], "lack": 171, "opinion": 171, "decis": 171, "partial_tuck": 171, "robust_pca": 171, "mirror": 171, "coo": 171, "coord": 171, "rewritten": 171, "properli": 171, "densifi": 171, "watch": 171, "environ": 171, "sparse_auto_densifi": 171, "runtimeerror": 171, "awar": 171, "protect": 171, "caveat": 171, "proport": 171, "stl": 171, "1001": 171, "1002": 171, "starting_weight": 171, "nnz": 171, "starting_factor": 171, "recompos": 171, "worri": 171, "5044": 171, "densli": 171, "nbyte": 171, "1e9": 171, "gb": 171, "000161408": 171, "024016": 171, "dense_cp": 171, "3858051300048828": 171, "sparse_parafac": 171, "sparse_cp": 171, "053689002990723": 171, "spsolv": 171, "umfpack": 171, "x_1": 172, "x_2": 172, "matriz": 172, "i_0": 172, "classic": [172, 173], "i_m": 172, "substack": 172, "original_shap": 172, "greatest": 173, "compactli": 173, "tutori": 173, "Such": 173, "canon": 173, "polyad": 173, "super": 173, "smaller": 173, "000e": 173, "340e": 173, "617e": 173, "914e": 173, "475e": 173, "746e": 173, "physic": 173, "edg": 173, "connect": 173, "ldot": 173, "i_d": 173, "approx": 173, "alpha_1": 173, "alpha_": 173, "g_1": 173, "g_2": 173, "alpha_2": 173, "g_3": 173, "i_3": 173, "alpha_3": 173, "g_d": 173, "address": 173, "mps_decomposit": 173, "mps_decomposition_cross": 173, "matrix_product_st": 173, "tt_to_tensor": 173, "decim": 173, "seri": 174, "y_i": 174, "langl": 174, "rangl": 174, "r_1": 174, "r_n": 174, "krusal": 174, "cpregress": 174, "guo": 174, "kotsia": 174, "patra": 174, "827": 174}, "objects": {"": [[25, 0, 0, "-", "tensorly"]], "tensorly": [[27, 1, 1, "", "abs"], [28, 1, 1, "", "all"], [29, 1, 1, "", "arange"], [30, 1, 1, "", "argmax"], [31, 1, 1, "", "argmin"], [32, 1, 1, "", "backend_context"], [25, 0, 0, "-", "base"], [41, 1, 1, "", "check_random_state"], [42, 1, 1, "", "clip"], [43, 1, 1, "", "concatenate"], [44, 1, 1, "", "conj"], [45, 1, 1, "", "context"], [25, 0, 0, "-", "contrib"], [54, 1, 1, "", "copy"], [25, 0, 0, "-", "cp_tensor"], [25, 0, 0, "-", "datasets"], [25, 0, 0, "-", "decomposition"], [89, 1, 1, "", "diag"], [90, 1, 1, "", "dot"], [91, 1, 1, "", "eps"], [92, 1, 1, "", "eye"], [93, 1, 1, "", "finfo"], [94, 1, 1, "", "get_backend"], [95, 1, 1, "", "index"], [96, 1, 1, "", "index_update"], [97, 1, 1, "", "is_tensor"], [98, 1, 1, "", "kr"], [99, 1, 1, "", "kron"], [100, 1, 1, "", "matmul"], [101, 1, 1, "", "max"], [102, 1, 1, "", "mean"], [25, 0, 0, "-", "metrics"], [106, 1, 1, "", "min"], [107, 1, 1, "", "moveaxis"], [108, 1, 1, "", "ndim"], [109, 1, 1, "", "norm"], [110, 1, 1, "", "ones"], [25, 0, 0, "-", "parafac2_tensor"], [116, 1, 1, "", "prod"], [117, 1, 1, "", "qr"], [25, 0, 0, "-", "random"], [25, 0, 0, "-", "regression"], [125, 1, 1, "", "reshape"], [126, 1, 1, "", "set_backend"], [127, 1, 1, "", "shape"], [128, 1, 1, "", "sign"], [129, 1, 1, "", "solve"], [130, 1, 1, "", "sort"], [131, 1, 1, "", "sqrt"], [132, 1, 1, "", "stack"], [133, 1, 1, "", "sum"], [25, 0, 0, "-", "tenalg"], [149, 1, 1, "", "tensor"], [150, 1, 1, "", "tensordot"], [151, 1, 1, "", "to_numpy"], [152, 1, 1, "", "transpose"], [25, 0, 0, "-", "tt_matrix"], [25, 0, 0, "-", "tt_tensor"], [25, 0, 0, "-", "tucker_tensor"], [164, 1, 1, "", "where"], [165, 1, 1, "", "zeros"], [166, 1, 1, "", "zeros_like"]], "tensorly.base": [[33, 1, 1, "", "fold"], [34, 1, 1, "", "partial_fold"], [35, 1, 1, "", "partial_tensor_to_vec"], [36, 1, 1, "", "partial_unfold"], [37, 1, 1, "", "partial_vec_to_tensor"], [38, 1, 1, "", "tensor_to_vec"], [39, 1, 1, "", "unfold"], [40, 1, 1, "", "vec_to_tensor"]], "tensorly.contrib.decomposition": [[46, 1, 1, "", "tensor_train_cross"]], "tensorly.contrib": [[25, 0, 0, "-", "sparse"]], "tensorly.contrib.sparse.decomposition": [[47, 1, 1, "", "non_negative_parafac"], [48, 1, 1, "", "non_negative_tucker"], [49, 1, 1, "", "parafac"], [50, 1, 1, "", "partial_tucker"], [51, 1, 1, "", "robust_pca"], [52, 1, 1, "", "symmetric_parafac_power_iteration"], [53, 1, 1, "", "tucker"]], "tensorly.cp_tensor": [[55, 1, 1, "", "cp_mode_dot"], [56, 1, 1, "", "cp_norm"], [57, 1, 1, "", "cp_normalize"], [58, 1, 1, "", "cp_permute_factors"], [59, 1, 1, "", "cp_to_tensor"], [60, 1, 1, "", "cp_to_unfolded"], [61, 1, 1, "", "cp_to_vec"], [62, 1, 1, "", "unfolding_dot_khatri_rao"]], "tensorly.datasets.synthetic": [[63, 1, 1, "", "gen_image"]], "tensorly.decomposition": [[64, 2, 1, "", "CP"], [65, 2, 1, "", "CPPower"], [66, 2, 1, "", "CP_NN_HALS"], [67, 2, 1, "", "ConstrainedCP"], [68, 2, 1, "", "Parafac2"], [69, 2, 1, "", "RandomizedCP"], [70, 2, 1, "", "SymmetricCP"], [71, 2, 1, "", "TensorTrain"], [72, 2, 1, "", "Tucker"], [73, 1, 1, "", "constrained_parafac"], [74, 1, 1, "", "non_negative_parafac"], [75, 1, 1, "", "non_negative_parafac_hals"], [76, 1, 1, "", "non_negative_tucker"], [77, 1, 1, "", "non_negative_tucker_hals"], [78, 1, 1, "", "parafac"], [26, 1, 1, "", "parafac2"], [79, 1, 1, "", "parafac_power_iteration"], [80, 1, 1, "", "partial_tucker"], [81, 1, 1, "", "power_iteration"], [82, 1, 1, "", "randomised_parafac"], [83, 1, 1, "", "robust_pca"], [84, 1, 1, "", "sample_khatri_rao"], [85, 1, 1, "", "symmetric_parafac_power_iteration"], [86, 1, 1, "", "symmetric_power_iteration"], [87, 1, 1, "", "tensor_train"], [88, 1, 1, "", "tensor_train_matrix"], [167, 1, 1, "", "tucker"]], "tensorly.decomposition.CP": [[64, 3, 1, "", "fit_transform"]], "tensorly.decomposition.CPPower": [[65, 3, 1, "", "fit_transform"]], "tensorly.decomposition.CP_NN_HALS": [[66, 3, 1, "", "fit_transform"]], "tensorly.decomposition.ConstrainedCP": [[67, 3, 1, "", "fit_transform"]], "tensorly.decomposition.Parafac2": [[68, 3, 1, "", "fit_transform"]], "tensorly.metrics.factors": [[103, 1, 1, "", "congruence_coefficient"]], "tensorly.metrics.regression": [[104, 1, 1, "", "MSE"], [105, 1, 1, "", "RMSE"]], "tensorly.parafac2_tensor": [[111, 1, 1, "", "parafac2_to_slice"], [112, 1, 1, "", "parafac2_to_slices"], [113, 1, 1, "", "parafac2_to_tensor"], [114, 1, 1, "", "parafac2_to_unfolded"], [115, 1, 1, "", "parafac2_to_vec"]], "tensorly.random": [[118, 1, 1, "", "random_cp"], [119, 1, 1, "", "random_parafac2"], [120, 1, 1, "", "random_tt"], [121, 1, 1, "", "random_tt_matrix"], [122, 1, 1, "", "random_tucker"]], "tensorly.regression.cp_regression": [[123, 2, 1, "", "CPRegressor"]], "tensorly.regression.cp_regression.CPRegressor": [[123, 3, 1, "", "fit"], [123, 3, 1, "", "get_params"], [123, 3, 1, "", "predict"], [123, 3, 1, "", "set_params"]], "tensorly.regression.tucker_regression": [[124, 2, 1, "", "TuckerRegressor"]], "tensorly.regression.tucker_regression.TuckerRegressor": [[124, 3, 1, "", "fit"], [124, 3, 1, "", "get_params"], [124, 3, 1, "", "predict"], [124, 3, 1, "", "set_params"]], "tensorly.tenalg": [[134, 1, 1, "", "backend_context"], [135, 1, 1, "", "batched_outer"], [136, 1, 1, "", "get_backend"], [137, 1, 1, "", "higher_order_moment"], [138, 1, 1, "", "inner"], [139, 1, 1, "", "khatri_rao"], [140, 1, 1, "", "kronecker"], [141, 1, 1, "", "mode_dot"], [142, 1, 1, "", "multi_mode_dot"], [143, 1, 1, "", "outer"], [147, 1, 1, "", "set_backend"], [148, 1, 1, "", "tensordot"]], "tensorly.tenalg.proximal": [[144, 1, 1, "", "procrustes"], [145, 1, 1, "", "soft_thresholding"], [146, 1, 1, "", "svd_thresholding"]], "tensorly.tt_matrix": [[153, 1, 1, "", "tt_matrix_to_tensor"], [154, 1, 1, "", "tt_matrix_to_unfolded"], [155, 1, 1, "", "tt_matrix_to_vec"]], "tensorly.tt_tensor": [[156, 1, 1, "", "pad_tt_rank"], [157, 1, 1, "", "tt_to_tensor"], [158, 1, 1, "", "tt_to_unfolded"], [159, 1, 1, "", "tt_to_vec"]], "tensorly.tucker_tensor": [[160, 1, 1, "", "tucker_mode_dot"], [161, 1, 1, "", "tucker_to_tensor"], [162, 1, 1, "", "tucker_to_unfolded"], [163, 1, 1, "", "tucker_to_vec"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"about": 0, "u": 0, "origin": 0, "core": [0, 25], "develop": [0, 21], "support": 0, "non": [1, 7, 8], "neg": [1, 7, 8], "parafac": [1, 5, 7, 49, 78, 173], "decomposit": [1, 2, 3, 6, 7, 8, 12, 25, 26, 46, 47, 48, 49, 50, 51, 52, 53, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 167, 170, 173], "il": 1, "2": 1, "respons": 1, "data": 1, "covid": 2, "19": 2, "serologi": 2, "dataset": [2, 25, 63, 170], "analysi": 2, "cp": [2, 6, 7, 10, 14, 25, 64, 173], "introduct": [2, 6, 7, 8, 10], "appli": 2, "thi": 2, "tensorli": [2, 6, 7, 8, 12, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170], "inspect": [2, 9], "biolog": 2, "insight": 2, "from": 2, "compon": [2, 9], "refer": [2, 6, 7, 8, 9, 20, 25, 172, 173, 174], "imag": 3, "compress": 3, "via": 3, "tensor": [3, 7, 8, 9, 10, 12, 13, 14, 15, 19, 25, 149, 168, 170, 172, 173, 174], "comput": [4, 9, 11, 16, 17], "time": [4, 11, 16, 17], "us": [5, 6], "line": 5, "search": 5, "constrain": 6, "0": [6, 7, 8], "7": 6, "one": 6, "constraint": 6, "all": [6, 28], "mode": 6, "some": 6, "differ": 6, "scalar": 6, "input": 6, "each": 6, "6": [7, 8], "creat": [7, 8, 9, 10, 172], "synthet": [7, 8, 9, 10, 63], "hal": [7, 8], "exact": 7, "comparison": [7, 8], "tucker": [8, 15, 25, 53, 72, 167, 173], "fista": 8, "activ": 8, "set": [8, 25, 174], "demonstr": 9, "parafac2": [9, 25, 26, 68], "fit": 9, "perform": [9, 25], "metric": [9, 25, 103, 104, 105, 170], "visual": 9, "converg": 9, "rate": 9, "permut": 10, "factor": [10, 103], "target": 10, "cptensor": 10, "galleri": 12, "exampl": [12, 20, 171], "content": 12, "gener": 12, "practic": [12, 19], "applic": 12, "method": 12, "regress": [12, 14, 15, 25, 104, 105, 123, 124, 170, 174], "basic": [13, 168, 172], "oper": [13, 25], "backend": [18, 19, 25, 168, 170, 171], "system": [18, 168], "how": [18, 19, 168], "work": [18, 19], "The": 18, "class": [18, 19, 25], "load": 18, "function": [18, 20, 25, 168], "": [18, 168], "dispatch": 18, "contribut": 19, "guidelin": 19, "compat": 19, "In": 19, "context": [19, 25, 45, 168], "index": [19, 25, 95], "assign": [19, 25], "numpi": [19, 25], "style": [19, 25], "test": [19, 24], "interfac": [19, 25], "wrapper": 19, "write": 20, "document": [20, 24], "docstr": 20, "modul": 20, "titl": 20, "guid": [21, 169], "instal": 24, "pre": 24, "requisit": 24, "pip": 24, "recommend": 24, "conda": 24, "clone": 24, "github": 24, "repositori": 24, "run": 24, "compil": 24, "why": [24, 168, 171], "python": 24, "3": 24, "api": 25, "A": 25, "unifi": 25, "avail": 25, "arrai": 25, "creation": 25, "manipul": [25, 170], "algebra": [25, 170], "base": [25, 33, 34, 35, 36, 37, 38, 39, 40], "cp_tensor": [25, 55, 56, 57, 58, 59, 60, 61, 62], "form": [25, 173], "tucker_tensor": [25, 160, 161, 162, 163], "tt_tensor": [25, 156, 157, 158, 159], "train": [25, 173], "mp": 25, "tt_matrix": [25, 153, 154, 155], "matric": 25, "tt": 25, "parafac2_tensor": [25, 111, 112, 113, 114, 115], "tenalg": [25, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "measur": 25, "random": [25, 118, 119, 120, 121, 122, 170], "sampl": [25, 170], "contrib": [25, 46, 47, 48, 49, 50, 51, 52, 53], "experiment": [25, 170], "featur": [25, 170], "spars": [25, 47, 48, 49, 50, 51, 52, 53, 171], "ab": 27, "arang": 29, "argmax": 30, "argmin": 31, "backend_context": [32, 134], "fold": [33, 172], "partial_fold": 34, "partial_tensor_to_vec": 35, "partial_unfold": 36, "partial_vec_to_tensor": 37, "tensor_to_vec": 38, "unfold": [39, 172], "vec_to_tensor": 40, "check_random_st": 41, "clip": 42, "concaten": 43, "conj": 44, "tensor_train_cross": 46, "non_negative_parafac": [47, 74], "non_negative_tuck": [48, 76], "partial_tuck": [50, 80], "robust_pca": [51, 83], "symmetric_parafac_power_iter": [52, 85], "copi": 54, "cp_mode_dot": 55, "cp_norm": 56, "cp_normal": 57, "cp_permute_factor": 58, "cp_to_tensor": 59, "cp_to_unfold": 60, "cp_to_vec": 61, "unfolding_dot_khatri_rao": 62, "gen_imag": 63, "cppower": 65, "cp_nn_hal": 66, "constrainedcp": 67, "randomizedcp": 69, "symmetriccp": 70, "tensortrain": 71, "constrained_parafac": 73, "non_negative_parafac_h": 75, "non_negative_tucker_h": 77, "parafac_power_iter": 79, "power_iter": 81, "randomised_parafac": 82, "sample_khatri_rao": 84, "symmetric_power_iter": 86, "tensor_train": 87, "tensor_train_matrix": 88, "diag": 89, "dot": 90, "ep": 91, "ey": 92, "finfo": 93, "get_backend": [94, 136], "index_upd": 96, "is_tensor": 97, "kr": 98, "kron": 99, "matmul": 100, "max": 101, "mean": 102, "congruence_coeffici": 103, "mse": 104, "rmse": 105, "min": 106, "moveaxi": 107, "ndim": 108, "norm": 109, "ones": 110, "parafac2_to_slic": [111, 112], "parafac2_to_tensor": 113, "parafac2_to_unfold": 114, "parafac2_to_vec": 115, "prod": 116, "qr": 117, "random_cp": 118, "random_parafac2": 119, "random_tt": 120, "random_tt_matrix": 121, "random_tuck": 122, "cp_regress": 123, "cpregressor": 123, "tucker_regress": 124, "tuckerregressor": 124, "reshap": 125, "set_backend": [126, 147], "shape": 127, "sign": 128, "solv": 129, "sort": 130, "sqrt": 131, "stack": 132, "sum": 133, "batched_out": 135, "higher_order_mo": 137, "inner": 138, "khatri_rao": 139, "kroneck": 140, "mode_dot": 141, "multi_mode_dot": 142, "outer": 143, "proxim": [144, 145, 146], "procrust": 144, "soft_threshold": 145, "svd_threshold": 146, "tensordot": [148, 150], "to_numpi": 151, "transpos": 152, "tt_matrix_to_tensor": 153, "tt_matrix_to_unfold": 154, "tt_matrix_to_vec": 155, "pad_tt_rank": 156, "tt_to_tensor": 157, "tt_to_unfold": 158, "tt_to_vec": 159, "tucker_mode_dot": 160, "tucker_to_tensor": 161, "tucker_to_unfold": 162, "tucker_to_vec": 163, "where": 164, "zero": 165, "zeros_lik": 166, "do": 168, "i": 168, "chang": 168, "case": 168, "studi": 168, "pytorch": 168, "On": 168, "cpu": 168, "gpu": 168, "user": 169, "quick": 170, "start": 170, "organ": 170, "separ": 171, "algorithm": 171, "usag": 171, "miss": 171, "valu": 171, "candecomp": 173, "matrix": 173, "product": 173, "state": 173, "implement": 173}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})