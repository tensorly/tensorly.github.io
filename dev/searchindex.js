Search.setIndex({"docnames": ["about", "auto_examples/applications/plot_IL2", "auto_examples/applications/plot_covid", "auto_examples/applications/plot_image_compression", "auto_examples/applications/sg_execution_times", "auto_examples/decomposition/plot_cp_line_search", "auto_examples/decomposition/plot_guide_for_constrained_cp", "auto_examples/decomposition/plot_nn_cp_hals", "auto_examples/decomposition/plot_nn_tucker", "auto_examples/decomposition/plot_parafac2", "auto_examples/decomposition/sg_execution_times", "auto_examples/index", "auto_examples/plot_tensor", "auto_examples/regression/plot_cp_regression", "auto_examples/regression/plot_tucker_regression", "auto_examples/regression/sg_execution_times", "auto_examples/sg_execution_times", "development_guide/backend_system", "development_guide/contributing", "development_guide/documentation", "development_guide/index", "home", "index", "installation", "modules/api", "modules/generated/parafac2-function", "modules/generated/tensorly.abs", "modules/generated/tensorly.all", "modules/generated/tensorly.arange", "modules/generated/tensorly.argmax", "modules/generated/tensorly.argmin", "modules/generated/tensorly.backend_context", "modules/generated/tensorly.base.fold", "modules/generated/tensorly.base.partial_fold", "modules/generated/tensorly.base.partial_tensor_to_vec", "modules/generated/tensorly.base.partial_unfold", "modules/generated/tensorly.base.partial_vec_to_tensor", "modules/generated/tensorly.base.tensor_to_vec", "modules/generated/tensorly.base.unfold", "modules/generated/tensorly.base.vec_to_tensor", "modules/generated/tensorly.check_random_state", "modules/generated/tensorly.clip", "modules/generated/tensorly.concatenate", "modules/generated/tensorly.conj", "modules/generated/tensorly.context", "modules/generated/tensorly.contrib.decomposition.tensor_train_cross", "modules/generated/tensorly.contrib.sparse.decomposition.non_negative_parafac", "modules/generated/tensorly.contrib.sparse.decomposition.non_negative_tucker", "modules/generated/tensorly.contrib.sparse.decomposition.parafac", "modules/generated/tensorly.contrib.sparse.decomposition.partial_tucker", "modules/generated/tensorly.contrib.sparse.decomposition.robust_pca", "modules/generated/tensorly.contrib.sparse.decomposition.symmetric_parafac_power_iteration", "modules/generated/tensorly.contrib.sparse.decomposition.tucker", "modules/generated/tensorly.copy", "modules/generated/tensorly.cp_tensor.cp_mode_dot", "modules/generated/tensorly.cp_tensor.cp_norm", "modules/generated/tensorly.cp_tensor.cp_normalize", "modules/generated/tensorly.cp_tensor.cp_to_tensor", "modules/generated/tensorly.cp_tensor.cp_to_unfolded", "modules/generated/tensorly.cp_tensor.cp_to_vec", "modules/generated/tensorly.cp_tensor.unfolding_dot_khatri_rao", "modules/generated/tensorly.datasets.synthetic.gen_image", "modules/generated/tensorly.decomposition.CP", "modules/generated/tensorly.decomposition.CPPower", "modules/generated/tensorly.decomposition.CP_NN_HALS", "modules/generated/tensorly.decomposition.ConstrainedCP", "modules/generated/tensorly.decomposition.Parafac2", "modules/generated/tensorly.decomposition.RandomizedCP", "modules/generated/tensorly.decomposition.SymmetricCP", "modules/generated/tensorly.decomposition.TensorTrain", "modules/generated/tensorly.decomposition.Tucker", "modules/generated/tensorly.decomposition.constrained_parafac", "modules/generated/tensorly.decomposition.non_negative_parafac", "modules/generated/tensorly.decomposition.non_negative_parafac_hals", "modules/generated/tensorly.decomposition.non_negative_tucker", "modules/generated/tensorly.decomposition.non_negative_tucker_hals", "modules/generated/tensorly.decomposition.parafac", "modules/generated/tensorly.decomposition.parafac_power_iteration", "modules/generated/tensorly.decomposition.partial_tucker", "modules/generated/tensorly.decomposition.power_iteration", "modules/generated/tensorly.decomposition.randomised_parafac", "modules/generated/tensorly.decomposition.robust_pca", "modules/generated/tensorly.decomposition.sample_khatri_rao", "modules/generated/tensorly.decomposition.symmetric_parafac_power_iteration", "modules/generated/tensorly.decomposition.symmetric_power_iteration", "modules/generated/tensorly.decomposition.tensor_train", "modules/generated/tensorly.decomposition.tensor_train_matrix", "modules/generated/tensorly.diag", "modules/generated/tensorly.dot", "modules/generated/tensorly.eps", "modules/generated/tensorly.eye", "modules/generated/tensorly.finfo", "modules/generated/tensorly.get_backend", "modules/generated/tensorly.index", "modules/generated/tensorly.index_update", "modules/generated/tensorly.is_tensor", "modules/generated/tensorly.kr", "modules/generated/tensorly.kron", "modules/generated/tensorly.matmul", "modules/generated/tensorly.max", "modules/generated/tensorly.mean", "modules/generated/tensorly.metrics.factors.congruence_coefficient", "modules/generated/tensorly.metrics.regression.MSE", "modules/generated/tensorly.metrics.regression.RMSE", "modules/generated/tensorly.min", "modules/generated/tensorly.moveaxis", "modules/generated/tensorly.ndim", "modules/generated/tensorly.norm", "modules/generated/tensorly.ones", "modules/generated/tensorly.parafac2_tensor.parafac2_to_slice", "modules/generated/tensorly.parafac2_tensor.parafac2_to_slices", "modules/generated/tensorly.parafac2_tensor.parafac2_to_tensor", "modules/generated/tensorly.parafac2_tensor.parafac2_to_unfolded", "modules/generated/tensorly.parafac2_tensor.parafac2_to_vec", "modules/generated/tensorly.partial_svd", "modules/generated/tensorly.prod", "modules/generated/tensorly.qr", "modules/generated/tensorly.random.random_cp", "modules/generated/tensorly.random.random_parafac2", "modules/generated/tensorly.random.random_tt", "modules/generated/tensorly.random.random_tt_matrix", "modules/generated/tensorly.random.random_tucker", "modules/generated/tensorly.regression.cp_regression.CPRegressor", "modules/generated/tensorly.regression.tucker_regression.TuckerRegressor", "modules/generated/tensorly.reshape", "modules/generated/tensorly.set_backend", "modules/generated/tensorly.shape", "modules/generated/tensorly.sign", "modules/generated/tensorly.solve", "modules/generated/tensorly.sort", "modules/generated/tensorly.sqrt", "modules/generated/tensorly.stack", "modules/generated/tensorly.sum", "modules/generated/tensorly.tenalg.backend_context", "modules/generated/tensorly.tenalg.batched_outer", "modules/generated/tensorly.tenalg.get_backend", "modules/generated/tensorly.tenalg.higher_order_moment", "modules/generated/tensorly.tenalg.inner", "modules/generated/tensorly.tenalg.khatri_rao", "modules/generated/tensorly.tenalg.kronecker", "modules/generated/tensorly.tenalg.mode_dot", "modules/generated/tensorly.tenalg.multi_mode_dot", "modules/generated/tensorly.tenalg.outer", "modules/generated/tensorly.tenalg.proximal.procrustes", "modules/generated/tensorly.tenalg.proximal.soft_thresholding", "modules/generated/tensorly.tenalg.proximal.svd_thresholding", "modules/generated/tensorly.tenalg.set_backend", "modules/generated/tensorly.tenalg.tensordot", "modules/generated/tensorly.tensor", "modules/generated/tensorly.tensordot", "modules/generated/tensorly.to_numpy", "modules/generated/tensorly.transpose", "modules/generated/tensorly.tt_matrix.tt_matrix_to_tensor", "modules/generated/tensorly.tt_matrix.tt_matrix_to_unfolded", "modules/generated/tensorly.tt_matrix.tt_matrix_to_vec", "modules/generated/tensorly.tt_tensor.pad_tt_rank", "modules/generated/tensorly.tt_tensor.tt_to_tensor", "modules/generated/tensorly.tt_tensor.tt_to_unfolded", "modules/generated/tensorly.tt_tensor.tt_to_vec", "modules/generated/tensorly.tucker_tensor.tucker_mode_dot", "modules/generated/tensorly.tucker_tensor.tucker_to_tensor", "modules/generated/tensorly.tucker_tensor.tucker_to_unfolded", "modules/generated/tensorly.tucker_tensor.tucker_to_vec", "modules/generated/tensorly.where", "modules/generated/tensorly.zeros", "modules/generated/tensorly.zeros_like", "modules/generated/tucker-function", "user_guide/backend", "user_guide/index", "user_guide/quickstart", "user_guide/sparse_backend", "user_guide/tensor_basics", "user_guide/tensor_decomposition", "user_guide/tensor_regression"], "filenames": ["about.rst", "auto_examples/applications/plot_IL2.rst", "auto_examples/applications/plot_covid.rst", "auto_examples/applications/plot_image_compression.rst", "auto_examples/applications/sg_execution_times.rst", "auto_examples/decomposition/plot_cp_line_search.rst", "auto_examples/decomposition/plot_guide_for_constrained_cp.rst", "auto_examples/decomposition/plot_nn_cp_hals.rst", "auto_examples/decomposition/plot_nn_tucker.rst", "auto_examples/decomposition/plot_parafac2.rst", "auto_examples/decomposition/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/plot_tensor.rst", "auto_examples/regression/plot_cp_regression.rst", "auto_examples/regression/plot_tucker_regression.rst", "auto_examples/regression/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "development_guide/backend_system.rst", "development_guide/contributing.rst", "development_guide/documentation.rst", "development_guide/index.rst", "home.rst", "index.rst", "installation.rst", "modules/api.rst", "modules/generated/parafac2-function.rst", "modules/generated/tensorly.abs.rst", "modules/generated/tensorly.all.rst", "modules/generated/tensorly.arange.rst", "modules/generated/tensorly.argmax.rst", "modules/generated/tensorly.argmin.rst", "modules/generated/tensorly.backend_context.rst", "modules/generated/tensorly.base.fold.rst", "modules/generated/tensorly.base.partial_fold.rst", "modules/generated/tensorly.base.partial_tensor_to_vec.rst", "modules/generated/tensorly.base.partial_unfold.rst", "modules/generated/tensorly.base.partial_vec_to_tensor.rst", "modules/generated/tensorly.base.tensor_to_vec.rst", "modules/generated/tensorly.base.unfold.rst", "modules/generated/tensorly.base.vec_to_tensor.rst", "modules/generated/tensorly.check_random_state.rst", "modules/generated/tensorly.clip.rst", "modules/generated/tensorly.concatenate.rst", "modules/generated/tensorly.conj.rst", "modules/generated/tensorly.context.rst", "modules/generated/tensorly.contrib.decomposition.tensor_train_cross.rst", "modules/generated/tensorly.contrib.sparse.decomposition.non_negative_parafac.rst", "modules/generated/tensorly.contrib.sparse.decomposition.non_negative_tucker.rst", "modules/generated/tensorly.contrib.sparse.decomposition.parafac.rst", "modules/generated/tensorly.contrib.sparse.decomposition.partial_tucker.rst", "modules/generated/tensorly.contrib.sparse.decomposition.robust_pca.rst", "modules/generated/tensorly.contrib.sparse.decomposition.symmetric_parafac_power_iteration.rst", "modules/generated/tensorly.contrib.sparse.decomposition.tucker.rst", "modules/generated/tensorly.copy.rst", "modules/generated/tensorly.cp_tensor.cp_mode_dot.rst", "modules/generated/tensorly.cp_tensor.cp_norm.rst", "modules/generated/tensorly.cp_tensor.cp_normalize.rst", "modules/generated/tensorly.cp_tensor.cp_to_tensor.rst", "modules/generated/tensorly.cp_tensor.cp_to_unfolded.rst", "modules/generated/tensorly.cp_tensor.cp_to_vec.rst", "modules/generated/tensorly.cp_tensor.unfolding_dot_khatri_rao.rst", "modules/generated/tensorly.datasets.synthetic.gen_image.rst", "modules/generated/tensorly.decomposition.CP.rst", "modules/generated/tensorly.decomposition.CPPower.rst", "modules/generated/tensorly.decomposition.CP_NN_HALS.rst", "modules/generated/tensorly.decomposition.ConstrainedCP.rst", "modules/generated/tensorly.decomposition.Parafac2.rst", "modules/generated/tensorly.decomposition.RandomizedCP.rst", "modules/generated/tensorly.decomposition.SymmetricCP.rst", "modules/generated/tensorly.decomposition.TensorTrain.rst", "modules/generated/tensorly.decomposition.Tucker.rst", "modules/generated/tensorly.decomposition.constrained_parafac.rst", "modules/generated/tensorly.decomposition.non_negative_parafac.rst", "modules/generated/tensorly.decomposition.non_negative_parafac_hals.rst", "modules/generated/tensorly.decomposition.non_negative_tucker.rst", "modules/generated/tensorly.decomposition.non_negative_tucker_hals.rst", "modules/generated/tensorly.decomposition.parafac.rst", "modules/generated/tensorly.decomposition.parafac_power_iteration.rst", "modules/generated/tensorly.decomposition.partial_tucker.rst", "modules/generated/tensorly.decomposition.power_iteration.rst", "modules/generated/tensorly.decomposition.randomised_parafac.rst", "modules/generated/tensorly.decomposition.robust_pca.rst", "modules/generated/tensorly.decomposition.sample_khatri_rao.rst", "modules/generated/tensorly.decomposition.symmetric_parafac_power_iteration.rst", "modules/generated/tensorly.decomposition.symmetric_power_iteration.rst", "modules/generated/tensorly.decomposition.tensor_train.rst", "modules/generated/tensorly.decomposition.tensor_train_matrix.rst", "modules/generated/tensorly.diag.rst", "modules/generated/tensorly.dot.rst", "modules/generated/tensorly.eps.rst", "modules/generated/tensorly.eye.rst", "modules/generated/tensorly.finfo.rst", "modules/generated/tensorly.get_backend.rst", "modules/generated/tensorly.index.rst", "modules/generated/tensorly.index_update.rst", "modules/generated/tensorly.is_tensor.rst", "modules/generated/tensorly.kr.rst", "modules/generated/tensorly.kron.rst", "modules/generated/tensorly.matmul.rst", "modules/generated/tensorly.max.rst", "modules/generated/tensorly.mean.rst", "modules/generated/tensorly.metrics.factors.congruence_coefficient.rst", "modules/generated/tensorly.metrics.regression.MSE.rst", "modules/generated/tensorly.metrics.regression.RMSE.rst", "modules/generated/tensorly.min.rst", "modules/generated/tensorly.moveaxis.rst", "modules/generated/tensorly.ndim.rst", "modules/generated/tensorly.norm.rst", "modules/generated/tensorly.ones.rst", "modules/generated/tensorly.parafac2_tensor.parafac2_to_slice.rst", "modules/generated/tensorly.parafac2_tensor.parafac2_to_slices.rst", "modules/generated/tensorly.parafac2_tensor.parafac2_to_tensor.rst", "modules/generated/tensorly.parafac2_tensor.parafac2_to_unfolded.rst", "modules/generated/tensorly.parafac2_tensor.parafac2_to_vec.rst", "modules/generated/tensorly.partial_svd.rst", "modules/generated/tensorly.prod.rst", "modules/generated/tensorly.qr.rst", "modules/generated/tensorly.random.random_cp.rst", "modules/generated/tensorly.random.random_parafac2.rst", "modules/generated/tensorly.random.random_tt.rst", "modules/generated/tensorly.random.random_tt_matrix.rst", "modules/generated/tensorly.random.random_tucker.rst", "modules/generated/tensorly.regression.cp_regression.CPRegressor.rst", "modules/generated/tensorly.regression.tucker_regression.TuckerRegressor.rst", "modules/generated/tensorly.reshape.rst", "modules/generated/tensorly.set_backend.rst", "modules/generated/tensorly.shape.rst", "modules/generated/tensorly.sign.rst", "modules/generated/tensorly.solve.rst", "modules/generated/tensorly.sort.rst", "modules/generated/tensorly.sqrt.rst", "modules/generated/tensorly.stack.rst", "modules/generated/tensorly.sum.rst", "modules/generated/tensorly.tenalg.backend_context.rst", "modules/generated/tensorly.tenalg.batched_outer.rst", "modules/generated/tensorly.tenalg.get_backend.rst", "modules/generated/tensorly.tenalg.higher_order_moment.rst", "modules/generated/tensorly.tenalg.inner.rst", "modules/generated/tensorly.tenalg.khatri_rao.rst", "modules/generated/tensorly.tenalg.kronecker.rst", "modules/generated/tensorly.tenalg.mode_dot.rst", "modules/generated/tensorly.tenalg.multi_mode_dot.rst", "modules/generated/tensorly.tenalg.outer.rst", "modules/generated/tensorly.tenalg.proximal.procrustes.rst", "modules/generated/tensorly.tenalg.proximal.soft_thresholding.rst", "modules/generated/tensorly.tenalg.proximal.svd_thresholding.rst", "modules/generated/tensorly.tenalg.set_backend.rst", "modules/generated/tensorly.tenalg.tensordot.rst", "modules/generated/tensorly.tensor.rst", "modules/generated/tensorly.tensordot.rst", "modules/generated/tensorly.to_numpy.rst", "modules/generated/tensorly.transpose.rst", "modules/generated/tensorly.tt_matrix.tt_matrix_to_tensor.rst", "modules/generated/tensorly.tt_matrix.tt_matrix_to_unfolded.rst", "modules/generated/tensorly.tt_matrix.tt_matrix_to_vec.rst", "modules/generated/tensorly.tt_tensor.pad_tt_rank.rst", "modules/generated/tensorly.tt_tensor.tt_to_tensor.rst", "modules/generated/tensorly.tt_tensor.tt_to_unfolded.rst", "modules/generated/tensorly.tt_tensor.tt_to_vec.rst", "modules/generated/tensorly.tucker_tensor.tucker_mode_dot.rst", "modules/generated/tensorly.tucker_tensor.tucker_to_tensor.rst", "modules/generated/tensorly.tucker_tensor.tucker_to_unfolded.rst", "modules/generated/tensorly.tucker_tensor.tucker_to_vec.rst", "modules/generated/tensorly.where.rst", "modules/generated/tensorly.zeros.rst", "modules/generated/tensorly.zeros_like.rst", "modules/generated/tucker-function.rst", "user_guide/backend.rst", "user_guide/index.rst", "user_guide/quickstart.rst", "user_guide/sparse_backend.rst", "user_guide/tensor_basics.rst", "user_guide/tensor_decomposition.rst", "user_guide/tensor_regression.rst"], "titles": ["About us", "Non-negative PARAFAC Decomposition of IL-2 Response Data", "COVID-19 Serology Dataset Analysis with CP", "Image compression via tensor decomposition", "Computation times", "Using line search with PARAFAC", "Constrained CP decomposition in Tensorly &gt;=0.7", "Non-negative CP decomposition in Tensorly &gt;=0.6", "Non-negative Tucker decomposition in Tensorly &gt;=0.6", "Demonstration of PARAFAC2", "Computation times", "Gallery of examples", "Basic tensor operations", "CP tensor regression", "Tucker tensor regression", "Computation times", "Computation times", "Backend System", "Contributing", "Writing documentation", "Development guide", "&lt;no title&gt;", "TensorLy: Tensor Learning in Python", "Installing tensorly", "API reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.parafac2", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.abs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.all", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.arange", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.argmax", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.argmin", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.backend_context", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.fold", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.partial_fold", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.partial_tensor_to_vec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.partial_unfold", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.partial_vec_to_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.tensor_to_vec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.unfold", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.base</span></code>.vec_to_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.check_random_state", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.clip", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.concatenate", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.conj", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.context", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.contrib.decomposition</span></code>.tensor_train_cross", "tensorly.contrib.sparse.decomposition.non_negative_parafac", "tensorly.contrib.sparse.decomposition.non_negative_tucker", "tensorly.contrib.sparse.decomposition.parafac", "tensorly.contrib.sparse.decomposition.partial_tucker", "tensorly.contrib.sparse.decomposition.robust_pca", "tensorly.contrib.sparse.decomposition.symmetric_parafac_power_iteration", "tensorly.contrib.sparse.decomposition.tucker", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.copy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.cp_mode_dot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.cp_norm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.cp_normalize", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.cp_to_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.cp_to_unfolded", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.cp_to_vec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.cp_tensor</span></code>.unfolding_dot_khatri_rao", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.datasets.synthetic</span></code>.gen_image", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.CP", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.CPPower", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.CP_NN_HALS", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.ConstrainedCP", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.Parafac2", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.RandomizedCP", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.SymmetricCP", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.TensorTrain", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.Tucker", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.constrained_parafac", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.non_negative_parafac", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.non_negative_parafac_hals", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.non_negative_tucker", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.non_negative_tucker_hals", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.parafac", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.parafac_power_iteration", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.partial_tucker", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.power_iteration", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.randomised_parafac", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.robust_pca", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.sample_khatri_rao", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.symmetric_parafac_power_iteration", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.symmetric_power_iteration", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.tensor_train", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.tensor_train_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.diag", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.dot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.eps", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.eye", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.finfo", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.get_backend", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.index", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.index_update", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.is_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.kr", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.kron", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.matmul", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.max", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.mean", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.metrics.factors</span></code>.congruence_coefficient", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.metrics.regression</span></code>.MSE", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.metrics.regression</span></code>.RMSE", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.min", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.moveaxis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.ndim", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.norm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.ones", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.parafac2_tensor</span></code>.parafac2_to_slice", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.parafac2_tensor</span></code>.parafac2_to_slices", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.parafac2_tensor</span></code>.parafac2_to_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.parafac2_tensor</span></code>.parafac2_to_unfolded", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.parafac2_tensor</span></code>.parafac2_to_vec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.partial_svd", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.prod", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.qr", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.random</span></code>.random_cp", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.random</span></code>.random_parafac2", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.random</span></code>.random_tt", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.random</span></code>.random_tt_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.random</span></code>.random_tucker", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.regression.cp_regression</span></code>.CPRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.regression.tucker_regression</span></code>.TuckerRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.reshape", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.set_backend", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.shape", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.sign", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.solve", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.sort", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.sqrt", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.stack", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.sum", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.backend_context", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.batched_outer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.get_backend", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.higher_order_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.inner", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.khatri_rao", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.kronecker", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.mode_dot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.multi_mode_dot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.outer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg.proximal</span></code>.procrustes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg.proximal</span></code>.soft_thresholding", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg.proximal</span></code>.svd_thresholding", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.set_backend", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tenalg</span></code>.tensordot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.tensordot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.to_numpy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.transpose", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tt_matrix</span></code>.tt_matrix_to_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tt_matrix</span></code>.tt_matrix_to_unfolded", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tt_matrix</span></code>.tt_matrix_to_vec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tt_tensor</span></code>.pad_tt_rank", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tt_tensor</span></code>.tt_to_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tt_tensor</span></code>.tt_to_unfolded", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tt_tensor</span></code>.tt_to_vec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tucker_tensor</span></code>.tucker_mode_dot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tucker_tensor</span></code>.tucker_to_tensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tucker_tensor</span></code>.tucker_to_unfolded", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.tucker_tensor</span></code>.tucker_to_vec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.where", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.zeros", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly</span></code>.zeros_like", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tensorly.decomposition</span></code>.tucker", "<span class=\"section-number\">2. </span>TensorLy\u2019s backend system", "User guide", "<span class=\"section-number\">1. </span>Quick-Start", "<span class=\"section-number\">6. </span>Sparse Backend", "<span class=\"section-number\">3. </span>Tensor basics", "<span class=\"section-number\">4. </span>Tensor decomposition", "<span class=\"section-number\">5. </span>Tensor regression"], "terms": {"tensorli": [0, 1, 3, 5, 9, 10, 12, 13, 14, 17, 18, 19, 22, 168, 170, 171, 172, 173], "wa": [0, 23, 25, 66, 116, 124, 130, 152, 156, 170], "creat": [0, 13, 14, 18, 19, 24, 25, 26, 43, 53, 66, 82, 86, 87, 109, 110, 111, 112, 113, 117, 119, 120, 121, 127, 130, 165, 167, 168, 169, 170, 172], "2015": 0, "jean": [0, 22], "kossaifi": [0, 22], "make": [0, 1, 7, 9, 18, 22, 23, 24, 45, 114, 124, 167, 170, 172], "tensor": [0, 1, 2, 4, 5, 6, 15, 16, 17, 19, 20, 22, 25, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 93, 94, 95, 101, 106, 107, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 126, 129, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 168, 170], "method": [0, 2, 6, 7, 8, 17, 18, 22, 24, 27, 53, 65, 71, 99, 100, 104, 115, 124, 132, 151, 167, 169, 172, 173], "access": [0, 167, 169], "easi": [0, 12, 22, 167], "It": [0, 2, 6, 9, 17, 18, 23, 27, 29, 30, 57, 115, 124, 132, 167, 170], "first": [0, 1, 2, 6, 7, 8, 9, 18, 23, 24, 25, 27, 29, 30, 34, 35, 42, 45, 57, 66, 86, 97, 98, 99, 104, 109, 110, 115, 116, 124, 131, 132, 137, 149, 167, 171, 172, 173], "present": [0, 1, 23, 99, 104, 172], "neurip": 0, "workshop": 0, "learn": [0, 13, 14, 22, 40, 46, 72, 122, 123, 167, 169, 173], "why": [0, 168, 169], "now": [0, 1, 2, 7, 9, 23, 98, 167, 169, 170, 172], "how": [0, 1, 2, 3, 5, 6, 9, 11, 12, 13, 14, 20, 155, 168, 170, 172], "later": [0, 18], "publish": 0, "jmlr": [0, 22], "paper": [0, 22], "titl": [0, 6, 7, 8, 9, 20, 22], "python": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 19, 22, 28, 53, 98, 99, 104, 132, 171], "yanni": [0, 22], "panagaki": [0, 22], "anima": [0, 22], "anandkumar": [0, 22], "maja": [0, 22], "pantic": [0, 22], "built": [0, 19, 28], "top": [0, 9], "numpi": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 17, 19, 20, 22, 27, 28, 31, 40, 82, 87, 90, 99, 100, 104, 108, 115, 116, 128, 132, 133, 151, 164, 167, 169, 170, 171, 172], "scipi": [0, 3, 9, 114, 116, 128, 170], "onli": [0, 1, 6, 7, 8, 9, 17, 18, 19, 23, 24, 26, 29, 30, 31, 43, 45, 48, 52, 62, 64, 70, 76, 82, 98, 99, 104, 116, 124, 127, 130, 132, 133, 138, 155, 163, 166, 169, 170], "In": [0, 1, 2, 6, 7, 8, 19, 20, 22, 23, 24, 28, 29, 30, 32, 42, 46, 56, 60, 65, 71, 72, 75, 90, 97, 100, 108, 115, 116, 124, 132, 164, 167, 169, 170, 171, 172], "order": [0, 1, 6, 7, 25, 26, 43, 45, 49, 51, 52, 53, 65, 66, 69, 70, 71, 75, 78, 83, 84, 85, 90, 98, 105, 107, 108, 124, 127, 130, 136, 137, 138, 139, 149, 151, 164, 165, 166, 172], "combin": [0, 18, 24, 167, 169, 172], "deep": [0, 22, 167, 169], "run": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 18, 167, 169], "them": [0, 2, 17, 19, 167, 170], "multipl": [0, 1, 7, 8, 17, 27, 29, 30, 42, 46, 47, 48, 62, 64, 70, 72, 74, 76, 98, 99, 100, 104, 131, 169], "devic": [0, 24, 167], "cpu": [0, 24, 168], "gpu": [0, 22, 24, 168, 169], "flexibl": [0, 6, 22, 65, 71], "backend": [0, 20, 22, 31, 92, 125, 133, 135, 144, 146, 168], "system": [0, 1, 2, 6, 18, 20, 22, 48, 62, 64, 65, 71, 76, 128, 168, 169], "ad": [0, 18, 116, 132], "thi": [0, 1, 6, 7, 8, 9, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 42, 43, 45, 48, 49, 53, 55, 57, 60, 62, 64, 65, 66, 69, 71, 75, 76, 78, 85, 87, 90, 98, 99, 100, 104, 105, 108, 109, 110, 111, 112, 113, 115, 116, 124, 127, 130, 132, 133, 138, 153, 157, 163, 164, 167, 169, 170, 171, 172, 173], "allow": [0, 1, 2, 17, 24, 25, 28, 45, 48, 62, 64, 67, 69, 76, 80, 85, 90, 98, 99, 104, 108, 164, 167, 169, 173], "algorithm": [0, 6, 7, 8, 9, 18, 24, 25, 45, 46, 47, 48, 49, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 166, 168], "written": [0, 170], "ran": 0, "ani": [0, 6, 18, 22, 24, 25, 27, 28, 66, 99, 100, 104, 115, 130, 132, 138, 141, 160, 161, 162, 167], "major": [0, 90, 108, 164], "framework": [0, 6, 22, 65, 71, 169], "pytorch": [0, 17, 18, 22, 24, 31, 133, 168, 169, 170], "mxnet": [0, 18, 22, 24, 31, 133, 167, 169], "tensorflow": [0, 17, 18, 22, 24, 31, 133, 167, 169, 170], "cupi": [0, 18, 22, 24, 31, 133, 167, 169], "jax": [0, 18, 22, 24, 167, 169], "formost": 0, "commun": [0, 172], "aim": [0, 2], "With": [0, 22, 27, 29, 30, 99, 100, 104, 115, 132, 170], "robust": [0, 50, 51, 63, 68, 77, 79, 81, 83, 84, 170], "activ": [0, 1, 2, 22, 25, 48, 62, 64, 65, 66, 71, 75, 76], "group": 0, "contributor": 0, "we": [0, 1, 2, 7, 8, 9, 17, 18, 19, 24, 25, 45, 48, 50, 53, 58, 62, 64, 66, 75, 76, 81, 101, 109, 110, 111, 112, 113, 115, 116, 167, 169, 170, 171, 172, 173], "would": [0, 35, 42, 131, 170], "like": [0, 2, 6, 7, 8, 17, 18, 19, 28, 50, 81, 90, 98, 108, 116, 124, 164, 167, 169, 173], "thank": 0, "all": [0, 8, 11, 18, 19, 22, 23, 24, 25, 31, 45, 47, 48, 49, 52, 53, 56, 57, 58, 59, 61, 62, 64, 65, 66, 69, 70, 71, 73, 74, 75, 76, 78, 80, 85, 90, 99, 100, 101, 104, 105, 109, 110, 111, 112, 113, 115, 116, 125, 128, 130, 132, 133, 138, 146, 163, 166, 167, 169, 170], "those": [0, 1], "who": 0, "have": [0, 1, 6, 7, 8, 9, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 48, 53, 61, 62, 64, 65, 66, 71, 76, 98, 100, 110, 115, 124, 127, 130, 131, 132, 141, 160, 161, 162, 167, 169, 170, 172], "contribut": [0, 20, 22], "includ": [0, 1, 2, 6, 8, 18, 19, 24, 27, 28, 33, 36, 100, 115, 132, 169], "alphabet": 0, "jeremi": 0, "cohen": 0, "julia": 0, "gusak": 0, "meraj": 0, "hashemizadeh": 0, "aaron": 0, "meurer": 0, "yngve": 0, "mardal": 0, "moe": 0, "meyer": [0, 2], "taylor": [0, 2], "lee": 0, "patti": 0, "mari": 0, "roald": 0, "caglayan": 0, "tuna": 0, "For": [0, 1, 2, 9, 17, 18, 19, 24, 26, 28, 35, 43, 45, 98, 100, 116, 124, 127, 130, 131, 132, 139, 140, 141, 151, 167, 169, 170, 171, 172, 173], "full": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 33, 36, 57, 60, 82, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 128, 151, 152, 153, 156, 157, 160, 164, 167, 169, 171, 172], "list": [0, 6, 9, 23, 25, 42, 45, 46, 47, 48, 49, 52, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 101, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 123, 131, 138, 139, 141, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 166, 170, 172], "check": [0, 9, 18, 24, 27, 128], "github": [0, 18, 22], "page": [0, 6, 18, 22], "The": [0, 6, 7, 8, 9, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42, 43, 45, 46, 48, 50, 53, 60, 62, 64, 65, 66, 71, 72, 73, 75, 76, 81, 82, 87, 97, 98, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 113, 115, 116, 118, 124, 127, 128, 130, 131, 132, 133, 137, 149, 151, 155, 163, 164, 165, 167, 169, 170, 171, 172], "project": [0, 9, 18, 19, 25, 60, 65, 66, 71, 109, 110, 111, 112, 113, 170, 172], "ha": [0, 1, 6, 7, 8, 9, 17, 29, 30, 47, 57, 58, 73, 74, 75, 97, 100, 115, 130, 131, 132, 143, 144, 145, 170, 172], "been": [0, 1, 17, 31, 133, 143, 144, 145, 170], "variou": [0, 1, 8, 17, 169], "organ": [0, 97, 168], "univers": [0, 22, 48, 62, 64, 76], "inria": 0, "fund": 0, "time": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 17, 23, 25, 47, 48, 52, 60, 62, 64, 66, 70, 73, 74, 75, 76, 109, 110, 111, 112, 113, 138, 139, 141, 166, 170, 171, 172], "engin": [0, 1], "work": [0, 1, 2, 20, 48, 57, 62, 64, 73, 76, 116, 167, 170], "click": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14], "here": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 18, 19, 23, 25, 28, 66, 127, 167, 170, 172], "download": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14], "exampl": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 20, 22, 26, 27, 28, 29, 30, 31, 42, 43, 45, 53, 87, 90, 93, 97, 98, 99, 100, 104, 105, 108, 115, 116, 124, 127, 128, 130, 131, 132, 133, 144, 149, 151, 163, 164, 165, 168, 171], "code": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 18, 19, 22, 24, 45, 60, 167, 169], "provid": [1, 2, 6, 7, 17, 22, 24, 26, 29, 30, 42, 43, 49, 52, 70, 78, 98, 100, 107, 116, 122, 123, 127, 130, 131, 132, 141, 160, 161, 162, 163, 166, 167, 169], "an": [1, 2, 6, 7, 8, 9, 18, 22, 23, 25, 26, 27, 28, 29, 30, 42, 43, 50, 53, 57, 58, 61, 62, 63, 64, 65, 66, 71, 73, 75, 81, 87, 90, 93, 98, 99, 100, 104, 105, 108, 109, 110, 111, 112, 113, 115, 116, 124, 127, 130, 131, 132, 149, 151, 161, 163, 164, 165, 167, 170, 171], "us": [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 22, 23, 24, 25, 26, 28, 31, 40, 42, 46, 47, 48, 49, 52, 53, 55, 60, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 82, 86, 87, 92, 93, 94, 98, 99, 100, 104, 109, 110, 111, 112, 113, 114, 115, 116, 121, 124, 127, 128, 132, 133, 135, 140, 141, 149, 151, 155, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173], "reduc": [1, 27, 29, 30, 99, 100, 104, 115, 116, 132], "dimension": [1, 2, 24, 29, 30, 108, 115, 116, 164, 167, 171, 172], "experiment": [1, 168], "insight": 1, "about": [1, 8, 18, 22, 91, 170], "underli": [1, 2, 19, 124, 155], "structur": [1, 2, 6, 9, 19, 97, 169, 170], "To": [1, 2, 6, 8, 9, 18, 23, 24, 25, 53, 66, 99, 104, 109, 110, 111, 112, 113, 167, 169], "do": [1, 2, 18, 19, 168], "measur": [1, 2, 167, 169], "cell": [1, 2], "signal": [1, 2, 6, 65, 71], "import": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 26, 31, 53, 98, 133, 144, 167, 169, 170, 171, 172], "np": [1, 2, 3, 5, 6, 7, 8, 9, 12, 17, 18, 25, 26, 27, 28, 29, 30, 40, 42, 43, 45, 46, 47, 48, 49, 52, 53, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 78, 80, 87, 90, 97, 98, 99, 100, 104, 105, 108, 114, 115, 116, 117, 118, 119, 120, 121, 124, 127, 128, 130, 131, 132, 138, 149, 151, 163, 164, 165, 166, 167, 170, 171, 172], "matplotlib": [1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 26], "pyplot": [1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 26], "plt": [1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 26], "from": [1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 42, 45, 56, 66, 82, 90, 97, 98, 109, 110, 111, 112, 113, 115, 124, 127, 130, 131, 132, 144, 153, 157, 163, 167, 169, 170, 171, 172, 173], "dataset": [1, 4, 9, 11, 13, 14, 168], "il2data": 1, "non_negative_parafac": [1, 7, 170], "cp_tensor": [1, 7, 167, 169, 170], "cp_normal": 1, "load": [1, 20, 24, 125, 146, 169], "cellular": 1, "stimul": 1, "natur": 1, "occur": [1, 28, 42, 132], "immun": [1, 2], "molecul": 1, "which": [1, 6, 7, 9, 17, 18, 19, 24, 25, 26, 27, 28, 29, 30, 42, 43, 45, 46, 48, 49, 52, 53, 54, 60, 61, 62, 64, 65, 66, 70, 71, 72, 73, 76, 78, 89, 90, 91, 94, 98, 99, 100, 104, 108, 115, 116, 117, 119, 120, 127, 130, 131, 132, 140, 143, 144, 145, 147, 151, 152, 156, 159, 163, 164, 166, 167, 169, 170, 172, 173], "pharmaceut": 1, "compani": [1, 22], "drug": 1, "design": 1, "attempt": [1, 100, 170], "act": [1, 6], "effect": [1, 48, 62, 64, 76], "immunotherapi": 1, "therapi": 1, "alter": [1, 2], "s": [1, 2, 18, 19, 20, 22, 23, 27, 40, 47, 74, 99, 104, 108, 114, 124, 132, 137, 149, 164, 168, 169, 170, 171, 172], "increas": [1, 6, 50, 81, 155], "decreas": [1, 6, 25, 65, 66, 67, 71, 80], "its": [1, 6, 18, 24, 26, 27, 43, 45, 87, 98, 124, 127, 130, 151, 153, 154, 155, 157, 158, 169, 171, 172], "interact": [1, 2, 17], "particular": [1, 7, 9, 17, 18, 19, 23], "type": [1, 2, 17, 19, 25, 27, 28, 48, 62, 64, 65, 66, 71, 76, 90, 91, 99, 100, 104, 108, 115, 116, 132, 164, 165, 169, 173], "through": [1, 24, 27, 53, 99, 100, 104, 115, 132, 167, 169, 173], "jak": 1, "stat": 1, "pathwai": 1, "transmit": 1, "phosphoryl": 1, "stat5": 1, "pstat5": 1, "when": [1, 7, 8, 17, 18, 25, 28, 42, 46, 48, 49, 52, 53, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 98, 99, 101, 104, 115, 116, 124, 130, 132, 149, 151, 163, 166, 167, 170], "caus": [1, 2, 100, 132, 170], "prolifer": 1, "depend": [1, 6, 22, 87, 98, 100, 116, 128, 132, 163, 167, 169, 170], "whether": [1, 22, 27, 47, 48, 52, 62, 70, 73, 74, 75, 76, 87, 90, 101, 108, 116, 164, 166, 167, 169, 170], "regulatori": 1, "t": [1, 2, 8, 9, 18, 25, 31, 42, 45, 48, 55, 60, 62, 64, 65, 66, 70, 71, 75, 76, 97, 99, 101, 104, 109, 110, 111, 112, 113, 114, 116, 124, 133, 138, 139, 144, 167, 169, 170, 171, 172], "treg": 1, "effector": 1, "helper": 1, "killer": 1, "cytotox": 1, "thelper": 1, "nk": 1, "cd8": 1, "respond": 1, "can": [1, 2, 6, 7, 8, 9, 11, 17, 18, 19, 23, 24, 26, 27, 28, 53, 55, 56, 59, 60, 97, 98, 99, 100, 115, 116, 124, 132, 138, 149, 162, 163, 167, 169, 170, 171, 172, 173], "result": [1, 2, 7, 8, 18, 19, 23, 26, 27, 28, 29, 30, 42, 43, 60, 61, 73, 75, 87, 90, 98, 99, 100, 104, 105, 108, 115, 116, 124, 127, 130, 131, 132, 137, 149, 162, 164, 165, 170], "immunosuppress": 1, "immunostimul": 1, "respect": [1, 73, 75, 98, 137, 167], "thu": [1, 6, 170], "meant": 1, "repress": 1, "potenti": 1, "treatment": 1, "autoimmun": 1, "diseas": 1, "primarili": 1, "enact": 1, "desir": [1, 48, 58, 62, 64, 76, 100, 108, 124, 164, 167], "convers": [1, 100], "cancer": 1, "achiev": [1, 105], "either": [1, 6, 18, 25, 65, 71, 98, 114, 116, 128, 167, 169], "bia": 1, "variant": [1, 60, 170], "affin": 1, "receptor": [1, 2], "il2r\u03b1": 1, "il2r\u03b2": 1, "furthermor": 1, "bind": [1, 2], "domain": 1, "multival": 1, "mai": [1, 6, 8, 9, 17, 24, 25, 27, 28, 42, 45, 53, 66, 100, 115, 116, 132, 170], "more": [1, 2, 18, 25, 27, 28, 42, 60, 66, 87, 99, 100, 104, 116, 127, 131, 132, 138, 139, 149, 167, 169, 170, 171, 172], "therapeut": 1, "understand": 1, "mutat": 1, "affect": [1, 28, 31, 133], "mutant": 1, "perform": [1, 3, 7, 12, 13, 14, 18, 25, 27, 45, 48, 49, 62, 66, 76, 78, 100, 115, 132, 167, 169, 170, 171, 172, 173], "our": [1, 7, 8, 24, 167, 169, 170, 172], "contain": [1, 24, 25, 26, 46, 48, 51, 53, 62, 63, 64, 66, 68, 72, 73, 76, 77, 82, 83, 100, 109, 110, 111, 112, 113, 114, 116, 130, 149, 151, 169, 170], "8": [1, 6, 9, 12, 25, 28, 47, 65, 66, 71, 73, 74, 75, 87, 116, 128, 149, 163, 170, 171], "differ": [1, 2, 7, 8, 9, 24, 25, 53, 66, 98, 99, 114, 127, 130, 167, 171], "13": [1, 6, 9, 12, 25, 29, 30, 66, 98, 100, 170, 171], "4": [1, 2, 6, 7, 8, 9, 12, 13, 14, 27, 28, 29, 30, 42, 45, 53, 86, 87, 93, 97, 98, 99, 100, 104, 105, 115, 124, 127, 130, 131, 144, 149, 151, 163, 165, 169, 170, 171], "timepoint": 1, "12": [1, 6, 7, 8, 12, 29, 30, 100, 115, 163, 170, 171, 172], "standard": 1, "concentr": 1, "therefor": [1, 6, 7, 8, 18, 24, 33, 35, 38, 171, 172], "shape": [1, 9, 12, 13, 14, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 132, 134, 138, 139, 140, 142, 143, 144, 149, 151, 152, 159, 160, 163, 164, 165, 166, 167, 169, 170, 171, 172], "x": [1, 9, 13, 14, 23, 25, 26, 29, 30, 35, 43, 50, 53, 55, 66, 81, 86, 87, 105, 109, 110, 111, 112, 113, 115, 116, 122, 123, 127, 128, 130, 151, 163, 164, 165, 170, 171, 173], "dimens": [1, 27, 28, 29, 30, 33, 34, 35, 36, 42, 45, 61, 97, 98, 99, 100, 104, 105, 115, 116, 121, 123, 124, 131, 132, 149, 155, 165, 171, 172, 173], "repres": [1, 2, 8, 17, 118, 152, 155, 156, 167, 170, 172], "dose": 1, "each": [1, 2, 7, 8, 9, 18, 24, 25, 26, 35, 45, 46, 47, 48, 50, 51, 52, 56, 60, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 105, 118, 121, 122, 123, 130, 131, 132, 138, 141, 166, 172, 173], "quantiti": 1, "amount": [1, 2, 6], "phosphorly": 1, "given": [1, 6, 9, 17, 18, 25, 27, 28, 29, 30, 45, 53, 65, 66, 71, 82, 89, 99, 101, 104, 108, 109, 110, 111, 112, 113, 115, 124, 130, 132, 138, 149, 152, 153, 156, 157, 164, 165, 167, 171, 173], "popul": [1, 28], "follow": [1, 6, 7, 8, 9, 19, 24, 25, 66, 75, 98, 116, 149, 170], "specifi": [1, 6, 18, 25, 27, 28, 29, 30, 32, 34, 35, 42, 54, 61, 66, 73, 87, 90, 93, 94, 100, 114, 115, 125, 131, 132, 140, 141, 146, 147, 149, 151, 159, 167], "response_data": 1, "il2mut": 1, "tick": [1, 2], "0": [1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 27, 28, 29, 30, 33, 34, 35, 36, 38, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 57, 59, 60, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 87, 90, 97, 98, 99, 100, 104, 105, 108, 114, 115, 116, 119, 120, 124, 127, 128, 130, 131, 132, 138, 139, 141, 144, 149, 151, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172], "3": [1, 2, 3, 5, 6, 7, 9, 12, 13, 14, 17, 18, 28, 29, 30, 42, 45, 48, 52, 53, 62, 64, 65, 67, 69, 70, 71, 75, 76, 80, 85, 86, 87, 90, 93, 94, 97, 98, 99, 100, 104, 105, 108, 115, 116, 124, 128, 130, 131, 138, 139, 144, 149, 151, 163, 164, 165, 166, 169, 170, 171, 172], "print": [1, 6, 7, 8, 9, 12, 14, 19, 28, 45, 73, 75, 170, 172], "dim": [1, 2], "out": [1, 2, 6, 7, 8, 9, 12, 14, 17, 18, 26, 27, 28, 29, 30, 42, 43, 87, 97, 98, 99, 100, 104, 108, 115, 116, 127, 130, 131, 132, 163, 164, 165], "ligand": 1, "compon": [1, 25, 46, 48, 50, 51, 60, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 81, 83, 84, 114, 117, 121, 149], "normal": [1, 2, 6, 13, 14, 18, 25, 48, 56, 62, 64, 65, 66, 71, 76, 116, 169], "aid": 1, "futur": [1, 18, 23, 24], "comparison": [1, 5, 99, 104], "correl": 1, "across": [1, 130], "must": [1, 7, 8, 18, 19, 26, 27, 28, 42, 43, 51, 83, 84, 98, 99, 100, 104, 105, 115, 116, 118, 119, 120, 127, 128, 130, 131, 132, 149, 151], "preprocess": 1, "readi": [1, 23], "factor": [1, 2, 3, 6, 7, 8, 9, 25, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 85, 109, 110, 111, 112, 113, 116, 117, 119, 120, 121, 138, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 169, 170, 172], "few": [1, 6, 7], "miss": [1, 48, 49, 50, 52, 62, 64, 76, 78, 81, 144, 166, 168], "valu": [1, 6, 7, 8, 17, 18, 24, 25, 26, 27, 28, 29, 30, 43, 46, 48, 49, 50, 52, 53, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 81, 90, 93, 94, 98, 99, 100, 101, 102, 103, 104, 108, 114, 115, 116, 122, 123, 124, 127, 128, 130, 132, 144, 145, 163, 164, 165, 166, 167, 168, 172], "so": [1, 8, 9, 18, 24, 25, 66, 116, 130, 149, 155, 170, 172], "gener": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 18, 19, 23, 28, 45, 61, 82, 109, 110, 116, 117, 118, 119, 120, 121, 132, 134, 142, 169, 170], "mask": [1, 42, 46, 48, 49, 50, 52, 57, 62, 64, 70, 72, 76, 78, 81, 96, 138, 144, 166, 170], "mark": 1, "where": [1, 8, 9, 24, 25, 26, 27, 28, 31, 42, 43, 48, 49, 50, 52, 56, 57, 58, 59, 62, 64, 65, 66, 71, 76, 78, 81, 90, 97, 99, 100, 104, 109, 110, 111, 112, 113, 115, 116, 118, 127, 130, 132, 133, 138, 139, 151, 166, 170], "tensor_mask": 1, "isfinit": [1, 2], "ve": 1, "finit": [1, 6], "regener": 1, "without": [1, 5, 25, 66, 73, 75, 79, 84, 124, 155, 169, 170], "response_data_fin": 1, "nan_to_num": [1, 2], "decompos": [1, 7, 8, 9, 45, 49, 50, 51, 52, 62, 63, 64, 65, 66, 69, 70, 75, 77, 78, 79, 81, 83, 84, 85, 86, 117, 118, 119, 120, 121, 166, 167, 169, 170, 172], "three": [1, 9, 13, 14, 19, 149, 163], "also": [1, 2, 7, 8, 17, 18, 23, 24, 28, 35, 48, 49, 52, 62, 64, 69, 76, 78, 82, 85, 105, 115, 132, 155, 166, 167, 169, 170, 171, 172, 173], "easier": 1, "made": [1, 22, 25, 66, 97, 116], "between": [1, 2, 7, 8, 17, 28, 73, 75, 101, 102, 103, 137, 147], "mean": [1, 7, 8, 9, 18, 25, 53, 66, 101, 102, 103, 115, 124, 132, 165, 167, 169, 172], "magnitud": 1, "sig_tensor_fact": 1, "init": [1, 3, 7, 25, 46, 47, 48, 49, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 166, 167, 170], "random": [1, 3, 5, 6, 7, 8, 9, 13, 14, 18, 25, 40, 45, 46, 47, 48, 49, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 82, 114, 116, 131, 166, 167, 168, 170], "rank": [1, 2, 3, 5, 6, 7, 8, 13, 14, 18, 25, 45, 46, 47, 48, 49, 50, 51, 52, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 85, 86, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 128, 138, 155, 166, 167, 169, 170, 172, 173], "n_iter_max": [1, 2, 5, 8, 9, 13, 14, 25, 45, 46, 47, 48, 49, 50, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 122, 123, 166], "5000": 1, "tol": [1, 2, 3, 5, 8, 9, 13, 14, 25, 45, 46, 47, 48, 49, 50, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 122, 123, 166], "1e": [1, 2, 8, 9, 25, 46, 48, 50, 62, 64, 65, 66, 67, 71, 72, 73, 75, 76, 80, 81, 122, 123], "9": [1, 2, 5, 6, 9, 12, 86, 87, 98, 100, 116, 130, 144, 149, 163, 170, 171], "random_st": [1, 3, 5, 9, 25, 45, 46, 47, 48, 49, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 82, 114, 117, 118, 119, 120, 121, 122, 123, 166], "1": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 85, 86, 87, 90, 93, 97, 98, 99, 100, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 122, 123, 124, 127, 128, 130, 131, 132, 138, 139, 140, 144, 149, 151, 152, 154, 155, 158, 159, 160, 163, 164, 165, 166, 169, 170, 171, 172, 173], "name": [1, 17, 19, 31, 92, 101, 125, 133, 135, 146, 169], "thei": [1, 7, 24, 98, 149, 167, 172], "ar": [1, 2, 6, 7, 8, 9, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 35, 42, 48, 49, 50, 52, 53, 56, 57, 61, 62, 64, 65, 66, 71, 75, 76, 78, 81, 87, 90, 97, 98, 99, 100, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 128, 130, 131, 132, 141, 144, 149, 160, 161, 162, 163, 164, 166, 167, 169, 170, 172], "origin": [1, 3, 7, 8, 9, 12, 13, 14, 26, 32, 33, 36, 43, 105, 124, 127, 130, 143, 151, 170, 172], "refer": [1, 20, 25, 27, 28, 45, 46, 47, 48, 52, 53, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 80, 85, 90, 100, 108, 115, 124, 128, 130, 132, 138, 139, 151, 164, 166, 167, 168, 169], "specif": [1, 2, 7, 8, 17, 18, 24, 115, 169], "amino": 1, "acid": 1, "sequenc": [1, 7, 8, 42, 45, 69, 85, 105, 108, 131, 149, 165], "well": [1, 2, 9, 17, 18, 99, 104, 115, 128, 169], "valenc": 1, "format": [1, 7, 8, 12, 13, 14, 18, 19, 24, 86, 120, 152, 153, 154, 156, 157, 158, 169], "monoval": 1, "bival": 1, "final": [1, 9, 18, 57, 171], "label": [1, 2, 5, 9, 13, 14, 122, 123, 173], "plot": [1, 2, 3, 6, 7, 8, 9, 13, 14, 26], "analyz": 1, "f": [1, 2, 7, 8, 9, 25, 53, 60, 66, 90, 108, 124, 164, 165, 172], "ax": [1, 2, 3, 5, 9, 13, 14, 27, 29, 30, 98, 99, 100, 104, 105, 115, 116, 128, 132, 149, 151], "subplot": [1, 2, 9], "figsiz": [1, 2, 9], "5": [1, 2, 3, 6, 8, 9, 12, 13, 14, 25, 27, 28, 29, 42, 45, 48, 50, 62, 66, 69, 76, 81, 85, 87, 93, 94, 97, 98, 99, 100, 104, 105, 108, 115, 124, 127, 128, 131, 132, 144, 149, 151, 163, 164, 165, 167, 169, 170, 171], "width": 1, "25": [1, 3, 13, 14, 45], "lig_fac": 1, "x_lig": 1, "arang": [1, 2, 7, 12, 29, 30, 42, 45, 87, 97, 98, 99, 104, 124, 149, 151, 163, 165, 170, 171], "len": [1, 2, 9, 13, 14, 47, 49, 52, 70, 74, 75, 78, 82, 119, 120, 138, 166, 172], "lig_rects_comp1": 1, "bar": 1, "lig_rects_comp2": 1, "lig_rects_comp3": 1, "set": [1, 9, 17, 26, 27, 29, 30, 31, 35, 43, 53, 73, 75, 82, 99, 100, 104, 108, 115, 122, 123, 125, 127, 130, 132, 133, 146, 164, 165, 167, 168, 169, 170], "xlabel": [1, 2], "ylabel": [1, 2], "weight": [1, 2, 3, 7, 9, 13, 14, 25, 46, 48, 51, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 71, 72, 73, 76, 77, 83, 96, 100, 109, 110, 111, 112, 113, 122, 123, 138, 173], "ylim": 1, "set_xtick": [1, 2, 9], "set_xticklabel": [1, 2], "get_xticklabel": 1, "rotat": 1, "60": [1, 6, 149, 163], "right": [1, 8, 9, 25, 45, 66, 114, 138, 139, 171], "fontsiz": [1, 9], "legend": [1, 5, 6, 7, 8, 9], "cell_fac": 1, "x_cell": 1, "cell_rects_comp1": 1, "cell_rects_comp2": 1, "cell_rects_comp3": 1, "45": [1, 6], "tight_layout": [1, 3, 9], "show": [1, 3, 5, 6, 7, 9, 13, 14, 18, 22, 26], "observ": [1, 173], "both": [1, 2, 5, 6, 7, 8, 18, 22, 25, 66, 98, 116, 124, 149, 163, 170, 172, 173], "interepret": 1, "look": [1, 2, 7, 8, 9, 19, 23], "pattern": [1, 2, 13, 14, 47, 74], "among": [1, 25, 66, 114], "see": [1, 2, 7, 11, 22, 25, 26, 27, 28, 43, 46, 47, 48, 55, 62, 64, 65, 66, 71, 72, 73, 74, 75, 76, 87, 98, 99, 100, 104, 110, 115, 116, 127, 128, 130, 132, 138, 139, 172], "higher": [1, 8, 49, 52, 70, 75, 78, 100, 132, 136, 166], "two": [1, 2, 8, 9, 17, 28, 75, 97, 98, 99, 101, 102, 103, 104, 105, 115, 134, 142, 147, 149, 151, 170, 172], "infer": [1, 28, 124], "than": [1, 7, 8, 25, 28, 45, 46, 48, 49, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 99, 104, 115, 116, 127, 131, 132, 149, 166, 170, 171, 172], "relationship": 1, "strengthen": 1, "avail": [1, 7, 8, 18, 116, 172, 173], "one": [1, 2, 9, 18, 19, 24, 25, 27, 29, 30, 36, 42, 51, 54, 63, 66, 68, 73, 77, 82, 83, 90, 99, 100, 104, 115, 125, 127, 131, 132, 138, 140, 141, 144, 146, 149, 159, 164, 167, 169, 170, 171, 172], "subunit": 1, "just": [1, 9, 22, 116, 141], "By": [1, 29, 30, 99, 100, 104, 115, 169], "could": [1, 6, 7, 8, 24, 60], "addition": [1, 7, 17, 173], "dynam": [1, 17], "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16], "script": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14], "minut": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14], "207": [1, 4], "second": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 24, 25, 66, 97, 98, 99, 104, 110, 118, 149, 172], "sourc": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 22, 25, 32, 33, 34, 35, 36, 37, 38, 39, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 101, 102, 103, 105, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166], "plot_il2": [1, 4], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19], "jupyt": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14], "notebook": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14], "ipynb": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14], "galleri": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 19], "sphinx": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 19], "sphinx_gallery_thumbnail_numb": 2, "2": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 18, 19, 23, 25, 26, 28, 29, 30, 42, 43, 45, 46, 47, 48, 50, 51, 53, 55, 57, 62, 63, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 81, 83, 86, 87, 90, 97, 98, 99, 100, 104, 105, 107, 108, 114, 115, 116, 124, 128, 130, 131, 132, 144, 149, 151, 153, 157, 163, 164, 165, 167, 169, 170, 171, 172, 173], "parafac": [2, 3, 4, 6, 10, 11, 18, 24, 25, 62, 64, 65, 66, 71, 168, 169, 170], "extrem": 2, "reduct": [2, 27], "develop": [2, 18, 22, 23], "model": [2, 7, 9, 18, 25, 48, 62, 64, 66, 76, 118, 122, 123, 173], "compact": 2, "while": [2, 6, 7, 8, 19, 23, 24, 28, 34, 35, 45, 56, 59, 73, 115, 132, 167, 172], "retain": [2, 26, 43, 127, 130], "crucial": 2, "subject": [2, 50, 81], "biomed": 2, "research": [2, 22], "new": [2, 7, 17, 18, 23, 24, 27, 28, 29, 30, 42, 53, 90, 98, 99, 100, 104, 105, 108, 115, 116, 122, 123, 124, 128, 131, 132, 164, 165, 167, 169, 170], "technolog": 2, "examin": 2, "antibodi": 2, "patient": 2, "serum": 2, "comprehens": 2, "profil": 2, "fc": 2, "alongsid": 2, "other": [2, 6, 17, 18, 25, 26, 28, 32, 43, 57, 73, 98, 105, 114, 115, 116, 127, 130, 132, 167, 169, 170, 172], "immunolog": 2, "demograph": 2, "data": [2, 4, 7, 8, 9, 11, 13, 14, 24, 25, 28, 42, 50, 53, 66, 81, 90, 91, 99, 100, 104, 108, 115, 116, 122, 123, 124, 148, 164, 165, 169, 170, 173], "438": 2, "sampl": [2, 13, 14, 35, 45, 67, 80, 82, 114, 122, 123, 168, 173], "collect": 2, "were": [2, 42, 98, 116, 131, 170], "systemat": 2, "behavior": [2, 98, 99, 104], "sar": 2, "cov": 2, "viru": 2, "antigen": 2, "statu": 2, "detail": [2, 19, 27, 87, 99, 100, 104, 115, 128, 132, 138, 139, 172, 173], "depth": [2, 42], "implic": 2, "found": [2, 9, 48, 62, 64, 65, 71, 76], "hiv": 2, "predict": [2, 102, 103, 122, 123, 169, 173], "panel": 2, "tl": [2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 31, 45, 51, 52, 54, 55, 60, 63, 68, 77, 79, 83, 84, 86, 107, 133, 144, 147, 159, 160, 161, 162, 166, 167, 169, 171, 172], "data_import": 2, "load_covid19_serolog": 2, "cm": [2, 13, 14], "scalarmapp": 2, "comp": 2, "7": [2, 5, 9, 10, 11, 12, 13, 14, 17, 27, 28, 87, 97, 98, 99, 100, 104, 115, 132, 149, 163, 170, 171, 172], "cmtffac": 2, "cc": 2, "10": [2, 5, 6, 7, 8, 9, 12, 18, 23, 26, 29, 30, 47, 51, 53, 63, 65, 68, 71, 74, 77, 79, 83, 84, 97, 98, 99, 100, 104, 115, 124, 131, 132, 163, 167, 169, 170, 171, 172], "1000": [2, 8, 13, 14, 25, 66, 170], "linesearch": [2, 5, 48, 62, 76], "true": [2, 5, 6, 7, 8, 9, 25, 26, 27, 29, 30, 31, 35, 42, 43, 46, 47, 48, 49, 52, 53, 60, 62, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 78, 80, 82, 97, 98, 99, 100, 101, 104, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 127, 128, 130, 132, 133, 138, 139, 140, 141, 149, 155, 160, 161, 162, 163, 165, 166, 169, 170], "orthogonalis": [2, 48, 62, 76], "evalu": [2, 9, 27, 45, 149], "explain": [2, 9], "varianc": 2, "percent": 2, "reconstruct": [2, 3, 7, 9, 25, 46, 47, 48, 49, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 155, 166, 167, 172], "r2x": 2, "rang": [2, 6, 9, 12, 28, 33, 35, 38, 60, 131, 138, 149, 151], "def": [2, 3, 7, 8, 18, 19, 162, 167], "reconstructed_vari": 2, "tfac": 2, "tin": 2, "none": [2, 9, 25, 26, 27, 28, 29, 30, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 57, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 90, 93, 96, 98, 99, 100, 102, 103, 104, 107, 108, 114, 115, 117, 118, 119, 120, 121, 122, 123, 127, 130, 131, 132, 137, 138, 139, 141, 148, 151, 160, 161, 162, 164, 165, 166], "function": [2, 3, 6, 7, 8, 9, 18, 20, 22, 25, 26, 28, 40, 42, 46, 48, 49, 52, 53, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 87, 90, 97, 98, 99, 104, 110, 114, 116, 127, 128, 130, 132, 163, 166, 168, 169, 170, 171, 172], "calcul": [2, 5, 7, 8, 9, 26, 75, 115, 130], "captur": 2, "tmask": 2, "vtop": 2, "sum": [2, 6, 9, 25, 48, 50, 57, 62, 64, 66, 76, 81, 87, 98, 100, 149, 172], "squar": [2, 6, 7, 8, 25, 45, 48, 62, 64, 65, 66, 71, 73, 75, 76, 102, 103, 116, 128, 130], "cp_to_tensor": [2, 3, 5, 7, 48, 55, 62, 64, 76, 170, 172], "vbottom": 2, "return": [2, 3, 8, 19, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172], "fig1": 2, "figur": [2, 3, 5, 6, 7, 8, 9, 13, 14], "cmtfr2x": 2, "arrai": [2, 8, 9, 12, 25, 26, 27, 28, 29, 30, 37, 39, 42, 43, 45, 48, 49, 50, 52, 53, 54, 61, 62, 64, 65, 66, 71, 73, 75, 76, 78, 81, 87, 90, 93, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 132, 138, 140, 144, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171], "bo": 2, "number": [2, 8, 9, 22, 25, 26, 27, 28, 33, 34, 35, 36, 43, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 97, 100, 114, 116, 122, 123, 127, 130, 132, 138, 151, 165, 166, 167, 170, 172, 173], "gca": 2, "set_xlim": [2, 9], "amax": [2, 29, 30, 99, 104], "set_ylim": 2, "eventu": 2, "wish": [2, 9, 17, 87], "bring": 2, "case": [2, 7, 8, 24, 27, 28, 29, 30, 42, 56, 90, 97, 108, 115, 116, 124, 132, 141, 149, 160, 161, 162, 163, 164, 168, 169, 170, 172], "reveal": 2, "trend": 2, "level": [2, 17, 25, 46, 47, 48, 49, 50, 51, 52, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 122, 123, 166], "ensur": [2, 17, 18, 28, 53, 90, 108, 164], "neg": [2, 4, 6, 10, 11, 25, 27, 46, 47, 64, 65, 66, 70, 71, 72, 73, 74, 75, 90, 115, 130, 132, 149, 172], "most": [2, 6, 7, 8, 18, 98, 124], "direct": [2, 6, 7, 8, 9, 25, 65, 66, 71], "fig2": 2, "16": [2, 7, 9, 12, 98, 115, 170, 171, 172], "6": [2, 3, 6, 9, 10, 11, 12, 22, 25, 28, 29, 30, 42, 48, 62, 64, 65, 66, 71, 76, 87, 97, 99, 104, 116, 124, 131, 132, 149, 163, 165, 170, 171], "ii": [2, 5], "fac": [2, 5], "scale": [2, 13, 14, 97, 116], "linalg": [2, 9, 114, 116, 128, 170], "norm": [2, 5, 6, 9, 17, 25, 46, 47, 48, 55, 62, 64, 65, 66, 71, 72, 73, 74, 75, 76, 167], "ord": [2, 60], "inf": [2, 9, 130], "axi": [2, 9, 27, 29, 30, 42, 60, 98, 99, 100, 102, 103, 104, 107, 115, 124, 129, 131, 132, 149, 151, 171], "imshow": [2, 3, 13, 14, 26], "cmap": [2, 13, 14, 26], "piyg": 2, "vmin": 2, "vmax": 2, "set_ytick": 2, "set_yticklabel": 2, "i": [2, 6, 8, 9, 13, 14, 23, 25, 28, 35, 46, 47, 48, 49, 50, 52, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 90, 97, 109, 110, 111, 112, 113, 128, 137, 138, 149, 151, 161, 166, 168, 169, 170, 173], "els": [2, 48, 49, 50, 52, 60, 62, 64, 76, 78, 81, 127, 163, 166], "set_titl": [2, 3, 9, 13, 14], "set_aspect": 2, "auto": 2, "colorbar": 2, "object": [2, 9, 17, 18, 27, 28, 42, 53, 90, 108, 116, 124, 149, 164, 169, 170, 173], "0x7f07fdd28700": 2, "separ": [2, 9, 168], "distinct": [2, 170], "clear": [2, 53], "acut": 2, "respons": [2, 4, 11], "igg3": 2, "igm": 2, "iga": 2, "long": [2, 149], "term": [2, 6], "igg1": 2, "symptom": 2, "distinguish": 2, "indic": [2, 18, 24, 29, 30, 45, 47, 52, 70, 73, 74, 75, 82, 93, 94, 99, 104, 127, 166], "great": 2, "tool": 2, "find": [2, 6, 9, 45, 101, 173], "signific": [2, 132], "tan": 2, "z": [2, 27, 53], "c": [2, 7, 8, 9, 23, 25, 53, 66, 90, 97, 98, 108, 109, 110, 111, 112, 113, 124, 149, 163, 164, 165], "murphi": 2, "m": [2, 25, 53, 66, 75, 82, 90, 98, 100, 116, 128, 138, 139, 171], "alpai": 2, "h": [2, 25, 66, 116], "d": [2, 6, 42, 50, 51, 63, 65, 68, 71, 77, 81, 83, 87, 90, 97, 98, 114, 124, 132, 149, 151, 153, 154, 157, 158, 163, 172], "A": [2, 3, 6, 8, 9, 12, 17, 22, 25, 26, 27, 43, 45, 46, 48, 50, 53, 55, 62, 64, 65, 66, 67, 71, 72, 73, 75, 76, 79, 80, 81, 84, 98, 109, 110, 111, 112, 113, 114, 116, 118, 124, 127, 130, 138, 149, 151, 165, 167, 169, 170, 171, 172], "2021": 2, "improv": [2, 23, 132], "molecular": 2, "biologi": 2, "17": [2, 6, 7, 12, 99, 104, 115, 132, 165, 170, 171, 172], "e10243": 2, "http": [2, 7, 8, 22, 23, 116], "www": 2, "embopress": 2, "org": [2, 22, 116], "doi": 2, "15252": 2, "msb": 2, "202110243": 2, "_": [2, 6, 9, 25, 50, 66, 81, 131, 171], "zohar": 2, "loo": 2, "fisching": 2, "atyeo": 2, "wang": 2, "slein": 2, "g": [2, 8, 17, 18, 24, 27, 48, 52, 57, 62, 64, 65, 67, 70, 71, 75, 76, 80, 86, 93, 108, 128, 138, 139, 164, 166, 167, 169, 171, 172], "2020": 2, "compromis": 2, "humor": 2, "evolut": 2, "track": 2, "mortal": 2, "183": 2, "1508": 2, "1519": 2, "sciencedirect": 2, "com": [2, 23], "scienc": 2, "articl": [2, 7, 8, 22], "pii": 2, "s0092867420314598": 2, "867": [2, 4], "plot_covid": [2, 4], "tucker": [3, 9, 10, 11, 15, 47, 49, 74, 75, 78, 101, 121, 123, 159, 160, 161, 162, 167, 168, 169, 173], "misc": 3, "face": 3, "ndimag": 3, "zoom": 3, "math": [3, 132], "ceil": [3, 28], "12345": 3, "dtype": [3, 7, 8, 24, 26, 27, 28, 29, 30, 42, 43, 53, 89, 90, 91, 98, 99, 100, 104, 108, 115, 127, 130, 132, 148, 149, 164, 165, 167, 170], "float64": [3, 17, 24, 100, 108, 132, 164, 170], "to_imag": 3, "conveni": [3, 17, 18, 24, 93], "convert": [3, 19, 24, 27, 29, 30, 59, 160, 161, 162], "float": [3, 8, 25, 27, 28, 45, 46, 48, 49, 50, 52, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 84, 86, 89, 90, 91, 99, 100, 101, 102, 103, 104, 107, 116, 122, 123, 132, 137, 144, 145, 164, 165, 166, 170], "back": [3, 17, 39, 124, 171], "uint8": [3, 115], "im": 3, "to_numpi": [3, 13, 14], "min": [3, 18, 30, 116, 167], "max": [3, 29, 104, 144, 167, 169], "255": 3, "astyp": 3, "cp": [3, 4, 5, 9, 10, 11, 15, 18, 25, 46, 47, 48, 51, 54, 55, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 80, 83, 117, 122, 168, 169, 173], "cp_rank": 3, "tucker_rank": 3, "100": [3, 8, 13, 14, 25, 45, 46, 48, 49, 50, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 81, 97, 122, 123, 166, 170], "10e": [3, 13, 14, 50, 81, 172], "cp_reconstruct": 3, "core": [3, 8, 17, 22, 45, 47, 49, 52, 54, 55, 70, 74, 75, 78, 121, 123, 152, 156, 159, 160, 161, 162, 166, 169, 172], "tucker_factor": 3, "tucker_reconstruct": 3, "tucker_to_tensor": [3, 8, 172], "fig": [3, 5, 6, 7, 8, 9, 13, 14], "add_subplot": [3, 5, 13, 14], "set_axis_off": [3, 13, 14], "799": [3, 4, 46, 72], "plot_image_compress": [3, 4], "00": [4, 10, 15, 16, 172], "09": [4, 6], "873": 4, "execut": [4, 10, 15, 16, 17, 19, 22, 167, 169], "auto_examples_appl": 4, "file": [4, 10, 15, 16, 19], "covid": [4, 11], "19": [4, 6, 11, 12, 53, 65, 71, 100, 170, 171], "serolog": [4, 11], "analysi": [4, 11, 48, 62, 64, 76], "04": [4, 7, 15], "mb": [4, 10, 15, 16], "imag": [4, 11, 13, 14, 61, 127, 167, 173], "compress": [4, 11], "via": [4, 11, 17, 25, 26, 28, 43, 45, 48, 49, 50, 51, 52, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 80, 81, 83, 85, 90, 108, 116, 127, 130, 164, 166, 170], "decomposit": [4, 5, 9, 10, 18, 22, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 138, 139, 152, 156, 161, 162, 167, 168, 170, 171, 173], "02": [4, 6, 7, 10], "non": [4, 6, 10, 11, 23, 25, 27, 28, 46, 47, 48, 62, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 99, 100, 104, 115, 124, 130, 132, 149, 170, 172], "il": [4, 11], "acceler": [5, 7, 8], "converg": [5, 7, 8, 25, 45, 50, 66, 81, 122, 123], "random_cp": [5, 169], "logspac": 5, "err": [5, 9], "empty_lik": [5, 165], "err_l": 5, "tt": [5, 45, 69, 85, 86, 119, 120, 152, 153, 154, 156, 157, 158, 169, 172], "tt_l": 5, "1234": 5, "get": [5, 9, 18, 22, 89, 91, 167, 169], "high": [5, 8, 45, 73, 75, 172], "accuraci": [5, 45], "2000000": 5, "0e": 5, "15": [5, 7, 9, 12, 29, 30, 99, 100, 104, 115, 132, 170, 171], "err_min": 5, "toll": 5, "enumer": [5, 13, 14, 60], "start": [5, 9, 22, 23, 26, 28, 33, 35, 38, 114, 115, 132, 168, 171], "fals": [5, 25, 26, 27, 31, 35, 42, 43, 46, 47, 48, 49, 51, 52, 53, 54, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 99, 100, 104, 114, 115, 117, 118, 119, 120, 121, 125, 127, 129, 130, 132, 133, 138, 139, 140, 141, 146, 155, 159, 160, 161, 162, 163, 166, 170], "fit_transform": [5, 62, 63, 64, 65, 66, 167], "fac_l": 5, "error": [5, 7, 8, 9, 24, 25, 45, 46, 47, 48, 49, 50, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 98, 102, 103, 115, 124, 132, 166, 167, 169], "loglog": 5, "No": [5, 116], "r": [5, 9, 25, 48, 56, 57, 58, 59, 60, 62, 64, 66, 76, 109, 110, 111, 112, 113, 116, 138, 171, 172, 173], "set_ylabel": [5, 9], "set_xlabel": [5, 9], "078": [5, 10], "plot_cp_line_search": [5, 10], "On": [6, 45, 168], "you": [6, 9, 11, 17, 18, 19, 22, 23, 24, 55, 87, 99, 115, 116, 124, 132, 162, 167, 169, 170, 171, 172, 173], "sinc": [6, 7, 8, 9, 18, 25, 45, 66, 110], "version": [6, 7, 8, 9, 23, 25, 27, 28, 29, 30, 42, 53, 57, 66, 87, 90, 98, 99, 100, 104, 105, 108, 115, 116, 128, 130, 131, 132, 164, 165, 169, 170, 172], "penal": [6, 65, 71], "chosen": [6, 163], "user": [6, 7, 8, 18, 22, 24, 65, 71, 90, 167], "propos": [6, 8, 48, 62, 76], "implement": [6, 8, 17, 24, 25, 27, 28, 57, 98, 99, 100, 104, 115, 132, 138, 167, 168, 169, 170, 173], "altern": [6, 7, 8, 25, 27, 45, 48, 57, 62, 64, 65, 66, 71, 73, 76, 98, 99, 100, 104, 109, 110, 111, 112, 113, 115, 127, 132, 167], "optim": [6, 9, 22, 24, 65, 71, 101], "multipli": [6, 54, 60, 65, 71, 98, 115, 116, 140, 159], "ao": [6, 65, 71], "admm": [6, 65, 71], "solv": [6, 8, 50, 65, 71, 75, 81, 116, 170], "convex": 6, "problem": [6, 8, 50, 75, 81, 116, 172], "primal": 6, "dual": 6, "auxilliari": [6, 65, 71], "introduc": [6, 24, 65, 71, 98], "regular": [6, 65, 71, 169], "oper": [6, 11, 16, 17, 22, 98, 99, 104, 143, 144, 145, 169], "call": [6, 7, 8, 17, 18, 19, 28, 29, 30, 54, 65, 71, 98, 116, 124, 140, 159, 163, 167, 169, 171, 172], "proxim": 6, "chang": [6, 18, 24, 25, 43, 53, 66, 124, 125, 146, 155, 168, 169], "accord": [6, 7, 8, 65, 71], "select": [6, 99, 104, 115, 169, 170], "sever": [6, 7, 8, 19, 22, 24, 54, 140, 141, 159, 167, 169], "correspond": [6, 17, 29, 30, 42, 51, 63, 68, 77, 83, 99, 104, 138, 149, 151, 152, 156, 169, 173], "appli": [6, 18, 29, 30, 57, 65, 71, 103, 128, 143, 144, 145, 149, 170, 172], "non_neg": [6, 65, 70, 71], "signatur": [6, 17, 26, 43, 98, 127, 130], "prevent": 6, "l1": [6, 65, 71], "l1_reg": [6, 65, 71], "add": [6, 9, 18, 24, 132], "cost": [6, 73, 75], "promot": [6, 98], "sparsiti": [6, 48, 62, 64, 73, 75, 76], "choos": [6, 7, 9, 45, 163, 170], "l2": [6, 55, 65, 71], "l2_reg": [6, 48, 62, 65, 71, 76], "l2_square_reg": [6, 65, 71], "unimod": [6, 65, 71], "columnwis": [6, 75], "impos": [6, 25, 65, 66, 71, 73, 75, 173], "column": [6, 42, 45, 51, 56, 57, 58, 59, 63, 65, 68, 71, 73, 77, 82, 83, 90, 101, 108, 114, 116, 128, 138, 164], "local": [6, 9, 17, 65, 71], "maximum": [6, 25, 29, 45, 46, 47, 48, 49, 50, 52, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 85, 99, 104, 122, 123, 166], "gaussian": 6, "simplex": [6, 65, 71], "live": 6, "defin": [6, 17, 25, 28, 65, 66, 71, 75, 90, 108, 154, 158, 164, 165, 171], "radiu": 6, "entri": [6, 7, 8, 25, 45, 66, 109, 110, 111, 112, 113, 172], "nonneg": [6, 7, 8], "posit": [6, 27, 28, 46, 47, 67, 72, 73, 74, 75, 80, 90, 105, 114, 130], "paramet": [6, 9, 13, 14, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 173], "largest": [6, 114], "absolut": [6, 25, 26, 65, 66, 71, 101], "elementwis": 6, "normalized_spars": [6, 65, 71], "k": [6, 9, 25, 26, 43, 45, 53, 54, 58, 60, 66, 69, 85, 87, 90, 97, 98, 109, 110, 111, 112, 113, 116, 127, 128, 130, 138, 139, 140, 149, 152, 159, 165, 171], "spars": [6, 62, 64, 76, 78, 81, 114, 166, 168, 169], "nonzero": [6, 25, 66, 109, 110, 111, 112, 113, 163], "per": [6, 7, 8, 67, 80, 141, 144], "soft": [6, 144], "soft_spars": [6, 65, 71], "bound": [6, 65, 71], "threshold": [6, 8, 45, 65, 71, 143, 144, 145], "smooth": [6, 65, 71], "favor": 6, "fact": [6, 7, 18, 55, 58], "band": [6, 65, 71], "monoton": [6, 65, 71], "alwai": [6, 18, 116, 124, 132, 169, 171], "base": [6, 7, 13, 14, 17, 18, 19, 45, 53, 165, 171, 172], "isoton": 6, "regress": [6, 7, 8, 15, 22, 61, 168], "hard": [6, 65, 71], "hard_spars": [6, 65, 71], "requir": [6, 7, 17, 18, 130, 167, 170], "boolean": [6, 27, 47, 48, 49, 50, 52, 62, 64, 69, 70, 73, 74, 75, 76, 78, 81, 85, 166, 170], "enough": [6, 98], "11": [6, 12, 29, 30, 100, 105, 163, 170, 171], "support": [6, 9, 17, 18, 22, 24, 28, 50, 81, 90, 108, 164, 167, 169, 170], "constrained_parafac": 6, "set_printopt": 6, "precis": [6, 25, 28, 66, 73, 75, 100, 115, 132], "rand": 6, "itself": [6, 170], "tenalg": [6, 19, 60, 169], "validate_constraint": 6, "process": [6, 7, 8, 65, 71, 173], "If": [6, 9, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42, 43, 48, 53, 62, 64, 65, 66, 71, 73, 75, 76, 82, 87, 90, 97, 98, 99, 100, 104, 107, 108, 114, 115, 116, 124, 125, 127, 128, 130, 131, 132, 133, 138, 139, 140, 141, 144, 146, 149, 151, 163, 164, 165, 167], "want": [6, 18, 19, 23, 24, 124, 167, 169, 173], "same": [6, 7, 8, 9, 25, 27, 29, 30, 42, 43, 45, 47, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 62, 64, 66, 69, 70, 74, 75, 76, 78, 79, 81, 82, 84, 85, 86, 97, 98, 99, 100, 104, 105, 109, 110, 111, 112, 113, 115, 116, 121, 124, 130, 131, 132, 138, 143, 149, 162, 165, 166, 167, 169, 170, 172], "bool": [6, 25, 27, 29, 30, 31, 35, 48, 51, 53, 62, 63, 64, 65, 66, 68, 70, 71, 76, 77, 79, 80, 82, 83, 84, 99, 100, 101, 104, 114, 115, 117, 118, 119, 120, 121, 125, 132, 133, 138, 139, 140, 141, 146, 155, 160, 161, 162, 163, 165], "should": [6, 8, 17, 18, 19, 24, 28, 29, 30, 47, 48, 49, 50, 52, 57, 62, 64, 70, 73, 74, 75, 76, 78, 81, 86, 90, 94, 105, 116, 124, 141, 149, 155, 160, 161, 162, 163, 166, 167, 169, 170], "assum": [6, 97, 141, 167], "doe": [6, 9, 27, 28, 98, 99, 100, 104, 115, 116, 132, 170], "write": [6, 20, 22, 23, 24, 58, 87, 124, 167, 169], "loc": [6, 7, 8, 9, 13, 14], "upper": [6, 7, 8, 9, 87, 90, 116], "left": [6, 7, 9, 25, 27, 29, 30, 45, 66, 99, 100, 104, 114, 115, 132, 138, 139, 171], "similarli": [6, 19, 167], "05": [6, 15], "coeffici": [6, 7, 9, 73, 75, 101, 128, 172], "induc": 6, "larg": [6, 28, 132, 170], "histogram": 6, "hist": 6, "flatten": [6, 29, 30, 35, 42, 87, 99, 100, 104], "As": [6, 7, 8, 18, 172], "option": [6, 7, 8, 19, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 42, 43, 46, 47, 48, 49, 50, 52, 53, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 85, 87, 90, 98, 99, 100, 104, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 130, 131, 132, 133, 138, 139, 141, 146, 151, 160, 161, 162, 164, 165, 166], "dictionari": [6, 17, 65, 71, 122, 123, 167], "n": [6, 7, 8, 9, 12, 14, 24, 25, 28, 29, 30, 32, 48, 50, 52, 54, 60, 62, 64, 65, 66, 70, 71, 75, 76, 81, 90, 97, 98, 116, 138, 139, 140, 141, 149, 151, 159, 166, 169, 171, 172, 173], "51": [6, 48, 52, 62, 64, 65, 70, 71, 75, 76, 138, 139, 166, 171, 172], "64": [6, 65, 71], "36": [6, 7], "27": 6, "06": [6, 46, 50, 65, 71, 72, 81, 122, 123], "42": 6, "54": [6, 45], "37": 6, "58": [6, 7], "23": [6, 12, 170, 171], "49": [6, 7, 10, 45], "48": 6, "07": [6, 7, 10, 64, 73], "35": 6, "89": [6, 7], "85": 6, "08": [6, 25, 48, 62, 65, 66, 67, 71, 75, 76, 80], "44": 6, "63": 6, "28": [6, 9, 10], "95": 6, "32": [6, 115], "87": 6, "26": [6, 22], "78": [6, 7], "29": [6, 45], "62": 6, "last": [6, 8, 27, 28, 34, 46, 48, 62, 64, 65, 71, 72, 76, 86, 98, 109, 110, 115, 124, 131, 132, 137, 149, 167, 171], "One": [6, 7, 8, 19, 124, 172], "prefer": [6, 28, 53, 163], "possibl": [6, 18, 19, 26, 43, 53, 57, 116, 124, 127, 130, 132, 151, 165, 167], "01": [6, 7, 15], "03": [6, 7, 10], "kei": [6, 17], "90": [6, 163], "84": 6, "34": 6, "81": 6, "18": [6, 7, 12, 22, 170, 171], "79": [6, 19, 45], "59": 6, "73": 6, "83": 6, "144": 6, "82": 6, "69": 6, "31": 6, "74": [6, 7, 45], "55": 6, "39": 6, "66": 6, "38": 6, "41": 6, "43": 6, "57": 6, "l_1": 6, "l_2": 6, "huang": [6, 65, 71], "kejun": [6, 65, 71], "nichola": [6, 65, 71], "sidiropoulo": [6, 65, 71], "athanasio": [6, 65, 71], "p": [6, 65, 71, 109, 110, 116, 151], "liava": [6, 65, 71], "effici": [6, 65, 71], "matrix": [6, 7, 8, 9, 24, 25, 36, 45, 48, 54, 57, 62, 64, 65, 66, 71, 76, 82, 86, 98, 109, 110, 111, 112, 113, 114, 116, 118, 120, 128, 136, 138, 139, 140, 141, 143, 145, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 168, 169, 171], "ieee": [6, 47, 65, 71, 74, 173], "transact": [6, 65, 71, 173], "2016": [6, 65, 71], "5052": [6, 65, 71], "5065": [6, 65, 71], "onlin": [6, 9], "734": [6, 10], "plot_guide_for_constrained_cp": [6, 10], "comput": [7, 8, 18, 24, 25, 46, 47, 48, 49, 52, 57, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 85, 97, 99, 100, 101, 104, 107, 109, 110, 111, 112, 113, 114, 116, 128, 136, 149, 153, 157, 166, 167, 172], "ncp": 7, "updat": [7, 8, 18, 23, 45, 46, 47, 57, 65, 70, 71, 72, 73, 74, 75, 93, 94], "mu": [7, 8, 50, 81], "alreadi": [7, 8, 17, 18, 22, 31, 133, 167], "least": [7, 8, 25, 45, 48, 62, 64, 66, 73, 75, 76, 99, 104, 116, 128, 167], "al": [7, 8, 9, 25, 48, 62, 64, 66, 67, 73, 76, 80], "hierarch": [7, 8, 73], "constraint": [7, 8, 9, 25, 65, 66, 71, 73, 109, 110, 111, 112, 113], "handl": [7, 8, 9, 28, 98, 130, 167, 169, 170], "expect": [7, 8, 9, 18, 19, 27, 42, 99, 100, 104, 115, 132], "after": [7, 8, 9, 19, 65, 71, 98, 172], "obtain": [7, 8, 17, 43, 79, 84, 162, 171, 172, 173], "non_negative_parafac_h": 7, "_nn_cp": 7, "initialize_nn_cp": 7, "cptensor": [7, 25, 48, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 71, 76], "copi": [7, 54, 87, 124, 159], "deepcopi": [7, 53], "There": [7, 8, 24, 57, 127, 167, 169], "wai": [7, 8, 17, 18, 24, 48, 62, 64, 76, 98, 149, 167, 169, 171, 172], "chose": [7, 8], "integ": [7, 8, 25, 28, 66, 73, 75, 100, 115, 124, 132], "24000": 7, "reshap": [7, 9, 12, 29, 30, 45, 86, 87, 97, 98, 99, 104, 149, 151, 165, 167, 170, 171], "30": [7, 8, 9, 10], "40": [7, 8, 9, 28], "20": [7, 9, 12, 19, 22, 27, 28, 42, 61, 67, 80, 90, 97, 100, 108, 124, 164, 170, 171], "float32": [7, 24, 100, 132, 167], "goal": [7, 167], "produc": [7, 28], "approxim": [7, 8, 45, 48, 62, 64, 73, 75, 76, 169, 172], "abov": [7, 19, 25, 66, 87, 100, 109, 110, 111, 112, 113, 115, 116, 130, 170], "low": [7, 8, 50, 81, 122, 123, 169], "befor": [7, 19, 27, 32, 42, 99, 100, 101, 104, 115, 132, 170, 172], "good": 7, "initi": [7, 9, 25, 45, 46, 48, 49, 50, 51, 62, 63, 64, 65, 66, 68, 71, 72, 76, 77, 78, 79, 81, 83, 84, 99, 104, 115, 124, 132, 167], "guess": 7, "compar": [7, 8, 99, 104], "fair": 7, "idea": [7, 60, 172], "initialize_cp": 7, "transform": 7, "instanc": [7, 9, 18, 19, 24, 28, 35, 40, 91, 167, 169, 170, 171, 173], "class": [7, 19, 20, 22, 27, 53, 62, 63, 64, 65, 66, 67, 68, 69, 70, 90, 93, 99, 100, 104, 115, 122, 123, 125, 132, 146, 165], "weights_init": 7, "factors_init": 7, "cp_init": 7, "let": [7, 18, 22, 116, 124, 167, 169, 171, 172], "tic": [7, 8], "tensor_mu": [7, 8], "errors_mu": 7, "return_error": [7, 8, 9, 18, 25, 46, 47, 48, 52, 62, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 80, 166], "cp_reconstruction_mu": 7, "time_mu": [7, 8], "output": [7, 8, 9, 26, 27, 28, 43, 90, 99, 100, 104, 115, 124, 127, 130, 132, 149], "input": [7, 8, 18, 25, 26, 27, 28, 29, 30, 42, 43, 50, 51, 53, 62, 63, 64, 65, 66, 71, 77, 79, 81, 83, 84, 86, 87, 98, 99, 100, 104, 105, 108, 115, 116, 127, 130, 131, 132, 149, 151, 164, 165, 167, 170], "inde": 7, "quit": 7, "coars": 7, "8095": 7, "8304": 7, "8090": 7, "8246": 7, "8892": 7, "9046": 7, "8932": 7, "68": 7, "9027": 7, "8210": 7, "8211": 7, "8230": 7, "8231": 7, "9010": 7, "9011": 7, "9030": 7, "9031": 7, "tensor_h": 7, "errors_h": 7, "cp_reconstruction_h": 7, "time_h": 7, "again": 7, "8245": 7, "8270": 7, "8219": 7, "33": [7, 69, 85], "9041": 7, "9065": 7, "9020": 7, "53": 7, "huge": 7, "gap": 7, "solut": [7, 8, 73, 75, 128], "subproblem": 7, "rather": [7, 28, 45], "faster": [7, 8, 45, 60, 99, 104], "note": [7, 17, 18, 19, 24, 25, 26, 27, 29, 30, 31, 40, 42, 43, 45, 48, 49, 50, 52, 53, 55, 57, 58, 60, 62, 64, 66, 75, 76, 78, 81, 86, 97, 98, 99, 100, 104, 115, 116, 124, 127, 128, 130, 132, 133, 138, 139, 141, 149, 151, 160, 161, 162, 163, 166, 169, 170, 172], "overal": 7, "still": [7, 23, 169], "need": [7, 8, 17, 18, 23, 24, 45, 73, 163, 167, 169, 170], "longer": [7, 8, 19, 170], "reach": 7, "subroutin": [7, 75], "simpli": [7, 12, 23, 116, 167, 169], "tensorhals_exact": 7, "errors_exact": 7, "cp_reconstruction_exact_h": 7, "time_exact_h": 7, "str": [7, 8, 25, 42, 46, 48, 49, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 92, 125, 135, 146, 166], "2f": [7, 8], "21": [7, 12, 170, 171, 173], "169": 7, "take": [7, 18, 60, 101, 124, 137, 149, 167, 169, 170, 171, 173], "much": [7, 8, 28, 75, 155, 162, 170], "gain": 7, "often": [7, 9, 28, 132], "void": 7, "recommend": [7, 8, 19], "avoid": [7, 9, 170], "unless": [7, 27, 115, 132], "applic": [7, 24, 45, 46, 48, 52, 62, 64, 65, 70, 71, 72, 75, 76, 128, 138, 139, 166, 171, 172], "appear": [7, 8, 19], "similar": [7, 8, 9, 53, 101, 116, 128], "runtim": [7, 45], "howev": [7, 8, 9, 24, 27, 99, 100, 104, 115, 116, 132, 167, 170, 171], "closer": 7, "suggest": 7, "behav": [7, 163], "tell": 7, "stori": 7, "better": [7, 8, 18, 24, 28, 132, 170, 171], "root": [7, 8, 103, 130], "rmse": [7, 8], "metric": [7, 8, 168], "217": 7, "11884": 7, "411114": 7, "9103311": 7, "lower": [7, 8, 87, 90, 132], "appreci": [7, 8], "speed": [7, 8, 132], "iter": [7, 8, 9, 25, 45, 46, 47, 48, 49, 50, 51, 52, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 99, 104, 122, 123, 166], "each_iter": [7, 8], "b": [7, 8, 9, 25, 26, 29, 30, 42, 48, 52, 53, 55, 62, 64, 65, 66, 70, 71, 75, 76, 88, 97, 98, 99, 104, 109, 110, 111, 112, 113, 116, 124, 128, 131, 138, 139, 149, 166, 171, 172], "set_size_inch": [7, 8], "get_figheight": [7, 8], "forward": [7, 8, 18], "conclus": [7, 8], "quick": [7, 8, 168], "test": [7, 8, 12, 13, 14, 20, 22, 24, 27, 61, 169, 170, 173], "give": [7, 8, 18, 73, 75, 124, 151, 170], "default": [7, 8, 17, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 38, 40, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 99, 100, 104, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 130, 132, 133, 137, 138, 139, 140, 141, 146, 149, 151, 155, 160, 161, 162, 164, 165, 166, 167, 169], "resort": [7, 8], "encount": [7, 8], "expert": [7, 8], "gilli": [7, 8], "glineur": [7, 8], "2012": [7, 8, 173], "neural": [7, 8], "24": [7, 8, 12, 29, 30, 45, 97, 115, 149, 170, 171], "1085": [7, 8], "1105": [7, 8], "link": [7, 8], "mit": [7, 8], "edu": [7, 8], "neco": [7, 8], "7755": [7, 8], "471": [7, 10], "plot_nn_cp_hal": [7, 10], "e": [8, 17, 18, 23, 24, 27, 50, 56, 57, 59, 65, 71, 79, 81, 82, 84, 86, 93, 108, 128, 137, 138, 161, 164, 167, 169, 170], "min_": [8, 50, 75, 81], "geq": 8, "t_": 8, "g_": 8, "_f": [8, 9], "ith": 8, "mode": [8, 9, 12, 23, 24, 25, 32, 33, 35, 38, 46, 47, 48, 49, 52, 54, 57, 58, 59, 60, 62, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 109, 110, 112, 116, 121, 123, 137, 140, 141, 147, 153, 157, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172], "unfold": [8, 12, 19, 32, 33, 35, 57, 58, 59, 60, 112, 153, 157, 161, 167, 168, 169, 170], "vector": [8, 9, 54, 57, 59, 98, 101, 113, 114, 140, 141, 154, 158, 159, 160, 161, 162, 169, 170, 172, 173], "AS": 8, "fast": [8, 22, 45, 114, 132], "shrinkag": [8, 144], "gradient": [8, 75], "unconstrain": 8, "wide": 8, "lawson": 8, "hanson": 8, "1974": 8, "non_negative_tuck": [8, 169, 172], "non_negative_tucker_h": 8, "randint": 8, "size": [8, 9, 13, 14, 27, 28, 29, 30, 42, 47, 49, 51, 52, 63, 68, 70, 74, 75, 77, 78, 83, 84, 86, 98, 99, 100, 104, 110, 115, 116, 131, 132, 136, 138, 139, 149, 166, 169, 171, 172], "error_mu": 8, "tucker_reconstruction_mu": 8, "ticnew": 8, "tensor_hals_fista": 8, "error_fista": 8, "tucker_reconstruction_fista": 8, "time_fista": 8, "tensor_hals_a": 8, "error_a": 8, "active_set": [8, 75], "tucker_reconstruction_a": 8, "time_a": 8, "nntucker": 8, "52": 8, "47": 8, "glanc": 8, "complex": [8, 26, 43, 98, 116, 127, 130, 140, 141], "285": 8, "4104505342278": 8, "278": 8, "2815554826258": 8, "13348984568523": 8, "besid": [8, 45], "experi": [8, 13, 14, 23], "veri": [8, 24, 53, 167], "179": [8, 10], "plot_nn_tuck": [8, 10], "la": 9, "linear_sum_assign": 9, "inx": 9, "kier": [9, 25, 66], "et": 9, "1999": [9, 25, 66], "mathcal": 9, "mathbb": [9, 171], "j": [9, 13, 14, 25, 43, 54, 66, 69, 75, 85, 97, 130, 138, 140, 149, 159, 171], "shift": 9, "form": [9, 25, 66, 109, 110, 111, 112, 113, 168, 169], "ijk": [9, 25, 66, 109, 110, 111, 112, 113], "sum_": [9, 25, 50, 66, 81, 109, 110, 111, 112, 113, 171, 172], "a_": [9, 25, 50, 66, 81, 109, 110, 111, 112, 113], "ir": [9, 25, 66, 109, 110, 111, 112, 113], "b_": [9, 25, 66, 109, 110, 111, 112, 113], "sigma_i": 9, "c_": [9, 25, 66, 109, 110, 111, 112, 113], "kr": [9, 17, 25, 66, 109, 110, 111, 112, 113], "cyclic": 9, "permut": [9, 101, 105, 151], "element": [9, 19, 25, 26, 27, 28, 29, 30, 43, 46, 47, 48, 52, 53, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 80, 90, 97, 98, 99, 100, 104, 109, 110, 111, 112, 113, 115, 118, 124, 127, 130, 132, 144, 149, 163, 166, 171], "true_rank": 9, "noise_r": 9, "seed": [9, 40, 82], "matric": [9, 25, 56, 57, 58, 59, 60, 66, 82, 96, 98, 101, 109, 110, 111, 112, 113, 116, 138, 139, 141, 160, 161, 162, 170, 172], "a_factor_matrix": 9, "uniform": [9, 24, 167], "b_factor_matrix": 9, "c_factor_matrix": 9, "normalis": [9, 56], "a_normalis": 9, "b_normalis": 9, "c_normalis": 9, "b_factor_matric": 9, "roll": 9, "bs_normalis": 9, "construct": [9, 87, 111, 112, 113, 170], "einsum": [9, 24, 60, 98, 138, 149, 169], "ijr": [9, 25, 66, 109, 110, 111, 112, 113], "nois": [9, 25, 66], "standard_norm": 9, "minima": [9, 104], "initialis": 9, "lowest": 9, "best_err": 9, "train": [9, 45, 69, 85, 155, 157, 168, 169], "trial_decomposit": 9, "trial_err": 9, "500": [9, 48, 52, 62, 64, 65, 70, 71, 75, 76, 97, 138, 139, 166, 171, 172], "best": [9, 79, 84, 116, 128, 132], "09204720575424472": 9, "09204726856012718": 9, "09269711804187236": 9, "392": 9, "09204692795621945": 9, "415": 9, "09204692959223094": 9, "09291065541285955": 9, "364": 9, "09204692769766268": 9, "424": 9, "09204692883956123": 9, "481": 9, "09204693125447479": 9, "09205635789758466": 9, "wrapper": [9, 20, 24, 167], "variabl": [9, 17, 18, 19, 75, 128, 170], "somewhat": 9, "b_i": [9, 25, 66, 109, 110, 111, 112, 113], "p_i": [9, 25, 66, 109, 110, 111, 112, 113], "cannot": [9, 18, 25, 42, 46, 48, 62, 64, 65, 66, 71, 72, 76], "store": [9, 26, 43, 90, 98, 108, 127, 130, 164], "instead": [9, 18, 24, 27, 42, 98, 99, 100, 104, 110, 115, 132, 169, 170, 171], "along": [9, 27, 29, 30, 42, 49, 78, 87, 99, 100, 104, 109, 110, 115, 116, 131, 132, 149, 153, 157, 171], "blueprint": 9, "third": [9, 17, 25, 42, 61, 66, 149, 172], "tupl": [9, 26, 27, 29, 30, 32, 33, 36, 39, 43, 60, 82, 86, 97, 99, 100, 104, 107, 115, 117, 118, 119, 120, 121, 124, 127, 130, 132, 147, 151, 164], "extract": [9, 87], "inform": [9, 24, 28, 91, 116, 169, 172], "parafac2_tensor": [9, 169], "apply_projection_matric": 9, "anoth": [9, 18, 24, 28, 101, 170], "frontal": [9, 25, 66, 109, 110, 111, 112, 113, 171], "slice": [9, 25, 60, 66, 99, 104, 109, 110, 111, 112, 113, 171], "likewis": 9, "parafac2_to_tensor": [9, 110], "consist": [9, 19, 27, 130, 149, 171], "uneven": [9, 111, 112, 113], "length": [9, 26, 28, 43, 51, 56, 63, 68, 73, 77, 82, 83, 99, 104, 124, 127, 130, 138, 141, 149, 161, 162], "parafac2_to_slic": 9, "est_tensor": 9, "est_weight": 9, "est_a": 9, "est_b": 9, "est_c": 9, "apply_parafac2_project": 9, "reconstruction_error": 9, "recovery_r": 9, "recov": [9, 172], "congruenc": [9, 101], "est_projected_b": 9, "sign": [9, 43, 114, 115, 132, 144], "ab": [9, 25, 66, 144], "newaxi": [9, 26], "est_a_normalis": 9, "est_bs_normalis": 9, "est_c_normalis": 9, "b_corr": 9, "a_corr": 9, "c_corr": 9, "corr": 9, "old": [9, 116], "maximis": 9, "v1": 9, "pass": [9, 17, 18, 19, 27, 28, 31, 48, 53, 76, 90, 98, 99, 100, 104, 108, 115, 116, 132, 133, 164, 170], "maxim": [9, 29, 50, 81], "congruence_coeffici": 9, "averag": [9, 100, 132], "91": 9, "9947046512423605": 9, "estim": [9, 13, 14, 79, 84, 102, 103, 173], "argmax": [9, 30, 99], "what": [9, 17, 23, 42, 87, 116, 131], "flip": [9, 114], "a_sign": 9, "correct": [9, 17, 18, 28, 42, 102, 103, 128, 131, 167], "entir": [9, 31, 133], "get_legend_handles_label": 9, "center": 9, "ncol": 9, "0x7f080738d730": 9, "interest": 9, "loss": [9, 28], "sure": [9, 18], "stationari": 9, "point": [9, 17, 28, 89, 91, 100, 116, 132], "skip": [9, 33, 36, 60, 82, 138, 139, 141, 160, 161, 162], "domin": 9, "rest": [9, 163, 167], "difficult": 9, "loss_fig": 9, "loss_ax": 9, "rel": [9, 25, 48, 62, 64, 65, 66, 71, 76], "mathematical_expression_of_loss": 9, "frac": [9, 101], "hat": [9, 25, 66], "xtick": 9, "get_xtick": 9, "ten": [9, 25, 66], "berg": [9, 25, 66], "jm": 9, "bro": [9, 25, 48, 62, 64, 66, 76], "part": [9, 19, 23, 25, 43, 50, 66, 81], "journal": [9, 22], "chemometr": [9, 25, 48, 62, 64, 66, 76], "societi": 9, "275": [9, 25, 66], "94": 9, "263": [9, 10], "plot_parafac2": [9, 10], "725": 10, "auto_examples_decomposit": 10, "demonstr": [10, 11, 172], "parafac2": [10, 11, 109, 110, 111, 112, 113, 118], "line": [10, 11, 19, 48, 62, 76], "search": [10, 11, 48, 62, 76], "constrain": [10, 11, 25, 65, 66, 71], "usag": [11, 17, 22, 93, 168], "basic": [11, 16, 144, 168, 169], "auto_examples_python": 11, "zip": [11, 163], "auto_examples_jupyt": 11, "assert_array_equ": 12, "14": [12, 29, 30, 90, 100, 170, 171], "22": [12, 29, 30, 128, 170, 171], "ndim": [12, 33, 35, 38, 47, 49, 52, 60, 70, 74, 75, 78, 86, 97, 99, 104, 137, 141, 151, 160, 161, 162, 166], "re": [12, 29, 30, 33, 42, 60, 152, 156], "fold": [12, 17, 33, 39, 168, 169], "006": [12, 16], "plot_tensor": [12, 16], "cp_regress": 13, "cpregressor": 13, "tensor_to_vec": [13, 14, 162], "partial_tensor_to_vec": [13, 14], "synthet": [13, 14, 24], "gen_imag": [13, 14], "image_height": [13, 14, 61], "image_width": [13, 14, 61], "rectangl": [13, 14, 61], "swiss": [13, 14, 61, 172], "circl": [13, 14], "rng": [13, 14], "check_random_st": [13, 14], "deduc": [13, 14], "n_row": [13, 14, 138, 139], "n_column": [13, 14, 138, 139], "weight_img": [13, 14], "region": [13, 14, 61], "y": [13, 14, 43, 53, 98, 116, 122, 123, 127, 130, 163, 164, 165, 173], "dot": [13, 14, 58, 60, 98, 114, 116, 128, 149, 162, 169], "skip_begin": [13, 14, 33, 34, 35, 36], "orrd": [13, 14], "interpol": [13, 14], "nearest": [13, 14], "nweight": [13, 14], "regressor": [13, 14], "weight_rank": [13, 14, 122, 123], "reg_w": [13, 14, 122, 123], "verbos": [13, 14, 25, 46, 47, 48, 49, 50, 51, 52, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 122, 123, 166], "fit": [13, 14, 18, 25, 66, 67, 80, 122, 123, 167, 169, 173], "weight_tensor_": [13, 14], "nrank": [13, 14], "suptitl": [13, 14], "353": [13, 15], "plot_cp_regress": [13, 15], "tucker_regress": 14, "tuckerregressor": 14, "079": [14, 15], "plot_tucker_regress": [14, 15], "433": 15, "auto_examples_regress": 15, "auto_exampl": 16, "switch": [17, 24, 169], "thread": [17, 31, 125, 133, 146], "current": [17, 24, 48, 62, 64, 65, 71, 73, 76, 92, 116, 135, 167, 169, 170], "being": [17, 28, 170], "get_backend": [17, 18], "global": [17, 31, 40, 48, 62, 64, 76, 133], "set_backend": [17, 31, 133, 167, 169], "enabl": [17, 22, 24], "parti": 17, "packag": [17, 23, 170], "dask": 17, "parallel": 17, "over": [17, 24, 25, 26, 27, 43, 57, 66, 98, 99, 100, 104, 115, 116, 127, 130, 132, 141, 149, 172], "inherit": 17, "spawn": 17, "typic": [17, 19], "main": [17, 45, 87, 90, 167], "context": [17, 20, 31, 117, 118, 119, 120, 121, 133, 168], "manag": [17, 31, 133], "backend_context": 17, "whcih": 17, "safe": [17, 42, 170], "limit": [17, 91, 132], "approach": [17, 132], "librari": [17, 19, 24, 167], "matter": 17, "transpos": [17, 60, 105, 116, 124, 140, 141, 160, 161, 162, 169], "clip": [17, 65, 71], "etc": [17, 18, 24, 167, 169], "staticmethod": 17, "common": [17, 97, 116, 127, 130, 149, 169], "api": [17, 22, 167, 169], "some": [17, 19, 24, 25, 28, 66, 116, 163, 170, 172], "kron": 17, "partial_svd": [17, 18, 167], "subclass": [17, 116, 163], "logic": [17, 27], "__init__": [17, 167], "cach": 17, "maintain": [17, 22, 116], "_loaded_backend": 17, "actual": [17, 28, 86, 170], "modul": [17, 20, 24, 42, 167, 169, 173], "_backend": 17, "importlib": 17, "register_backend": 17, "onc": [17, 22, 167], "grab": 17, "intern": [17, 28, 46, 72], "_state": 17, "storag": [17, 172], "farm": 17, "mechan": 17, "wrap": [17, 18], "docstr": [17, 18, 20], "minutia": 17, "themselv": 17, "certain": 17, "properti": [17, 116, 167], "descriptor": 17, "int32": [17, 28, 132], "tf": 17, "compat": [17, 20, 23, 28, 90, 108, 116, 124, 164], "varaibl": 17, "override_module_dispatch": 17, "done": [17, 23, 60, 167, 171], "_getattr__": 17, "__dir__": 17, "pep": [17, 98], "562": 17, "overwrit": 17, "sy": 17, "module_nam": 17, "__class__": 17, "custom": [17, 164], "moduletyp": 17, "overrridden": 17, "__getitem__": 17, "welcom": 18, "cool": 18, "spot": 18, "bug": 18, "even": [18, 24, 115, 170], "typo": 18, "mistak": 18, "document": [18, 20, 22, 87, 128, 151, 163], "pleas": [18, 22, 99, 104, 173], "report": 18, "open": [18, 22, 28], "pull": 18, "request": 18, "relev": 18, "issu": [18, 22, 28, 100], "talk": 18, "gitter": 18, "fix": [18, 24, 46, 48, 52, 56, 57, 58, 59, 62, 64, 65, 70, 71, 72, 73, 76, 166, 171], "repositori": 18, "help": 18, "unit": [18, 56], "especi": [18, 100, 132, 167], "refactor": 18, "exis": 18, "broken": 18, "exist": [18, 42, 131], "don": [18, 99, 104], "hesit": 18, "contact": 18, "unsur": 18, "transpar": [18, 24, 167, 169], "never": 18, "directli": [18, 23, 24, 45, 48, 76, 82, 132, 138, 163], "torch": [18, 22, 169], "doesn": [18, 45], "try": [18, 165], "ones": [18, 25, 48, 62, 64, 66, 76, 90, 97, 98, 132, 151, 164, 165, 169, 170, 172], "otherwis": [18, 25, 29, 30, 48, 53, 62, 64, 66, 70, 76, 86, 100, 117, 118, 119, 120, 121, 124, 137, 163, 165], "statement": 18, "your": [18, 19, 22, 23, 24, 86, 167, 169], "min_valu": [18, 167], "NOT": 18, "reason": 18, "restrict": 18, "might": [18, 28, 110, 167, 169], "ndarrai": [18, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 87, 90, 97, 98, 99, 100, 104, 105, 108, 109, 110, 111, 112, 113, 115, 116, 122, 123, 124, 127, 128, 130, 131, 132, 139, 140, 141, 143, 144, 145, 149, 151, 152, 156, 159, 163, 164, 165, 166, 167], "fail": [18, 116, 130], "aspect": 18, "new_tensor": [18, 167], "express": [18, 25, 60, 66, 109, 110, 111, 112, 113, 171, 172], "unfortun": 18, "index_upd": [18, 24, 93], "previou": [18, 48, 62, 64, 65, 71, 73, 76, 116], "becom": [18, 31, 57, 75, 132, 133], "becaus": [18, 25, 27, 28, 116, 169, 170], "orient": 18, "automat": [18, 19, 170], "util": [18, 22, 24, 169], "assert_class_wrapper_correctly_passes_argu": 18, "keyword": [18, 26, 43, 98, 100, 124, 127, 130, 151], "argument": [18, 26, 28, 42, 43, 53, 90, 98, 99, 100, 104, 108, 127, 130, 131, 149, 151, 163, 164, 167], "test_cp": 18, "monkeypatch": 18, "ignore_arg": 18, "except": [18, 27, 28, 42, 61, 90, 99, 100, 104, 115, 116, 132, 172], "notic": [18, 19, 99, 104], "pytest": [18, 23], "know": 18, "plan": 18, "purpos": [18, 24], "essenti": 18, "behind": 18, "scene": 18, "inspect": 18, "down": 18, "Then": [18, 23, 75, 138, 139], "mock": 18, "word": [18, 28, 32, 167], "temporarili": 18, "replac": 18, "assert": 18, "everi": [18, 132, 138, 139], "placehold": 18, "send": [18, 167], "reset": 18, "behaviour": [18, 28], "crutial": 19, "cover": [19, 163], "syntax": 19, "restructuredtext": 19, "rst": 19, "come": [19, 23], "style": [19, 20, 90, 108, 164], "arg": 19, "descript": [19, 169], "space": [19, 28], "colon": 19, "text": [19, 25, 50, 66, 81, 138, 139, 140, 141, 171], "explan": [19, 116, 173], "singl": [19, 25, 27, 66, 79, 84, 99, 100, 104, 109, 115, 132, 149], "backtick": 19, "doubl": [19, 116, 149], "inlin": 19, "block": [19, 42, 97, 131], "leav": [19, 33, 34, 35, 36], "white": 19, "indent": 19, "said": [19, 171], "mod": 19, "algebra": [19, 22, 128, 168], "func": 19, "hierarchi": 19, "determin": [19, 99, 104, 116, 128], "tabl": 19, "content": 19, "rubric": 19, "locat": [19, 26, 43, 98, 127, 130, 169], "everytim": 19, "short": [19, 23, 167, 169], "plot_xyz": 19, "remaind": 19, "comment": 19, "below": [19, 25, 28, 87, 100], "displai": 19, "myvari": 19, "my": 19, "section": [19, 28], "header": 19, "render": 19, "begin": [19, 33, 34, 35, 36, 50, 81, 171], "underlin": 19, "emb": 19, "symbol": 19, "splitter": 19, "guidelin": 20, "practic": [20, 45, 67, 80, 116, 167], "index": [20, 29, 30, 33, 35, 38, 60, 82, 90, 94, 98, 124, 131, 138, 139, 141, 160, 161, 162, 171], "assign": [20, 124], "interfac": [20, 116, 167, 170], "dispatch": [20, 24, 169], "simpl": 22, "bsd": 22, "licens": 22, "pure": 22, "apach": 22, "thorough": 22, "minim": [22, 167], "discov": 22, "easili": [22, 24, 167, 169, 172], "advanc": [22, 24, 169], "anywher": 22, "multi": [22, 24, 48, 62, 64, 76, 108, 164, 167, 171], "machin": [22, 25, 46, 66, 72, 89, 91, 169], "speedup": 22, "extens": 22, "Its": [22, 52, 70, 128, 166], "suitabl": 22, "industri": [22, 48, 62, 64, 76], "academia": 22, "lab": 22, "around": 22, "world": 22, "instal": [22, 167], "instruct": [22, 167], "guid": 22, "friendli": 22, "meet": 22, "team": 22, "consid": [22, 25, 48, 62, 64, 65, 66, 71, 76], "cite": 22, "year": [22, 23], "2019": 22, "volum": [22, 45], "v20": 22, "277": 22, "html": [22, 23], "emsp": 22, "author": 22, "bibtex": 22, "python3": 23, "python2": 23, "probabl": 23, "upgrad": 23, "pain": 23, "free": [23, 25, 66], "anaconda": 23, "distribiut": 23, "ship": 23, "termin": [23, 48, 62, 64, 65, 71, 73, 76], "u": [23, 56, 57, 58, 59, 73, 75, 114, 167], "channel": 23, "And": 23, "cd": 23, "git": 23, "edit": 23, "equival": [23, 27, 28, 53, 57, 60, 90, 94, 115, 124, 127, 128, 132, 149, 151, 162, 163, 172], "uni": 23, "vital": 23, "slimit": 23, "minifi": 23, "rcssmin": 23, "build": 23, "doc": [23, 26, 43, 98, 127, 130], "_build": 23, "answer": [23, 116], "2018": 23, "releas": 23, "ago": 23, "break": 23, "lot": 23, "thing": 23, "quot": 23, "wiki": [23, 116], "legaci": 23, "languag": 23, "strengh": 24, "weak": 24, "loos": 24, "popular": 24, "complet": [24, 116, 169], "thin": 24, "known": [24, 69, 85, 152, 170, 172], "product": [24, 25, 54, 57, 58, 59, 60, 66, 82, 97, 98, 101, 109, 110, 111, 112, 113, 115, 134, 137, 138, 139, 140, 141, 142, 149, 156, 159, 168, 169], "state": [24, 156, 168], "whose": [24, 25, 66, 90, 100, 105, 109, 110, 111, 112, 113, 130, 152, 156], "evolv": [24, 25, 66, 109, 110, 111, 112, 113], "khatri": [24, 55, 57, 58, 59, 60, 82, 138], "rao": [24, 55, 60, 82, 138], "kroneck": [24, 60, 97, 138, 162, 169], "manual": 24, "own": 24, "candecomp": [24, 48, 62, 64, 65, 71, 76, 168], "quickli": [24, 169], "necessarili": 24, "tensor_slic": [25, 66], "2000": [25, 66], "svd": [25, 45, 46, 47, 48, 49, 52, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 85, 114, 143, 144, 166, 170, 172], "numpy_svd": [25, 46, 48, 49, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 166], "normalize_factor": [25, 46, 47, 48, 62, 64, 66, 72, 73, 74, 75, 76], "absolute_tol": [25, 66], "nn_mode": [25, 64, 66, 73], "n_iter_parafac": [25, 66], "th": [25, 52, 66, 70, 87, 90, 109, 110, 111, 112, 113, 138, 151, 166], "x_i": [25, 66, 109, 110, 111, 112, 113, 173], "diag": [25, 66, 90, 109, 110, 111, 112, 113], "a_i": [25, 66, 109, 110, 111, 112, 113], "diagon": [25, 66, 87, 90, 109, 110, 111, 112, 113, 172], "equal": [25, 26, 27, 42, 43, 66, 90, 109, 110, 111, 112, 113, 116, 127, 130, 131], "row": [25, 42, 66, 82, 90, 108, 109, 110, 111, 112, 113, 128, 138, 164], "j_i": [25, 50, 66, 81, 109, 110, 111, 112, 113], "cross": [25, 45, 66, 109, 110, 111, 112, 113, 169, 172], "i_1": [25, 37, 39, 54, 66, 109, 110, 111, 112, 113, 140, 159, 171, 172], "constant": [25, 56, 66, 109, 110, 111, 112, 113, 118], "reformul": [25, 66, 109, 110, 111, 112, 113], "orthogon": [25, 49, 52, 66, 70, 78, 109, 110, 111, 112, 113, 116, 117, 121, 166], "formul": [25, 66, 109, 110, 111, 112, 113], "x_": [25, 66, 109, 110, 111, 112, 113, 171], "hold": [25, 56, 66, 109, 110, 111, 112, 113], "int": [25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 99, 100, 104, 105, 107, 108, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 131, 132, 136, 137, 138, 139, 140, 141, 147, 149, 151, 153, 155, 157, 159, 160, 161, 162, 164, 165, 166], "previous": [25, 53, 66, 171, 172], "parafac2tensor": [25, 66, 109, 110, 111, 112, 113], "initialize_factor": [25, 48, 62, 64, 65, 66, 71, 76], "accept": [25, 46, 48, 49, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 166], "svd_fun": [25, 46, 48, 49, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 166], "aggreg": [25, 46, 47, 48, 62, 64, 66, 72, 73, 74, 75, 76], "1d": [25, 37, 39, 46, 48, 54, 62, 64, 65, 66, 71, 72, 73, 76, 109, 110, 111, 112, 113, 122, 138, 140, 159, 162], "inaccuraci": [25, 66], "toler": [25, 46, 48, 49, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 166], "epsilon": [25, 66, 89], "That": [25, 66, 115, 172], "less": [25, 45, 46, 48, 49, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 115, 132, 166], "stop": [25, 26, 28, 46, 48, 49, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 166], "condit": [25, 26, 43, 66, 86, 119, 120, 127, 130, 163], "tolearnc": [25, 66], "epsilon_": [25, 66], "necessari": [25, 66, 97, 100, 115, 116, 132, 167, 170], "warn": [25, 28, 66], "shown": [25, 66], "info": [25, 66], "randomst": [25, 40, 45, 46, 47, 48, 49, 52, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 78, 80, 82, 114, 117, 118, 119, 120, 121, 122, 123, 166], "projection_matric": [25, 66, 109, 110, 111, 112, 113], "slightli": [25, 66], "li": [25, 66], "wherea": [25, 66], "nd": [25, 48, 62, 64, 66, 76, 117, 119, 120, 121, 131, 136], "reorder": [25, 66, 105], "consequ": 25, "unlik": [25, 99, 104], "l": [25, 66, 107], "294": [25, 66], "cast": [26, 28, 42, 43, 98, 100, 115, 127, 130, 132], "same_kind": [26, 42, 43, 98, 127, 130], "subok": [26, 43, 53, 98, 127, 130, 165], "extobj": [26, 43, 98, 127, 130], "wise": [26, 42, 43, 73, 99, 104, 127, 130, 138], "shorthand": [26, 98, 163], "array_lik": [26, 27, 28, 29, 30, 42, 43, 53, 87, 90, 97, 98, 99, 100, 104, 108, 115, 116, 124, 127, 128, 130, 131, 132, 149, 151, 163, 164, 165], "broadcast": [26, 27, 29, 30, 43, 57, 98, 99, 100, 104, 115, 127, 128, 130, 132, 163], "freshli": [26, 43, 98, 127, 130], "alloc": [26, 43, 98, 127, 130], "At": [26, 43, 127, 130], "ufunc": [26, 27, 43, 98, 99, 100, 104, 115, 127, 130, 132], "elsewher": [26, 43, 90, 127, 130, 163], "uniniti": [26, 43, 108, 127, 130, 164], "within": [26, 28, 43, 53, 127, 130], "remain": [26, 43, 105, 124, 127, 130], "kwarg": [26, 43, 98, 114, 122, 123, 127, 130, 148], "ib": 26, "sqrt": [26, 127], "scalar": [26, 43, 98, 99, 104, 115, 127, 128, 130, 132, 149], "1j": [26, 43], "5620499351813308": 26, "linspac": [26, 28], "num": 26, "101": 26, "plane": [26, 130], "xx": 26, "extent": 26, "grai": 26, "keepdim": [27, 29, 30, 99, 100, 104, 115, 132], "AND": 27, "count": [27, 115, 132], "place": [27, 42, 99, 100, 104, 115, 124, 131, 132], "preserv": [27, 42, 116], "correctli": [27, 29, 30, 99, 100, 104, 115, 132, 163], "against": [27, 29, 30, 99, 100, 104, 115, 132, 170], "sub": [27, 42, 53, 99, 100, 104, 115, 131, 132, 165, 170, 172], "rais": [27, 98, 99, 100, 104, 115, 116, 124, 128, 132, 170], "Not": 27, "nan": [27, 99, 104, 115, 127, 130, 132], "infin": 27, "zero": [27, 48, 50, 61, 62, 64, 67, 76, 80, 81, 90, 100, 105, 108, 111, 112, 113, 124, 132, 138, 149, 165, 171, 172], "o": [27, 45], "id": [27, 172], "28293632": 27, "vari": [27, 28, 56, 57, 59, 100, 110, 115, 132], "step": [28, 67, 80, 132], "evenli": 28, "interv": [28, 130], "half": 28, "exclud": 28, "roughli": 28, "real": [28, 116, 127, 130, 172], "end": [28, 33, 34, 35, 36, 45, 50, 81, 167, 171], "round": [28, 132, 172], "off": 28, "distanc": 28, "adjac": 28, "creation": [28, 90, 108, 164, 167], "__array_function__": [28, 90, 108, 164], "protocol": [28, 90, 108, 164], "overflow": [28, 115, 132], "rule": [28, 98, 128, 132], "greater": [28, 116], "numer": [28, 132, 167, 172], "stabl": 28, "stabil": 28, "due": [28, 46, 48, 62, 64, 65, 71, 72, 76, 172], "larger": 28, "lead": [28, 53, 132], "unexpect": 28, "arbitrari": [28, 98], "int64": 28, "incorrect": 28, "power": [28, 51, 63, 68, 77, 79, 83, 84, 172], "modulo": 28, "10000": 28, "x1": [28, 98, 128], "x2": [28, 98], "7776": 28, "8801": 28, "6176": 28, "625": 28, "6576": 28, "4001": 28, "7185": 28, "5969": 28, "4816": 28, "3361": 28, "care": [28, 170], "endpoint": 28, "ogrid": [28, 163], "mgrid": 28, "grid": 28, "insert": [29, 30, 124], "appropri": [29, 30, 170], "index_arrai": [29, 30], "remov": [29, 30, 48, 62, 64, 76, 98, 115, 132], "argmin": [29, 104], "unravel_index": [29, 30], "flat": [29, 30], "take_along_axi": [29, 30], "expand_dim": [29, 30], "occurr": [29, 30], "ind": [29, 30], "squeez": [29, 30], "minimum": [30, 48, 62, 64, 65, 71, 76, 99, 104], "amin": [30, 99, 104], "local_threadsaf": [31, 125, 133, 146], "hasn": [31, 133], "explicitli": [31, 97, 133], "session": [31, 133], "unfolded_tensor": [32, 38], "refold": [32, 36, 57, 169], "folded_tensor": 32, "skip_end": [33, 34, 35, 36], "partial": [33, 34, 35, 36, 45, 49, 78, 114, 132], "untouch": [33, 34, 35, 36], "vectoris": [34, 36, 37, 39, 59, 162], "ignor": [34, 35, 70, 99, 104, 144], "ravel_tensor": 35, "n_sampl": [35, 50, 67, 80, 81, 82, 102, 103, 122, 123, 134, 136], "n_1": 35, "n_2": 35, "n_i": [35, 82, 138], "i_n": [37, 39, 54, 140, 159, 171], "i_2": [37, 39, 171, 172], "vec": [39, 141], "ful": 39, "valid": [40, 52, 70, 109, 110, 166], "inspir": 40, "scikit": [40, 169, 170, 173], "eponym": 40, "a_min": 41, "a_max": 41, "a1": 42, "a2": 42, "join": [42, 60, 131], "destin": [42, 105, 131], "match": [42, 53, 98, 131, 149, 165], "togeth": [42, 98, 163], "equiv": 42, "unsaf": 42, "control": [42, 53], "kind": [42, 91, 124], "ma": 42, "array_split": 42, "split": [42, 131, 172], "hsplit": 42, "horizont": 42, "vsplit": 42, "vertic": 42, "dsplit": 42, "3rd": 42, "stack": [42, 60, 98, 116], "assembl": [42, 131, 152, 156], "hstack": 42, "vstack": 42, "dstack": 42, "column_stack": 42, "maskedarrai": 42, "masked_arrai": 42, "fill_valu": [42, 170], "999999": 42, "conjug": [43, 98, 140, 141], "imaginari": 43, "alia": [43, 116], "2j": [43, 98, 127], "ey": [43, 97], "input_tensor": [45, 69, 85], "0001": [45, 47, 49, 50, 52, 70, 74, 78, 81, 166], "ttcross": 45, "whole": [45, 144], "fiber": 45, "skeleton": 45, "sweep": 45, "submatrix": 45, "advantag": [45, 149, 170, 172], "tensor_shap": [45, 58], "tensor_ord": 45, "linear": [45, 128, 172], "feasibl": 45, "disadvantag": 45, "accur": [45, 100], "underestim": 45, "contrast": [45, 132], "theoret": 45, "guarante": [45, 124, 172], "kth": [45, 69, 85], "outer": [45, 57, 65, 71, 97, 134, 172], "loop": [45, 65, 71], "pseudo": 45, "qr": 45, "maxvol": 45, "acknowledg": 45, "bodi": 45, "modifi": [45, 46, 48, 53, 62, 64, 65, 71, 72, 76, 124, 151], "tensortoolbox": 45, "daniel": 45, "bigoni": 45, "ivan": [45, 69, 85], "oseledet": [45, 69, 85], "eugen": 45, "tyrtyshnikov": 45, "multidimension": [45, 163], "linearalgebra": 45, "432": 45, "70": [45, 97, 163], "88": 45, "2010": 45, "sergei": 45, "dolgov": 45, "robert": 45, "scheichl": 45, "hybrid": 45, "parametricpd": 45, "arxiv": 45, "preprint": 45, "1707": 45, "04562": 45, "2017": 45, "50": [45, 97, 99, 104, 163, 170], "99": 45, "75": [45, 48, 62, 64, 76], "124": 45, "104": 45, "cvg_criterion": [46, 48, 62, 64, 65, 71, 72, 73, 76], "abs_rec_error": [46, 48, 62, 64, 65, 71, 72, 73, 76], "fixed_mod": [46, 48, 62, 64, 65, 71, 72, 73, 75, 76], "variat": [46, 49, 52, 67, 70, 72, 73, 75, 78, 80, 166], "amnon": [46, 72], "shashua": [46, 72], "tamir": [46, 72], "hazan": [46, 72], "statist": [46, 72], "vision": [46, 47, 72, 74], "proceed": [46, 72], "confer": [46, 47, 72, 74], "icml": [46, 72], "pp": [46, 47, 48, 52, 62, 64, 65, 70, 71, 72, 74, 75, 76, 138, 139, 166, 171, 172, 173], "792": [46, 72], "2005": [46, 48, 62, 64, 72, 76], "yong": [47, 74], "deok": [47, 74], "kim": [47, 74], "seungjin": [47, 74], "choi": [47, 74], "recognit": [47, 74], "cvpr": [47, 74], "2007": [47, 74], "svd_mask_repeat": [48, 62, 64, 76], "everywher": [48, 49, 50, 52, 62, 64, 76, 78, 81, 166, 172], "fill": [48, 49, 52, 62, 64, 76, 78, 94, 108, 164, 165, 166], "rec_error": [48, 62, 64, 65, 71, 73, 76], "criterion": [48, 62, 64, 65, 71, 73, 76], "low_rank_compon": [48, 62, 64, 76], "sparse_compon": [48, 62, 64, 76], "denot": [48, 62, 64, 76, 171], "fraction": [48, 62, 64, 76], "kolda": [48, 52, 62, 64, 65, 67, 70, 71, 75, 76, 80, 138, 139, 166, 171, 172], "w": [48, 52, 62, 64, 65, 70, 71, 75, 76, 138, 139, 166, 171, 172, 173], "bader": [48, 52, 62, 64, 65, 70, 71, 75, 76, 138, 139, 166, 171, 172], "siam": [48, 52, 62, 64, 65, 69, 70, 71, 75, 76, 85, 138, 139, 166, 171, 172], "review": [48, 52, 62, 64, 65, 70, 71, 75, 76, 138, 139, 166, 171, 172], "vol": [48, 52, 62, 64, 65, 70, 71, 75, 76, 138, 139, 166, 171, 172], "455": [48, 52, 62, 64, 65, 70, 71, 75, 76, 138, 139, 166, 171, 172], "2009": [48, 52, 62, 64, 65, 70, 71, 75, 76, 138, 139, 166, 171, 172], "tomasi": [48, 62, 64, 76], "giorgio": [48, 62, 64, 76], "rasmu": [48, 62, 64, 76], "intellig": [48, 62, 64, 76], "laboratori": [48, 62, 64, 76], "163": [48, 62, 64, 76], "180": [48, 62, 64, 76], "food": [48, 62, 64, 76], "phd": [48, 62, 64, 76], "amsterdam": [48, 62, 64, 76], "1998": [48, 62, 64, 76], "hoi": [49, 52, 70, 78, 166], "exclus": [49, 78], "tuckertensor": [49, 78, 159, 160, 161, 162], "reg_": [50, 81], "reg_j": [50, 81], "mu_init": [50, 81], "mu_max": [50, 81], "10000000000": [50, 81], "learning_r": [50, 81], "pca": [50, 81], "alm": [50, 81], "n1": [50, 81, 122, 123], "ns": [50, 81, 122, 123], "regularis": [50, 81, 103, 122, 123], "10e9": [50, 81], "percentag": [50, 81], "tild": [50, 81, 171, 173], "equat": [50, 81, 116, 128], "align": [50, 81], "reg": [50, 81], "_j": [50, 81], "_e": [50, 81], "_1": [50, 81, 101], "cdot": [50, 81, 138, 139, 141, 149, 171, 172, 173], "n_repeat": [51, 63, 68, 77, 79, 83, 84], "n_iter": [51, 63, 68, 77, 79, 83, 84], "symmetr": [51, 56, 68, 83, 84], "tri": [51, 63, 68, 77, 79, 83, 84], "eigenvalu": [51, 56, 63, 68, 77, 79, 83, 84], "eigenvector": [51, 63, 68, 77, 79, 83, 84], "fixed_factor": [52, 70, 166], "keep": [52, 70, 73, 155, 165, 166, 167], "memori": [53, 60, 90, 108, 124, 132, 164, 165, 170], "layout": [53, 124, 165], "fortran": [53, 90, 108, 116, 124, 164, 165], "contigu": [53, 124, 165], "close": [53, 165], "forc": 53, "arr": 53, "interpret": 53, "writeabl": 53, "flag": 53, "shallow": 53, "mainli": 53, "surpris": 53, "mutabl": 53, "matrix_or_vector": [54, 140, 159], "keep_dim": [54, 159], "2d": [54, 114, 117, 121, 136, 138, 140, 159, 160, 161], "i_k": [54, 138, 139, 140, 159, 171], "i_": [54, 140, 159, 171], "kruskal_multi_mode_dot": 54, "chain": [54, 140, 159], "mode_dot": [54, 141, 159], "khatria": 55, "turn": [56, 57, 58, 59], "u_1": [56, 57, 58, 59, 138, 139], "u_n": [56, 57, 58, 59, 138, 139], "v_1": 56, "v_n": 56, "v_k": 56, "euclidean": 56, "u_k": [56, 58, 138, 139], "absorb": [56, 114], "special": 56, "s_i": [56, 57, 59], "normalisation_weight": 56, "normalised_factor": 56, "factor_matric": [57, 58], "ie": 58, "s_u_i": 58, "exploit": 58, "khatri_rao": [58, 60], "ravel": [59, 124, 138], "mttkrp": 60, "kr_factor": 60, "skip_matrix": [60, 82, 138, 139], "mttkrp2": 60, "mttkrp_part": 60, "multi_mode_dot": [60, 140], "append": [60, 98], "consum": 60, "tensor_idx": 60, "chr": 60, "op": 60, "tl_einsum": 60, "n_channel": 61, "weight_valu": 61, "sparsity_coeffici": [64, 73, 75], "exact": [64, 73, 75, 128, 132], "n_iter_max_inn": [65, 71], "tol_out": [65, 71], "tol_inn": [65, 71], "factor_aux": [65, 71], "inner": [65, 71, 98], "dure": [65, 71, 167], "seper": [65, 71], "divid": [65, 71, 100], "distrbut": [65, 71], "self": [66, 122, 123], "max_stagn": [67, 80], "randomis": [67, 80], "casei": [67, 80], "battaglino": [67, 80], "grei": [67, 80], "ballard": [67, 80], "tamara": [67, 80], "recurs": [69, 85], "v": [69, 73, 75, 85, 87, 101, 114, 167], "scientif": [69, 85], "2295": [69, 85], "2317": [69, 85], "2011": [69, 85], "hal": [73, 75], "r2e3307d426a": 73, "success": [73, 75], "core_sparsity_coeffici": 75, "fista": 75, "nnl": 75, "tensor_i": 75, "core_i": 75, "prod_": [75, 138, 139, 171], "neq": [75, 171], "delta": 75, "tm": 75, "tu": 75, "utu": 75, "utm": 75, "corecross": 75, "tensorcross": 75, "corecross_j": 75, "core_j": 75, "tensorcross_j": 75, "eigenv": [79, 84], "best_factor": [79, 84], "deflat": [79, 84], "indices_list": 82, "return_sampled_row": 82, "subsampl": 82, "taken": [82, 100], "random_sampl": 82, "returned_sampled_row": 82, "sampled_khatri_rao": 82, "matricis": 82, "indices_kr": 82, "tensorized_shap": 86, "rank_2": 86, "boundari": [86, 119, 120, 155], "dictat": 86, "tt_matrix": [86, 169], "view": [87, 105, 124, 151, 171], "question": 87, "diagflat": 87, "trace": 87, "triu": 87, "triangl": 87, "tril": 87, "ident": [90, 128], "almost": [90, 172], "intput": 94, "composit": [97, 132], "prepend": [97, 98], "smallest": 97, "r0": 97, "r1": 97, "rn": 97, "s0": 97, "s1": 97, "sn": 97, "k0": 97, "k1": [97, 134, 142], "kn": 97, "i0": 97, "i1": [97, 172], "iN": 97, "j0": 97, "j1": [97, 134, 142], "jn": [97, 134, 142], "kt": 97, "st": 97, "jt": 97, "visual": 97, "600": 97, "700": 97, "extend": [97, 149], "valueerror": 98, "vdot": 98, "tensordot": 98, "einstein": 98, "summat": [98, 132], "convent": [98, 130], "treat": 98, "resid": 98, "accordingli": 98, "semant": 98, "465": 98, "mix": 98, "usual": [98, 170], "98": 98, "neither": [98, 167], "3j": 98, "0j": [98, 127], "traceback": [98, 124], "recent": [98, 124], "operand": 98, "buffer": [99, 104], "empti": [99, 104, 108, 115, 132, 164, 165], "propag": [99, 104], "nanmax": [99, 104], "fmax": [99, 104], "nanmin": [99, 104], "fmin": [99, 104], "item": [99, 104], "matlab": [99, 104], "maxima": 99, "isnan": [99, 104], "arithmet": [100, 115, 132], "intermedi": [100, 170], "std": 100, "var": 100, "nanmean": 100, "nanstd": 100, "nanvar": 100, "inaccur": 100, "accumul": [100, 115, 132, 138], "allevi": 100, "float16": 100, "extra": 100, "512": 100, "54999924": 100, "55000000074505806": 100, "matrix1": [101, 169], "matrix2": [101, 169], "absolute_valu": 101, "cosin": 101, "mathbf": [101, 171], "_2": 101, "y_true": [102, 103], "y_pred": [102, 103], "ground": [102, 103], "truth": [102, 103], "target": [102, 103], "mean_squared_error": 103, "isn": 104, "move": 105, "These": [105, 169], "uniqu": 105, "swapax": 105, "interchang": 105, "int8": [108, 115, 132, 164], "ones_lik": [108, 165], "slice_idx": 109, "describ": [109, 110, 111, 112, 113], "pad": [111, 112, 113, 155], "n_eigenvec": [114, 167], "eigendecomposit": 114, "eigen": 114, "ambigu": 114, "resolv": 114, "eigsh": 114, "singular": [114, 128, 145, 170, 172], "platform": [115, 132], "unsign": [115, 132], "product_along_axi": 115, "modular": [115, 132], "bit": 115, "536870910": 115, "neutral": [115, 132], "But": 115, "Or": [115, 149], "uint": 115, "q": 116, "orthonorm": 116, "triangular": 116, "raw": 116, "tau": 116, "backward": 116, "earlier": [116, 169], "omit": [116, 163], "econom": 116, "deprec": 116, "letter": 116, "spell": 116, "unitari": 116, "cdoubl": 116, "household": 116, "reflector": 116, "linalgerror": [116, 128], "rq": 116, "lapack": [116, 128], "routin": [116, 128], "dgeqrf": 116, "zgeqrf": 116, "dorgqr": 116, "zungqr": 116, "en": 116, "wikipedia": 116, "qr_factor": 116, "too": [116, 132, 149, 163, 170], "addit": [116, 170], "expos": 116, "lapack_lit": 116, "await": 116, "randn": [116, 131], "allclos": [116, 128], "r2": 116, "matmul": 116, "illustr": 116, "y0": 116, "mx": 116, "graph": 116, "ll": 116, "gram": 116, "schmidt": 116, "inv": 116, "lstsq": [116, 128], "normalise_factor": [117, 118], "dict": [117, 119, 120, 167], "mp": [119, 156], "verifi": [119, 120], "tt_tensor": [119, 120, 169], "3d": [119, 120, 153, 154, 156, 157, 158], "tucker_tensor": [121, 169], "associ": [122, 123, 167], "get_param": [122, 123], "set_param": [122, 123], "newshap": 124, "read": [124, 171], "fastest": 124, "slowest": 124, "account": 124, "reshaped_arrai": 124, "attribut": [124, 165], "attributeerror": 124, "incompat": 124, "modif": 124, "fetch": 124, "sai": 124, "think": 124, "unspecifi": 124, "definit": 127, "ordin": 128, "_gesv": 128, "linearli": 128, "independ": 128, "strang": 128, "2nd": 128, "ed": 128, "orlando": 128, "fl": 128, "academ": 128, "press": 128, "inc": 128, "1980": 128, "pg": 128, "x0": 128, "descend": 129, "emath": 130, "branch": 130, "cut": 130, "continu": 130, "curv": 130, "4j": 130, "concaten": 131, "nest": 131, "sum_along_axi": 132, "cumsum": 132, "cumul": 132, "trapz": 132, "integr": [132, 169], "trapezoid": 132, "individu": 132, "pairwis": 132, "mani": [132, 170], "technic": 132, "fsum": 132, "slower": [132, 138, 149, 162, 170], "advis": 132, "small": [132, 172], "128": 132, "tensor1": [134, 137, 142, 147], "tensor2": [134, 137, 142, 147], "km": [134, 142], "momemt": 136, "n_featur": 136, "d1": 136, "dn": 136, "moment": 136, "n_mode": 137, "generalis": [137, 172], "tradit": [137, 149], "inner_product": 137, "revers": [138, 139, 151], "seen": [138, 172], "khatri_rao_product": 138, "prod": [138, 139, 170], "mathemat": [138, 139, 140, 162], "bigodot": 138, "intuit": 138, "kr_product": 138, "cum_prod": 138, "ij": 138, "kronecker_product": 139, "j_k": 139, "otim": [139, 149], "times_": 140, "matrix_or_vec_list": 141, "times_0": 141, "times_1": 141, "times_n": 141, "svd_threshold": [143, 144], "procrust": 145, "batched_mod": 147, "batch": 147, "contract": [147, 149], "a_ax": 149, "b_ax": 149, "integer_lik": 149, "nth": 149, "0th": 149, "1th": 149, "forth": 149, "4400": 149, "4730": 149, "4532": 149, "4874": 149, "4664": 149, "5018": 149, "4796": 149, "5162": 149, "4928": 149, "5306": 149, "overload": 149, "abbcccdddd": 149, "aaaaabbbbbbcccccccdddddddd": 149, "acc": 149, "bdd": 149, "aaacccc": 149, "bbbdddd": 149, "aaaaacccccc": 149, "bbbbbdddddd": 149, "aaaaaaacccccccc": 149, "bbbbbbbdddddddd": 149, "incl": 149, "abbbbb": 149, "cddddd": 149, "aabbbbbb": 149, "ccdddddd": 149, "aaabbbbbbb": 149, "cccddddddd": 149, "aaaabbbbbbbb": 149, "ccccdddddddd": 149, "abb": 149, "cdd": 149, "aaabbbb": 149, "cccdddd": 149, "aaaaabbbbbb": 149, "cccccdddddd": 149, "aaaaaaabbbbbbbb": 149, "cccccccdddddddd": 149, "abbbcccccddddddd": 149, "aabbbbccccccdddddddd": 149, "acccbbdddd": 149, "aaaaacccccccbbbbbbdddddddd": 149, "whenev": [151, 170], "moveaxi": 151, "argsort": 151, "invert": 151, "transposit": 151, "unchang": [151, 165], "4d": 152, "rank_k": 152, "left_dim_k": 152, "right_dim_k": 152, "rank_": 152, "output_tensor": [152, 156], "reassembl": [153, 157], "factor_list": 155, "n_pad": 155, "pad_boundari": 155, "ring": 155, "0s": 155, "bond": 155, "padded_factor_list": 155, "tucker_multi_mode_dot": 159, "skip_factor": [160, 161, 162], "transpose_factor": [160, 161, 162], "lengh": 160, "asarrai": 163, "yield": 163, "xv": 163, "yv": 163, "80": 163, "zeros_lik": 164, "i4": 164, "overrid": 165, "newli": 165, "impli": 165, "full_lik": 165, "ubiquit": 167, "exactli": [167, 172], "under": 167, "hood": 167, "decid": 167, "introduct": 167, "abl": 167, "default_backend": 167, "haven": 167, "complexifi": 167, "nor": 167, "tradition": [167, 171], "ctx": 167, "floattensor": 167, "cuda": 167, "characteris": 167, "trivial_fun": 167, "trivial": 167, "isol": 167, "go": [167, 172], "random_tensor": [167, 169], "reat": 167, "decomp": 167, "rec": 167, "to_tensor": 167, "everyth": 167, "post": 167, "posthoc": 167, "noth": [167, 171, 172], "manipul": 168, "featur": [168, 172], "studi": 168, "overview": 169, "familiar": 169, "submodul": 169, "contrib": [169, 170, 172], "mention": 169, "anyth": 169, "adapt": [169, 170], "subtlti": 169, "regardless": 169, "10x10x10": 169, "explicit": [169, 170], "zeroth": 169, "random_tuck": 169, "3x4x5": 169, "tucker_to_vec": 169, "aptli": 169, "hand": 169, "crafter": 169, "craft": 169, "tg": 169, "set_tenalg_backend": 169, "liner": 169, "optimis": 169, "applyt": 169, "unseen": 169, "assess": 169, "fulli": [169, 172], "pydata": [169, 170], "nativ": 170, "dens": 170, "represent": [170, 172], "lack": 170, "opinion": 170, "decis": 170, "partial_tuck": 170, "robust_pca": 170, "mirror": 170, "coo": 170, "coord": 170, "rewritten": 170, "properli": 170, "densifi": 170, "watch": 170, "environ": 170, "sparse_auto_densifi": 170, "runtimeerror": 170, "awar": 170, "protect": 170, "caveat": 170, "proport": 170, "stl": 170, "1001": 170, "1002": 170, "starting_weight": 170, "nnz": 170, "starting_factor": 170, "recompos": 170, "worri": 170, "5044": 170, "up": 170, "vs": 170, "densli": 170, "nbyte": 170, "1e9": 170, "gb": 170, "000161408": 170, "024016": 170, "dense_cp": 170, "3858051300048828": 170, "sparse_parafac": 170, "sparse_cp": 170, "053689002990723": 170, "spsolv": 170, "umfpack": 170, "nearli": 170, "x_1": 171, "x_2": 171, "matriz": 171, "i_0": 171, "classic": [171, 172], "i_m": 171, "substack": 171, "map": 171, "original_shap": 171, "greatest": 172, "compactli": 172, "tutori": 172, "Such": 172, "canon": 172, "polyad": 172, "super": 172, "smaller": 172, "000e": 172, "340e": 172, "617e": 172, "914e": 172, "475e": 172, "746e": 172, "physic": 172, "edg": 172, "connect": 172, "ldot": 172, "i_d": 172, "approx": 172, "alpha_1": 172, "alpha_": 172, "g_1": 172, "g_2": 172, "alpha_2": 172, "g_3": 172, "i_3": 172, "alpha_3": 172, "g_d": 172, "address": 172, "mps_decomposit": 172, "mps_decomposition_cross": 172, "matrix_product_st": 172, "tt_to_tensor": 172, "decim": 172, "seri": 173, "y_i": 173, "langl": 173, "rangl": 173, "r_1": 173, "r_n": 173, "krusal": 173, "cpregress": 173, "guo": 173, "kotsia": 173, "patra": 173, "816": 173, "827": 173}, "objects": {"": [[24, 0, 0, "-", "tensorly"]], "tensorly": [[26, 1, 1, "", "abs"], [27, 1, 1, "", "all"], [28, 1, 1, "", "arange"], [29, 1, 1, "", "argmax"], [30, 1, 1, "", "argmin"], [31, 1, 1, "", "backend_context"], [24, 0, 0, "-", "base"], [40, 1, 1, "", "check_random_state"], [41, 1, 1, "", "clip"], [42, 1, 1, "", "concatenate"], [43, 1, 1, "", "conj"], [44, 1, 1, "", "context"], [24, 0, 0, "-", "contrib"], [53, 1, 1, "", "copy"], [24, 0, 0, "-", "cp_tensor"], [24, 0, 0, "-", "datasets"], [24, 0, 0, "-", "decomposition"], [87, 1, 1, "", "diag"], [88, 1, 1, "", "dot"], [89, 1, 1, "", "eps"], [90, 1, 1, "", "eye"], [91, 1, 1, "", "finfo"], [92, 1, 1, "", "get_backend"], [93, 1, 1, "", "index"], [94, 1, 1, "", "index_update"], [95, 1, 1, "", "is_tensor"], [96, 1, 1, "", "kr"], [97, 1, 1, "", "kron"], [98, 1, 1, "", "matmul"], [99, 1, 1, "", "max"], [100, 1, 1, "", "mean"], [24, 0, 0, "-", "metrics"], [104, 1, 1, "", "min"], [105, 1, 1, "", "moveaxis"], [106, 1, 1, "", "ndim"], [107, 1, 1, "", "norm"], [108, 1, 1, "", "ones"], [24, 0, 0, "-", "parafac2_tensor"], [114, 1, 1, "", "partial_svd"], [115, 1, 1, "", "prod"], [116, 1, 1, "", "qr"], [24, 0, 0, "-", "random"], [24, 0, 0, "-", "regression"], [124, 1, 1, "", "reshape"], [125, 1, 1, "", "set_backend"], [126, 1, 1, "", "shape"], [127, 1, 1, "", "sign"], [128, 1, 1, "", "solve"], [129, 1, 1, "", "sort"], [130, 1, 1, "", "sqrt"], [131, 1, 1, "", "stack"], [132, 1, 1, "", "sum"], [24, 0, 0, "-", "tenalg"], [148, 1, 1, "", "tensor"], [149, 1, 1, "", "tensordot"], [150, 1, 1, "", "to_numpy"], [151, 1, 1, "", "transpose"], [24, 0, 0, "-", "tt_matrix"], [24, 0, 0, "-", "tt_tensor"], [24, 0, 0, "-", "tucker_tensor"], [163, 1, 1, "", "where"], [164, 1, 1, "", "zeros"], [165, 1, 1, "", "zeros_like"]], "tensorly.base": [[32, 1, 1, "", "fold"], [33, 1, 1, "", "partial_fold"], [34, 1, 1, "", "partial_tensor_to_vec"], [35, 1, 1, "", "partial_unfold"], [36, 1, 1, "", "partial_vec_to_tensor"], [37, 1, 1, "", "tensor_to_vec"], [38, 1, 1, "", "unfold"], [39, 1, 1, "", "vec_to_tensor"]], "tensorly.contrib.decomposition": [[45, 1, 1, "", "tensor_train_cross"]], "tensorly.contrib": [[24, 0, 0, "-", "sparse"]], "tensorly.contrib.sparse.decomposition": [[46, 1, 1, "", "non_negative_parafac"], [47, 1, 1, "", "non_negative_tucker"], [48, 1, 1, "", "parafac"], [49, 1, 1, "", "partial_tucker"], [50, 1, 1, "", "robust_pca"], [51, 1, 1, "", "symmetric_parafac_power_iteration"], [52, 1, 1, "", "tucker"]], "tensorly.cp_tensor": [[54, 1, 1, "", "cp_mode_dot"], [55, 1, 1, "", "cp_norm"], [56, 1, 1, "", "cp_normalize"], [57, 1, 1, "", "cp_to_tensor"], [58, 1, 1, "", "cp_to_unfolded"], [59, 1, 1, "", "cp_to_vec"], [60, 1, 1, "", "unfolding_dot_khatri_rao"]], "tensorly.datasets.synthetic": [[61, 1, 1, "", "gen_image"]], "tensorly.decomposition": [[62, 2, 1, "", "CP"], [63, 2, 1, "", "CPPower"], [64, 2, 1, "", "CP_NN_HALS"], [65, 2, 1, "", "ConstrainedCP"], [66, 2, 1, "", "Parafac2"], [67, 2, 1, "", "RandomizedCP"], [68, 2, 1, "", "SymmetricCP"], [69, 2, 1, "", "TensorTrain"], [70, 2, 1, "", "Tucker"], [71, 1, 1, "", "constrained_parafac"], [72, 1, 1, "", "non_negative_parafac"], [73, 1, 1, "", "non_negative_parafac_hals"], [74, 1, 1, "", "non_negative_tucker"], [75, 1, 1, "", "non_negative_tucker_hals"], [76, 1, 1, "", "parafac"], [25, 1, 1, "", "parafac2"], [77, 1, 1, "", "parafac_power_iteration"], [78, 1, 1, "", "partial_tucker"], [79, 1, 1, "", "power_iteration"], [80, 1, 1, "", "randomised_parafac"], [81, 1, 1, "", "robust_pca"], [82, 1, 1, "", "sample_khatri_rao"], [83, 1, 1, "", "symmetric_parafac_power_iteration"], [84, 1, 1, "", "symmetric_power_iteration"], [85, 1, 1, "", "tensor_train"], [86, 1, 1, "", "tensor_train_matrix"], [166, 1, 1, "", "tucker"]], "tensorly.decomposition.CP": [[62, 3, 1, "", "fit_transform"]], "tensorly.decomposition.CPPower": [[63, 3, 1, "", "fit_transform"]], "tensorly.decomposition.CP_NN_HALS": [[64, 3, 1, "", "fit_transform"]], "tensorly.decomposition.ConstrainedCP": [[65, 3, 1, "", "fit_transform"]], "tensorly.decomposition.Parafac2": [[66, 3, 1, "", "fit_transform"]], "tensorly.metrics.factors": [[101, 1, 1, "", "congruence_coefficient"]], "tensorly.metrics.regression": [[102, 1, 1, "", "MSE"], [103, 1, 1, "", "RMSE"]], "tensorly.parafac2_tensor": [[109, 1, 1, "", "parafac2_to_slice"], [110, 1, 1, "", "parafac2_to_slices"], [111, 1, 1, "", "parafac2_to_tensor"], [112, 1, 1, "", "parafac2_to_unfolded"], [113, 1, 1, "", "parafac2_to_vec"]], "tensorly.random": [[117, 1, 1, "", "random_cp"], [118, 1, 1, "", "random_parafac2"], [119, 1, 1, "", "random_tt"], [120, 1, 1, "", "random_tt_matrix"], [121, 1, 1, "", "random_tucker"]], "tensorly.regression.cp_regression": [[122, 2, 1, "", "CPRegressor"]], "tensorly.regression.cp_regression.CPRegressor": [[122, 3, 1, "", "fit"], [122, 3, 1, "", "get_params"], [122, 3, 1, "", "predict"], [122, 3, 1, "", "set_params"]], "tensorly.regression.tucker_regression": [[123, 2, 1, "", "TuckerRegressor"]], "tensorly.regression.tucker_regression.TuckerRegressor": [[123, 3, 1, "", "fit"], [123, 3, 1, "", "get_params"], [123, 3, 1, "", "predict"], [123, 3, 1, "", "set_params"]], "tensorly.tenalg": [[133, 1, 1, "", "backend_context"], [134, 1, 1, "", "batched_outer"], [135, 1, 1, "", "get_backend"], [136, 1, 1, "", "higher_order_moment"], [137, 1, 1, "", "inner"], [138, 1, 1, "", "khatri_rao"], [139, 1, 1, "", "kronecker"], [140, 1, 1, "", "mode_dot"], [141, 1, 1, "", "multi_mode_dot"], [142, 1, 1, "", "outer"], [146, 1, 1, "", "set_backend"], [147, 1, 1, "", "tensordot"]], "tensorly.tenalg.proximal": [[143, 1, 1, "", "procrustes"], [144, 1, 1, "", "soft_thresholding"], [145, 1, 1, "", "svd_thresholding"]], "tensorly.tt_matrix": [[152, 1, 1, "", "tt_matrix_to_tensor"], [153, 1, 1, "", "tt_matrix_to_unfolded"], [154, 1, 1, "", "tt_matrix_to_vec"]], "tensorly.tt_tensor": [[155, 1, 1, "", "pad_tt_rank"], [156, 1, 1, "", "tt_to_tensor"], [157, 1, 1, "", "tt_to_unfolded"], [158, 1, 1, "", "tt_to_vec"]], "tensorly.tucker_tensor": [[159, 1, 1, "", "tucker_mode_dot"], [160, 1, 1, "", "tucker_to_tensor"], [161, 1, 1, "", "tucker_to_unfolded"], [162, 1, 1, "", "tucker_to_vec"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"about": 0, "us": [0, 5, 6], "origin": 0, "core": [0, 24], "develop": [0, 20], "support": 0, "non": [1, 7, 8], "neg": [1, 7, 8], "parafac": [1, 5, 7, 48, 76, 172], "decomposit": [1, 2, 3, 6, 7, 8, 11, 24, 25, 45, 46, 47, 48, 49, 50, 51, 52, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 166, 169, 172], "il": 1, "2": 1, "respons": 1, "data": 1, "covid": 2, "19": 2, "serolog": 2, "dataset": [2, 24, 61, 169], "analysi": 2, "cp": [2, 6, 7, 13, 24, 62, 172], "introduct": [2, 6, 7, 8], "appli": 2, "thi": 2, "tensorli": [2, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169], "inspect": [2, 9], "biolog": 2, "insight": 2, "from": 2, "compon": [2, 9], "refer": [2, 6, 7, 8, 9, 19, 24, 171, 172, 173], "imag": 3, "compress": 3, "via": 3, "tensor": [3, 7, 8, 9, 11, 12, 13, 14, 18, 24, 148, 167, 169, 171, 172, 173], "comput": [4, 9, 10, 15, 16], "time": [4, 10, 15, 16], "line": 5, "search": 5, "constrain": 6, "0": [6, 7, 8], "7": 6, "one": 6, "constraint": 6, "all": [6, 27], "mode": 6, "some": 6, "differ": 6, "scalar": 6, "input": 6, "each": 6, "6": [7, 8], "creat": [7, 8, 9, 171], "synthet": [7, 8, 9, 61], "hal": [7, 8], "exact": 7, "comparison": [7, 8], "tucker": [8, 14, 24, 52, 70, 166, 172], "fista": 8, "activ": 8, "set": [8, 24, 173], "demonstr": 9, "parafac2": [9, 24, 25, 66], "fit": 9, "perform": [9, 24], "metric": [9, 24, 101, 102, 103, 169], "visual": 9, "converg": 9, "rate": 9, "galleri": 11, "exampl": [11, 19, 170], "content": 11, "gener": 11, "practic": [11, 18], "applic": 11, "method": 11, "regress": [11, 13, 14, 24, 102, 103, 122, 123, 169, 173], "basic": [12, 167, 171], "oper": [12, 24], "backend": [17, 18, 24, 167, 169, 170], "system": [17, 167], "how": [17, 18, 167], "work": [17, 18], "The": 17, "class": [17, 18, 24], "load": 17, "function": [17, 19, 24, 167], "s": [17, 167], "dispatch": 17, "contribut": 18, "guidelin": 18, "compat": 18, "In": 18, "context": [18, 24, 44, 167], "index": [18, 24, 93], "assign": [18, 24], "numpi": [18, 24], "style": [18, 24], "test": [18, 23], "interfac": [18, 24], "wrapper": 18, "write": 19, "document": [19, 23], "docstr": 19, "modul": 19, "titl": 19, "guid": [20, 168], "instal": 23, "pre": 23, "requisit": 23, "pip": 23, "recommend": 23, "conda": 23, "clone": 23, "github": 23, "repositori": 23, "run": 23, "compil": 23, "why": [23, 167, 170], "python": 23, "3": 23, "api": 24, "A": 24, "unifi": 24, "avail": 24, "arrai": 24, "creation": 24, "manipul": [24, 169], "algebra": [24, 169], "base": [24, 32, 33, 34, 35, 36, 37, 38, 39], "cp_tensor": [24, 54, 55, 56, 57, 58, 59, 60], "form": [24, 172], "tucker_tensor": [24, 159, 160, 161, 162], "tt_tensor": [24, 155, 156, 157, 158], "train": [24, 172], "mp": 24, "tt_matrix": [24, 152, 153, 154], "matric": 24, "tt": 24, "parafac2_tensor": [24, 109, 110, 111, 112, 113], "tenalg": [24, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "measur": 24, "random": [24, 117, 118, 119, 120, 121, 169], "sampl": [24, 169], "contrib": [24, 45, 46, 47, 48, 49, 50, 51, 52], "experiment": [24, 169], "featur": [24, 169], "spars": [24, 46, 47, 48, 49, 50, 51, 52, 170], "ab": 26, "arang": 28, "argmax": 29, "argmin": 30, "backend_context": [31, 133], "fold": [32, 171], "partial_fold": 33, "partial_tensor_to_vec": 34, "partial_unfold": 35, "partial_vec_to_tensor": 36, "tensor_to_vec": 37, "unfold": [38, 171], "vec_to_tensor": 39, "check_random_st": 40, "clip": 41, "concaten": 42, "conj": 43, "tensor_train_cross": 45, "non_negative_parafac": [46, 72], "non_negative_tuck": [47, 74], "partial_tuck": [49, 78], "robust_pca": [50, 81], "symmetric_parafac_power_iter": [51, 83], "copi": 53, "cp_mode_dot": 54, "cp_norm": 55, "cp_normal": 56, "cp_to_tensor": 57, "cp_to_unfold": 58, "cp_to_vec": 59, "unfolding_dot_khatri_rao": 60, "gen_imag": 61, "cppower": 63, "cp_nn_hal": 64, "constrainedcp": 65, "randomizedcp": 67, "symmetriccp": 68, "tensortrain": 69, "constrained_parafac": 71, "non_negative_parafac_h": 73, "non_negative_tucker_h": 75, "parafac_power_iter": 77, "power_iter": 79, "randomised_parafac": 80, "sample_khatri_rao": 82, "symmetric_power_iter": 84, "tensor_train": 85, "tensor_train_matrix": 86, "diag": 87, "dot": 88, "ep": 89, "ey": 90, "finfo": 91, "get_backend": [92, 135], "index_upd": 94, "is_tensor": 95, "kr": 96, "kron": 97, "matmul": 98, "max": 99, "mean": 100, "factor": 101, "congruence_coeffici": 101, "mse": 102, "rmse": 103, "min": 104, "moveaxi": 105, "ndim": 106, "norm": 107, "ones": 108, "parafac2_to_slic": [109, 110], "parafac2_to_tensor": 111, "parafac2_to_unfold": 112, "parafac2_to_vec": 113, "partial_svd": 114, "prod": 115, "qr": 116, "random_cp": 117, "random_parafac2": 118, "random_tt": 119, "random_tt_matrix": 120, "random_tuck": 121, "cp_regress": 122, "cpregressor": 122, "tucker_regress": 123, "tuckerregressor": 123, "reshap": 124, "set_backend": [125, 146], "shape": 126, "sign": 127, "solv": 128, "sort": 129, "sqrt": 130, "stack": 131, "sum": 132, "batched_out": 134, "higher_order_mo": 136, "inner": 137, "khatri_rao": 138, "kroneck": 139, "mode_dot": 140, "multi_mode_dot": 141, "outer": 142, "proxim": [143, 144, 145], "procrust": 143, "soft_threshold": 144, "svd_threshold": 145, "tensordot": [147, 149], "to_numpi": 150, "transpos": 151, "tt_matrix_to_tensor": 152, "tt_matrix_to_unfold": 153, "tt_matrix_to_vec": 154, "pad_tt_rank": 155, "tt_to_tensor": 156, "tt_to_unfold": 157, "tt_to_vec": 158, "tucker_mode_dot": 159, "tucker_to_tensor": 160, "tucker_to_unfold": 161, "tucker_to_vec": 162, "where": 163, "zero": 164, "zeros_lik": 165, "do": 167, "i": 167, "chang": 167, "case": 167, "studi": 167, "pytorch": 167, "On": 167, "cpu": 167, "gpu": 167, "user": 168, "quick": 169, "start": 169, "organ": 169, "separ": 170, "algorithm": 170, "usag": 170, "miss": 170, "valu": 170, "candecomp": 172, "matrix": 172, "product": 172, "state": 172, "implement": 172}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})